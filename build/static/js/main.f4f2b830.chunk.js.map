{"version":3,"sources":["components/General/Priority/Priority.js","components/Dashboard/ExpiringTable/ExpiringColumns.js","components/General/TooltipComponent/index.js","components/General/TooltipComponent/TooltipComponent.js","api/rawMaterial/RawMaterial.js","api/dashboard/ShoppingList.js","api/dashboard/ExpiringMaterials.js","api/statistics/Statistics.js","api/brands/brands.js","api/locations/locations.js","api/authentication/authentication.js","api/materialForms/MaterialForms.js","api/sfp/SemiFinishedProduct.js","api/api.js","components/Dashboard/ExpiringTable/ExpiringTable.js","components/Dashboard/ExpiringTable/index.js","components/Dashboard/ShoppingTable/index.js","components/Dashboard/ShoppingTable/ShoppingTable.js","constants/Colors.js","components/Dashboard/DashboardCards/index.js","components/Dashboard/DashboardCards/DashboardCards.js","context/auth-context.js","components/General/Sidebar/Sidebar.js","components/General/Sidebar/index.js","components/General/SidebarDrawer/SidebarDrawer.js","components/General/NavBar/NavBar.js","components/General/NavBar/index.js","screens/Template.js","screens/Dashboard/Dashboard.js","images/tetrapak_logo.png","components/LoginComponent/index.js","components/LoginComponent/LoginComponent.js","screens/LoginPage/LoginPage.js","components/InputFields/InputWithAutoComplete.js","components/InputFields/InputSelect.js","components/InputFields/InputRangePicker.js","components/InputFields/PriorityChooser.js","components/InputFields/InputField.js","components/InputFields/InputDatePicker.js","components/General/FilterModal/index.js","components/General/FilterModal/FilterModal.js","components/Inventory/RawMaterialTable/RawMaterialFilter/index.js","components/Inventory/RawMaterialTable/RawMaterialFilter/RawMaterialFilter.js","helper/Checker.js","context/edit-raw-material.js","components/General/InputNumber/index.js","components/General/InputNumber/InputNumber.js","classes/RawMaterialClass.js","helper/Sort.js","components/Inventory/EditBrands/EditBrands.js","components/Inventory/EditBrands/index.js","components/Inventory/EditLocations/EditLocations.js","components/Inventory/EditLocations/index.js","components/General/ImageUploader/index.js","components/General/ImageUploader/ImageUploader.js","components/General/Units.js","components/Inventory/EditRawMaterial/EditRawMaterial.js","components/Inventory/EditRawMaterial/index.js","components/Inventory/CreateRawMaterial/Units.js","components/Inventory/CreateRawMaterial/CreateRawMaterial.js","components/Inventory/CreateRawMaterial/index.js","components/Inventory/RawMaterialTable/index.js","components/Inventory/RawMaterialTable/RawMaterialTable.js","components/Inventory/SfpTable/SfpFilter/index.js","components/Inventory/SfpTable/SfpFilter/SfpFilter.js","components/Inventory/ManageFormulation/index.js","components/Inventory/ManageFormulation/ManageFormulation.js","classes/SfpClass.js","components/General/TextEditor/index.js","components/General/TextEditor/TextEditor.js","components/Inventory/CreateSfp/CreateSfp.js","components/Inventory/CreateSfp/index.js","context/edit-sfp.js","components/Inventory/EditSfp/EditSfp.js","components/Inventory/EditSfp/index.js","components/Inventory/SfpTable/SfpTable.js","components/Inventory/SfpTable/index.js","screens/Inventory/Inventory.js","screens/RawMaterial/RawMaterialColumns.js","screens/InventoryInterface.js","components/General/ReductionReasons.js","components/Inventory/StockInterface/StockInterface.js","components/Inventory/StockInterface/index.js","components/General/Notifications/Notifications.js","classes/EditStockForm.js","components/Inventory/ManageRawMaterialStock/index.js","components/Inventory/ManageRawMaterialStock/ManageRawMaterialStock.js","screens/RawMaterial/RawMaterial.js","screens/SemiFinishedProduct/SemiFinishedProductColumns.js","components/Inventory/ManageSfpStock/ManageSfpStock.js","components/General/TextEditorReadOnly/index.js","components/General/TextEditorReadOnly/TextEditorReadOnly.js","screens/SemiFinishedProduct/index.js","screens/SemiFinishedProduct/SemiFinishedProduct.js","images/cones.png","screens/PageNotFound.js","App.js","index.js"],"names":["getPriority","expirationDate","difference","moment","diff","getPriorityIcon","color","priority","className","style","background","toUpperCase","ExpiringColumns","title","dataIndex","key","sorter","a","b","name","localeCompare","render","record","to","id","company","country","expiration_date","format","marginBottom","TooltipComponent","component","text","trigger","fetchCompanies","axios","get","response","array","data","forEach","item","push","value","sort","console","log","message","fetchMaterial","fetchLogistics","fetchTotalAmount","fetchCountries","fetchAll","editMaterial","put","catch","err","handleRestock","addStock","post","res","updateExpirationDate","updateStock","disableStock","updateTotalAmount","error","uploadImage","image","formData","FormData","append","headers","then","Location","deleteImage","delete","updateImage","createRawMaterial","form","raw_material_id","success","deleteAllLogistics","deleteRawMaterial","disableRawMaterial","disableAllLogistics","fetchShoppingList","fetchExpiringMaterials","fetchTotalMaterials","map","total","fetchTotalExpiredMaterials","fetchAllCompanies","fetchAllCountries","deleteCompany","brand","warning","addCompany","updateCompany","new_brand","new_company","fetchLocations","locationArray","location","addLocation","updateLocation","new_location","deleteLocation","login","email","password","timeout","user","sessionStorage","setItem","firstname","lastname","clear","loggedIn","fetchForms","formsArray","fetchTable","fetchSfp","fetchFormulation","editInformation","editFormulation","createSfp","sfp_id","sfp_name","createFormulation","rawMaterial","deleteSfp","disableSfp","API","RawMaterial","dashboard","Dashboard","statistics","Statistics","brands","Brands","locations","Locations","authentication","Authentication","materialforms","MaterialForms","sfp","Sfp","ExpiringTable","useState","tableLoading","setTableLoading","setData","useEffect","Error","today_date","shape","size","ArrowsAltOutlined","spinning","tip","columns","filter","col","dataSource","pagination","pageSize","rowKey","ShoppingTable","shoppingList","setShoppingList","handleRemove","ShoppingColumns","display","justifyContent","alignContent","onConfirm","okText","cancelText","type","danger","DeleteOutlined","fontSize","lightBlue","darkBlue","DashboardCards","ExpiredMaterials","setExpiredMaterials","TotalMaterials","setTotalMaterials","gutter","span","bordered","SnippetsOutlined","FileExclamationOutlined","FileSyncOutlined","FileDoneOutlined","AuthContext","createContext","AuthProvider","props","setLoggedIn","setUser","storedUserEmail","getItem","getUserSession","authContextValue","logout","userSession","Provider","useAuth","React","useContext","Sider","Layout","Sidebar","history","useHistory","useLocation","pathname","breakpoint","collapsedWidth","ExperimentFilled","marginRight","theme","mode","selectedKeys","split","Item","icon","PieChartFilled","SnippetsFilled","ProfileFilled","ReconciliationFilled","ClockCircleFilled","SidebarDrawer","isVisible","setIsVisible","onClose","onClick","MenuOutlined","visible","placement","width","Header","Text","Typography","NavBar","handleLogout","menu","borderRadius","overlay","e","preventDefault","UserOutlined","Content","Footer","Template","content","marginTop","LoginComponent","loginSuccess","onFinish","values","initialValues","remember","onFinishFailed","errorInfo","rules","required","prefix","MailOutlined","placeholder","Password","EyeOutlined","wrapperCol","offset","htmlType","LoginPage","src","Logo","alt","InputWithAutoComplete","header","onChange","options","filterOption","inputValue","option","indexOf","allowClear","suffix","SearchOutlined","InputSelect","RangePicker","DatePicker","InputRangePicker","showToday","PriorityChooser","Group","defaultValue","buttonStyle","Button","InputField","InputDatePicker","FilterModal","onOk","onCancel","maskClosable","paddingBottom","RawMaterialFilter","filterVisible","closeFilter","handleFilter","handleClear","companies","setCompanies","countries","setCountries","forms","setForms","setLocations","setBrand","setCountry","setLocation","setForm","receivedDate","setReceivedDate","setExpirationDate","setPriority","passStatesToParent","dataMap","Map","set","target","checkString","o1","o2","checkURLString","checkNumber","n1","n2","checkDate","inputData","startDate","endDate","date","isAfter","isSame","isBefore","dateFormChecker","RawMaterialContext","EditRawMaterialProvider","editVisible","setEditVisible","editContextCalue","openEdit","closeEdit","stopPropagation","useEditRawMaterial","InputNumber","children","max","setInputValue","String","parseInt","min","step","RawMaterialClass","undefined","this","material_name","unit","fat","carbohydrate","protein","salt","sugar","fiber","carb","input","propTypes","PropTypes","number","string","setImage","sortList","Link","EditBrands","close","sendChangesToParent","setBrands","searchField","setSearchField","brandName","setBrandName","state","setState","brandField","onPressEnter","handleEdit","handleAdd","i","length","toLowerCase","ifBrandExists","mergedList","concat","sortedCompanies","handleDelete","obj","centered","footer","includes","handleSearch","enterbutton","height","initialLoad","loadMore","useWindow","sortBy","renderItem","actions","Meta","description","EditLocations","newLocation","setNewLocation","fieldState","setFieldState","locationField","ifLocationExists","sortedList","handlesearchField","ImageUploader","handleImage","imageURL","maxCount","defaultFileList","url","listType","info","file","status","customRequest","onSuccess","onError","setTimeout","isJpgOrPng","restrictions","onRemove","flexDirection","rowGap","UploadOutlined","Units","TextArea","Input","EditRawMaterial","brandModalVisible","setBrandModalVisible","locationModalVisible","setId","setName","setUnit","setFat","setCarb","setProtein","setSalt","setSugar","setFiber","setContent","rawMaterialForm","setRawMaterialForm","oldRawMaterial","setOldRawMaterial","currentImage","setCurrentImage","ifExistsInList","object","find","passRestrictions","handleImageAPI","isEqual","toJsonObject","okType","PlusOutlined","list","autoSize","minRows","CreateRawMaterial","setLocationModalVisible","handleOk","createMaterial","createAPI","imageAPI","RawMaterialTable","rowSelection","Search","table","setTable","searchText","setSearchText","activeFilters","setActiveFilters","setFilterVisible","createModalVisible","setCreateModalVisible","itemNames","rowCount","setRowCount","firstRender","setFirstRender","itemData","setItemData","handleRawMaterialEdit","itemIndex","findIndex","newTable","RawMaterialTableColumns","total_amount","menuItems","fetchItemData","EllipsisOutlined","states","count","entries","filtered_table","received_date","onSearch","newMaterial","position","SfpFilter","ManageFormulation","formulation","handleFormulation","selected","setSelected","formulationArray","Object","keys","selectedRowKeys","hideSelectAll","temp","percentage","SfpClass","process_steps","sfpClass","n","s","TextEditor","originalData","disabled","editor","ClassicEditor","config","removePlugins","onReady","event","getData","onBlur","onFocus","TabPane","Tabs","CreateSfp","sfpForm","setSfpForm","setFormulation","processSteps","setProcessSteps","showFormulationModal","setShowFormulationModal","formulation_columns","editPercentage","createSfpAPI","selectRawMaterials","defaultActiveKey","tab","SfpContext","EditSfpProvider","useEditSfp","EditSfp","editData","editForm","originalForm","JSON","parse","stringify","SfpTable","showCreateModal","setShowCreateModal","setItemForm","createSfpModal","fetchItemFormulation","handleSfpEdit","sfp_columns","amount","fields","filteredTable","Inventory","general_columns","nuitrition_columns","stocks_columns","InventoryInterface","information","products","manageStock","openManageStock","edit","InfoCircleOutlined","EditOutlined","tabPosition","ReductionReasons","StockInterface","reduceStock","AddStockComponents","logistics","reason","setReason","tabPane","setTabPane","logistic_columns","stock_id","editStock","stocks","onTabClick","changeTabPane","onSelect","SuccessNotification","notification","duration","EditStockForm","stock","old_amount","subtracted_amount","new_amount","editedAmount","currentAmount","ManageRawMaterialStock","sendAddToParent","sendReductionToParent","totalAmount","logisticList","setLogisticList","setEditForm","setOriginalForm","setAmount","orderDate","setOrderDate","checkEmptyInput","isPassingRestrictions","isSameOrAfter","isSameOrBefore","order_date","add","sendReductionsToAPI","totalReducedAmount","index","updateForm","filteredList","materialName","setMaterialName","reStock","setReStock","setLogistics","tableLoading1","setTableLoading1","tableLoading2","setTableLoading2","showAddReduce","setShowAddReduce","setTotalAmount","match","params","shopping_list","informationTab","checked","Columns","scroll","x","reductionAmount","ManageSfpStock","productionDate","setProductionDate","production_date","TextEditorReadOnly","toolbar","SemiFinishedProduct","tableLoading3","setTableLoading3","showStockModal","setShowStockModal","DOMPurify","sanitize","editModal","wrapper","justifyItems","gridTemplateRows","PageNotFound","Photo","App","exact","path","createBrowserHistory","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f4f2b830.chunk.js","sourcesContent":["import moment from \"moment\";\nimport \"./Priority.scss\";\n\n/* \n  Calculates the priority of an expiration date\n*/\n\nexport const getPriority = (expirationDate) => {\n  const difference = moment(expirationDate).diff(moment(), \"days\");\n  if (difference < 0) {\n    return \"expired\";\n  } else if (difference < 30) {\n    return \"high\";\n  } else if (difference < 365) {\n    return \"normal\";\n  } else {\n    return \"low\";\n  }\n};\n\n/* Handles expiration date and returns icon */\nexport const getPriorityIcon = (expirationDate) => {\n  const difference = moment(expirationDate).diff(moment(), \"days\");\n  let color = \"\";\n  let priority = \"\";\n  if (difference < 0) {\n    priority = \"Expired\";\n    color = \"#ff4d4f\";\n  } else if (difference < 30) {\n    priority = \"High\";\n    color = \"#F2C94C\";\n  } else if (difference < 365) {\n    priority = \"Normal\";\n    color = \"#29CC97\";\n  } else {\n    priority = \"Low\";\n    color = \"#9A9DA5\";\n  }\n  return (\n    <div className=\"Priority\">\n      <div className=\"priority-design\" style={{ background: `${color}` }}>\n        {priority.toUpperCase()}\n      </div>\n    </div>\n  );\n};\n","import moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport { getPriorityIcon } from \"../../General/Priority/Priority\";\n\nconst ExpiringColumns = [\n  {\n    title: \"ID\",\n    dataIndex: \"id\",\n    key: \"id\",\n  },\n  {\n    title: \"Item name\",\n    dataIndex: \"name\",\n    key: \"name\",\n    sorter: (a, b) => a.name.localeCompare(b.name),\n    render: (name, record) => (\n      <Link to={\"/inventory/rawmaterial/\" + record.id}>{name}</Link>\n    ),\n  },\n  {\n    title: \"Brand\",\n    dataIndex: \"company\",\n    key: \"company\",\n    sorter: (a, b) => a.company.localeCompare(b.company),\n  },\n  {\n    title: \"Country\",\n    dataIndex: \"country\",\n    key: \"country\",\n    sorter: (a, b) => a.country.localeCompare(b.country),\n  },\n  {\n    title: \"Expiration Date\",\n    dataIndex: \"expiration_date\",\n    key: \"expiration_date\",\n    sorter: (a, b) =>\n      moment(a.expiration_date).format(\"YYYYMMDD\") -\n      moment(b.expiration_date).format(\"YYYYMMDD\"),\n    render: (expiration_date) =>\n      expiration_date === null ? (\n        <p> </p>\n      ) : (\n        <p style={{ marginBottom: \"auto\" }}>\n          {moment(expiration_date).format(\"MMM D, YYYY\")}\n        </p>\n      ),\n  },\n  {\n    title: \"Priority\",\n    dataIndex: \"priority\",\n    key: \"priority\",\n    sorter: (a, b) =>\n      moment(a.expiration_date).format(\"YYYYMMDD\") -\n      moment(b.expiration_date).format(\"YYYYMMDD\"),\n    render: (priority, record) => getPriorityIcon(record.expiration_date),\n  },\n];\n\nexport default ExpiringColumns;\n","import TooltipComponent from \"./TooltipComponent\";\r\n\r\nexport default TooltipComponent;\r\n","import React from \"react\";\r\nimport { Tooltip } from \"antd\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./TooltipComponent\";\r\n\r\nconst TooltipComponent = ({ component, text, trigger }) => {\r\n  TooltipComponent.propTypes = {\r\n    text: PropTypes.string,\r\n    component: PropTypes.any,\r\n  };\r\n\r\n  return (\r\n    <Tooltip title={text} color=\"#00bdf2\" trigger={trigger}>\r\n      {component}\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default TooltipComponent;\r\n","import { message } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\nexport const fetchCompanies = async () => {\r\n  try {\r\n    const response = await axios.get(\"/brands/raw_material_companies\");\r\n    const array = [];\r\n    response.data.forEach((item) => {\r\n      array.push({\r\n        value: item.company,\r\n        name: item.company,\r\n      });\r\n    });\r\n    return array.sort((a, b) => a.name.localeCompare(b.name));\r\n  } catch (err) {\r\n    if (err.response) {\r\n      console.log(`Error: ${err.message}`);\r\n      return [];\r\n    }\r\n  }\r\n};\r\n\r\nexport const fetchMaterial = async (id) => {\r\n  try {\r\n    const response = await axios.get(`/raw_material/${id}`);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.log(`Error: ${err.message}`);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const fetchLogistics = async (id) => {\r\n  try {\r\n    const response = await axios.get(`/raw_material_logistics/${id}`);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.log(`Error: ${err.message}`);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const fetchTotalAmount = async (id) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `/raw_material_logistics/${id}/total_amount`\r\n    );\r\n    return response.data;\r\n  } catch (err) {\r\n    console.log(`Error: ${err.message}`);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const response = await axios.get(\"/brands/raw_material_countries\");\r\n    const array = [];\r\n    response.data.forEach((item) => {\r\n      array.push({\r\n        value: item.country,\r\n        name: item.country,\r\n      });\r\n    });\r\n    return array.sort((a, b) => a.name.localeCompare(b.name));\r\n  } catch (err) {\r\n    if (err.response) {\r\n      console.log(`Error: ${err.message}`);\r\n      return [];\r\n    }\r\n  }\r\n};\r\n\r\nexport const fetchAll = async () => {\r\n  try {\r\n    const response = await axios.get(\"/raw_material_table\");\r\n    return response.data;\r\n  } catch (err) {\r\n    if (err.response) {\r\n      console.log(`Error: ${err.message}`);\r\n    }\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const editMaterial = async (id, data) => {\r\n  await axios.put(`/raw_material/${id}/edit`, data).catch((err) => {\r\n    if (err.response) {\r\n      console.log(err.response);\r\n    }\r\n  });\r\n};\r\n\r\nexport const handleRestock = async (id) => {\r\n  await axios.put(`/raw_material/${id}/restock`).catch((err) => {\r\n    if (err.response) {\r\n      console.log(`Error: ${err.message}`);\r\n    }\r\n  });\r\n};\r\n\r\nexport const addStock = async (id, data) => {\r\n  const res = await axios\r\n    .post(`/raw_material_logistics/${id}/add`, data)\r\n    .catch((err) => {\r\n      if (err.response) {\r\n        console.log(`Error: ${err.message}`);\r\n      }\r\n    });\r\n  updateExpirationDate(id);\r\n  return res.data;\r\n};\r\n\r\nexport const updateStock = async (id, data) => {\r\n  await axios.put(`/raw_material_logistics/${id}/update`, data).catch((err) => {\r\n    if (err.response) {\r\n      console.log(`Error: ${err.message}`);\r\n    }\r\n  });\r\n  updateExpirationDate(id);\r\n};\r\n\r\nexport const disableStock = async (id, data) => {\r\n  await axios\r\n    .put(`/raw_material_logistics/${id}/disable`, data)\r\n    .catch((err) => {\r\n      if (err.response) {\r\n        console.log(`Error: ${err.message}`);\r\n      }\r\n    });\r\n  updateExpirationDate(id);\r\n};\r\n\r\nexport const updateTotalAmount = async (id) => {\r\n  try {\r\n    await axios.put(`/raw_material_logistics/${id}/update_total_amount`);\r\n  } catch (err) {\r\n    console.log(`Error: ${err.message}`);\r\n    message.error(\"Failed updating the total amount.\");\r\n  }\r\n};\r\n\r\nexport const uploadImage = async (image, id) => {\r\n  try {\r\n    const formData = new FormData();\r\n    console.log(image);\r\n    formData.append(\"image\", image);\r\n    let response = null;\r\n    await axios\r\n      .post(`/upload/raw_materials/${id}`, formData, {\r\n        headers: { \"Content-type\": \"multipart/form-data\" },\r\n      })\r\n      .catch((error) => {\r\n        if (error.response) {\r\n          console.log(error.response);\r\n          console.log(\"error\", error.message);\r\n        }\r\n      })\r\n      .then((res) => {\r\n        response = res;\r\n      });\r\n    return response.data.Location;\r\n  } catch (err) {\r\n    console.log(`Error: ${err.message}`);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const deleteImage = async (id) => {\r\n  try {\r\n    const res = await axios.delete(`/upload/raw_materials/${id}`);\r\n    return res.data.message;\r\n  } catch (err) {\r\n    console.log(`Error: ${err.message}`);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const updateImage = async (image, id) => {\r\n  const formData = new FormData();\r\n  formData.append(\"image\", image);\r\n  let response = null;\r\n  await axios\r\n    .delete(`/upload/raw_materials/${id}`)\r\n    .catch((err) => {\r\n      if (err.response) {\r\n        console.log(`Error: ${err.message}`);\r\n        return null;\r\n      }\r\n    })\r\n    .then(async () => {\r\n      await axios\r\n        .post(`/upload/raw_materials/${id}`, formData, {\r\n          headers: { \"Content-type\": \"multipart/form-data\" },\r\n        })\r\n        .catch((err) => {\r\n          console.log(`Error: ${err.message}`);\r\n          return null;\r\n        })\r\n        .then((res) => {\r\n          response = res;\r\n        });\r\n    });\r\n  return response.data.Location;\r\n};\r\n\r\nexport const updateExpirationDate = async (id) => {\r\n  try {\r\n    await axios.put(`/raw_material/${id}/update_expiration_date`);\r\n  } catch (err) {\r\n    if (err.response) {\r\n      console.log(`Error: ${err.message}`);\r\n    }\r\n  }\r\n};\r\n\r\nexport const createRawMaterial = async (form) => {\r\n  try {\r\n    let response = 0;\r\n    await axios.post(`/raw_material/create`, form).then((res) => {\r\n      response = res.data.raw_material_id[0];\r\n    });\r\n    message.success(form.name + \" has been added to inventory.\");\r\n    return response;\r\n  } catch (err) {\r\n    console.log(`Error: ${err.message}`);\r\n    message.error(\"Unable to add new raw material.\");\r\n    return \"failed\";\r\n  }\r\n};\r\n\r\nexport const deleteAllLogistics = async (id) => {\r\n  try {\r\n    await axios.delete(`/raw_material_logistics/${id}/all`);\r\n    return;\r\n  } catch (err) {\r\n    console.log(`Error: ${err.message}`);\r\n    message.error(\"Unable to delete all\");\r\n  }\r\n};\r\n\r\nexport const deleteRawMaterial = async (id) => {\r\n  let response = \"failed\";\r\n  try {\r\n    deleteImage(id);\r\n    deleteAllLogistics(id);\r\n    await axios.delete(`/raw_material/${id}`).then(() => {\r\n      message.success(\"Successfully deleted the raw material.\");\r\n      response = \"success\";\r\n    });\r\n    return response;\r\n  } catch (err) {\r\n    if (err.response) {\r\n      console.log(`Error: ${err.message}`);\r\n      message.error(\"Unable to delete the raw material.\");\r\n      return response;\r\n    }\r\n  }\r\n};\r\n\r\nexport const disableRawMaterial = async (id) => {\r\n  let response = \"failed\";\r\n  try {\r\n    deleteImage(id);\r\n    deleteAllLogistics(id);\r\n    await axios.put(`/raw_material/${id}/disable`).then(() => {\r\n      message.success(\"Successfully deleted the raw material.\");\r\n      response = \"success\";\r\n    });\r\n    return response;\r\n  } catch (err) {\r\n    if (err.response) {\r\n      console.log(`Error: ${err.message}`);\r\n      message.error(\"Unable to delete the raw material.\");\r\n      return response;\r\n    }\r\n  }\r\n};\r\n\r\nexport const disableAllLogistics = async (id) => {\r\n  try {\r\n    await axios.put(`/raw_material_logistics/${id}/disable_all`);\r\n    return;\r\n  } catch (err) {\r\n    console.log(`Error: ${err.message}`);\r\n    message.error(\"Unable to delete all\");\r\n  }\r\n};\r\n","import axios from \"axios\";\r\n\r\n/* \r\n    Fetching all items in Inventory with \"shoppingList: true\"\r\n*/\r\nexport const fetchShoppingList = async () => {\r\n  try {\r\n    const response = await axios.get(\"/shopping_list\");\r\n    return response.data;\r\n  } catch (err) {\r\n    if (err.response) {\r\n      console.log(`Error: ${err.message}`);\r\n    }\r\n  }\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const fetchExpiringMaterials = async () => {\r\n  try {\r\n    const response = await axios.get(\"/expiring_materials\");\r\n    return response.data;\r\n  } catch (err) {\r\n    if (err.response) {\r\n      console.log(`Error: ${err.message}`);\r\n    }\r\n  }\r\n};\r\n","import axios from \"axios\";\n\nexport const fetchTotalMaterials = async () => {\n  try {\n    const response = await axios.get(\"/total_materials\");\n    return response.data.map((data) => data.total);\n  } catch (err) {\n    console.log(`Error: ${err.message}`);\n    return 0;\n  }\n};\n\nexport const fetchTotalExpiredMaterials = async () => {\n  try {\n    const response = await axios.get(\"/total_expired_materials\");\n    return response.data.map((data) => data.total);\n  } catch (err) {\n    console.log(`Error: ${err.message}`);\n    return 0;\n  }\n};\n","import axios from \"axios\";\nimport { message } from \"antd\";\n\nexport const fetchAllCompanies = async () => {\n  try {\n    const response = await axios.get(\"/brands/all_companies\");\n    const array = [];\n    response.data.forEach((item) => {\n      array.push({\n        value: item.company,\n        name: item.company,\n      });\n    });\n    return array.sort((a, b) => a.name.localeCompare(b.name));\n  } catch (err) {\n    if (err.response) {\n      console.log(`Error: ${err.message}`);\n      return [];\n    }\n  }\n};\n\nexport const fetchAllCountries = async () => {\n  try {\n    const response = await axios.get(\"/brands/all_countries\");\n    const array = [];\n    response.data.forEach((item) => {\n      array.push({\n        value: item.country,\n        name: item.country,\n      });\n    });\n    return array.sort((a, b) => a.name.localeCompare(b.name));\n  } catch (err) {\n    if (err.response) {\n      console.log(`Error: ${err.message}`);\n      return [];\n    }\n  }\n};\n\nexport const deleteCompany = async (brand) => {\n  await axios\n    .delete(\"/brands/delete_company\", { data: { company: brand } })\n    .catch((err) => {\n      if (err.response) {\n        console.log(`Error: ${err.message}`);\n        message.warning(brand + \" could not be removed.\");\n      }\n    });\n  message.success(brand + \" has been succesfully removed.\");\n};\n\nexport const addCompany = async (brand) => {\n  await axios.post(\"/brands/add_company\", { company: brand }).catch((err) => {\n    if (err.response) {\n      console.log(`Error: ${err.message}`);\n      message.warning(brand + \" could not be added.\");\n    }\n  });\n  message.success(brand + \" has been added.\");\n};\n\nexport const updateCompany = async (brand, new_brand) => {\n  await axios\n    .put(\"/brands/update_company\", {\n      company: brand,\n      new_company: new_brand,\n    })\n    .catch((err) => {\n      if (err.response) {\n        console.log(`Error: ${err.message}`);\n      }\n      message.warning(brand + \" could not be updated.\");\n    });\n  message.success(brand + \" has been changed to \" + new_brand);\n};\n","import { message } from \"antd\";\nimport axios from \"axios\";\n\nexport const fetchLocations = async () => {\n  try {\n    const res = await axios.get(\"/stored_locations/all\");\n    const locationArray = [];\n    res.data.forEach((item) => {\n      locationArray.push({\n        value: item.location,\n        name: item.location,\n      });\n    });\n    return locationArray.sort((a, b) => a.name.localeCompare(b.name));\n  } catch (err) {\n    if (err.response) {\n      console.log(`Error: ${err.message}`);\n      return [];\n    }\n  }\n};\n\nexport const addLocation = async (location) => {\n  await axios\n    .post(\"/stored_locations/add\", { location: location })\n    .catch((err) => {\n      if (err.response) {\n        console.log(`Error: ${err.message}`);\n        message.warning(location + \" could not be added.\");\n      }\n    });\n  message.success(location + \" has been added.\");\n};\n\nexport const updateLocation = async (location, new_location) => {\n  await axios\n    .put(\"/stored_locations/put\", {\n      location: location,\n      new_location: new_location,\n    })\n    .catch((err) => {\n      if (err.response) {\n        console.log(`Error: ${err.message}`);\n      }\n      message.warning(location + \" could not be updated.\");\n    });\n  message.success(location + \" has been changed to \" + new_location);\n};\n\nexport const deleteLocation = async (location) => {\n  await axios\n    .delete(\"/stored_locations/delete\", { data: { location: location } })\n    .catch((err) => {\n      if (err.response) {\n        console.log(`Error: ${err.message}`);\n        message.warning(location + \" could not be removed.\");\n      }\n    });\n  message.success(location + \" has been succesfully removed.\");\n};\n","import { message } from \"antd\";\nimport axios from \"axios\";\n\nexport const login = async (email, password) => {\n  const data = {\n    email: email,\n    password: password,\n  };\n  try {\n    const response = await axios.post(\"/authentication/login\", data, {\n      timeout: 1500,\n    });\n    if (response.data.message === \"success\") {\n      const user = response.data.user;\n      sessionStorage.setItem(\"email\", user.email);\n      sessionStorage.setItem(\"firstname\", user.firstname);\n      sessionStorage.setItem(\"lastname\", user.lastname);\n      console.log(response.data);\n    }\n    return response.data;\n  } catch (err) {\n    if (err.response) {\n      sessionStorage.clear();\n      message.error(\"Error in HTTP request to API.\");\n      console.log(`Error: ${err.message}`);\n      console.log(\"Error in HTTP Request to API\");\n    }\n    return null;\n  }\n};\n\nexport const loggedIn = async (user) => {\n  try {\n    const response = await axios.post(\"/authentication/loggedIn\", {\n      email: user,\n    });\n    return response.data;\n  } catch (err) {\n    if (err.response) {\n      sessionStorage.clear();\n      console.log(`Error: ${err.message}`);\n    }\n    return null;\n  }\n};\n","import axios from \"axios\";\n\nexport const fetchForms = async () => {\n  try {\n    const response = await axios.get(\"/material_forms\");\n    const formsArray = [];\n    response.data.forEach((item) => {\n      formsArray.push({\n        value: item.form,\n        name: item.form,\n      });\n    });\n    return formsArray.sort((a, b) => a.name.localeCompare(b.name));\n  } catch (err) {\n    if (err.response) {\n      console.log(`Error: ${err.message}`);\n      return [];\n    }\n  }\n};\n","import axios from \"axios\";\nimport { message } from \"antd\";\n\nexport const fetchTable = async () => {\n  try {\n    const response = await axios.get(\"/sfp/table\");\n    return response.data;\n  } catch (err) {\n    if (err.response) {\n      console.log(`Error: ${err.message}`);\n    }\n    return [];\n  }\n};\n\nexport const fetchSfp = async (id) => {\n  try {\n    const response = await axios.get(`/sfp/${id}`);\n    return response.data;\n  } catch (err) {\n    if (err.response) {\n      console.log(`Error: ${err.message}`);\n    }\n    return [];\n  }\n};\n\nexport const fetchFormulation = async (id) => {\n  try {\n    const response = await axios.get(`/sfp/${id}/formulation`);\n    return response.data;\n  } catch (err) {\n    if (err.response) {\n      console.log(`Error: ${err.message}`);\n    }\n    return [];\n  }\n};\n\nexport const fetchLogistics = async (id) => {\n  try {\n    const response = await axios.get(`/sfp_logistics/${id}`);\n    return response.data;\n  } catch (err) {\n    if (err.response) {\n      console.log(`Error: ${err.message}`);\n    }\n    return [];\n  }\n};\n\nexport const editInformation = async (id, form) => {\n  try {\n    const response = await axios.put(`/sfp/${id}/edit_information`, form);\n    return response.data;\n  } catch (err) {\n    if (err.response) {\n      console.log(`Error: ${err.message}`);\n    }\n  }\n};\n\nexport const editFormulation = async (id, form) => {\n  try {\n    const response = await axios.put(`/sfp/${id}/edit_formulation`, form);\n    return response.data;\n  } catch (err) {\n    if (err.response) {\n      console.log(`Error: ${err.message}`);\n    }\n  }\n};\n\nexport const uploadImage = async (image, id) => {\n  try {\n    const formData = new FormData();\n    console.log(image);\n    formData.append(\"image\", image);\n    let response = null;\n    await axios\n      .post(`/upload/sfp/${id}`, formData, {\n        headers: { \"Content-type\": \"multipart/form-data\" },\n      })\n      .catch((error) => {\n        if (error.response) {\n          console.log(error.response);\n          console.log(\"error\", error.message);\n        }\n      })\n      .then((res) => {\n        response = res;\n      });\n    return response.data.Location;\n  } catch (err) {\n    console.log(`Error: ${err.message}`);\n    return null;\n  }\n};\n\nexport const deleteImage = async (id) => {\n  try {\n    const res = await axios.delete(`/upload/sfp/${id}`);\n    return res.data.message;\n  } catch (err) {\n    console.log(`Error: ${err.message}`);\n    return null;\n  }\n};\n\nexport const updateImage = async (image, id) => {\n  const formData = new FormData();\n  formData.append(\"image\", image);\n  let response = null;\n  await axios\n    .delete(`/upload/sfp/${id}`)\n    .catch((err) => {\n      if (err.response) {\n        console.log(`Error: ${err.message}`);\n        return null;\n      }\n    })\n    .then(async () => {\n      await axios\n        .post(`/upload/sfp/${id}`, formData, {\n          headers: { \"Content-type\": \"multipart/form-data\" },\n        })\n        .catch((err) => {\n          console.log(`Error: ${err.message}`);\n          return null;\n        })\n        .then((res) => {\n          response = res;\n        });\n    });\n  return response.data.Location;\n};\n\nexport const updateExpirationDate = async (id) => {\n  try {\n    await axios.put(`/sfp/${id}/update_expiration_date`);\n  } catch (err) {\n    if (err.response) {\n      console.log(`Error: ${err.message}`);\n    }\n  }\n};\n\nexport const addStock = async (id, data) => {\n  const res = await axios\n    .post(`/sfp_logistics/${id}/add`, data)\n    .catch((err) => {\n      if (err.response) {\n        console.log(`Error: ${err.message}`);\n      }\n    });\n  updateExpirationDate(id);\n  return res.data;\n};\n\nexport const updateStock = async (id, data) => {\n  await axios.put(`/sfp_logistics/${id}/update`, data).catch((err) => {\n    if (err.response) {\n      console.log(`Error: ${err.message}`);\n    }\n  });\n  updateExpirationDate(id);\n};\n\nexport const disableStock = async (id, data) => {\n  await axios.put(`/sfp_logistics/${id}/disable`, data).catch((err) => {\n    if (err.response) {\n      console.log(`Error: ${err.message}`);\n    }\n  });\n  updateExpirationDate(id);\n};\n\nexport const updateTotalAmount = async (id) => {\n  try {\n    await axios.put(`/sfp_logistics/${id}/update_total_amount`);\n  } catch (err) {\n    console.log(`Error: ${err.message}`);\n    message.error(\"Failed updating the total amount.\");\n  }\n};\n\nexport const createSfp = async (form) => {\n  try {\n    let response = 0;\n    await axios.post(`/sfp`, form).then((res) => {\n      response = res.data.sfp_id[0];\n    });\n    message.success(form.sfp_name + \" has been added to inventory.\");\n    return response;\n  } catch (err) {\n    console.log(`Error: ${err.message}`);\n    message.error(\"Unable to add new raw material.\");\n    return \"failed\";\n  }\n};\n\nexport const createFormulation = async (id, form) => {\n  try {\n    console.log(form);\n    await form.forEach((rawMaterial) => {\n      axios.post(`/sfp/${id}/formulation`, rawMaterial);\n    });\n  } catch (err) {\n    console.log(`Error: ${err.message}`);\n  }\n};\n\nexport const deleteAllLogistics = async (id) => {\n  try {\n    await axios.delete(`/sfp_logistics/${id}/all`);\n    return;\n  } catch (err) {\n    console.log(`Error: ${err.message}`);\n    message.error(\"Unable to delete all\");\n  }\n};\n\nexport const deleteSfp = async (id) => {\n  let response = \"failed\";\n  try {\n    deleteImage(id);\n    deleteAllLogistics(id);\n    await axios.delete(`/sfp/${id}`).then(() => {\n      message.success(\"Successfully deleted the raw material.\");\n      response = \"success\";\n    });\n    return response;\n  } catch (err) {\n    if (err.response) {\n      console.log(`Error: ${err.message}`);\n      message.error(\"Unable to delete the raw material.\");\n      return response;\n    }\n  }\n};\n\nexport const disableAllLogistics = async (id) => {\n  try {\n    await axios.put(`/sfp_logistics/${id}/disable_all`);\n    return;\n  } catch (err) {\n    console.log(`Error: ${err.message}`);\n    message.error(\"Unable to delete logistics\");\n  }\n};\n\nexport const disableSfp = async (id) => {\n  let response = \"failed\";\n  try {\n    deleteImage(id);\n    disableAllLogistics(id);\n    await axios.put(`/sfp/${id}/disable`).then(() => {\n      message.success(\"Successfully deleted the Semi-Finished Product.\");\n      response = \"success\";\n    });\n    return response;\n  } catch (err) {\n    if (err.response) {\n      console.log(`Error: ${err.message}`);\n      message.error(\"Unable to delete the Semi-Finished Product.\");\n      return response;\n    }\n  }\n};\n","import * as RawMaterial from \"./rawMaterial\";\r\nimport * as Dashboard from \"./dashboard\";\r\nimport * as Statistics from \"./statistics\";\r\nimport * as Brands from \"./brands\";\r\nimport * as Locations from \"./locations\";\r\nimport * as Authentication from \"./authentication\";\r\nimport * as MaterialForms from \"./materialForms\";\r\nimport * as Sfp from \"./sfp\";\r\n\r\nexport class API {\r\n  static rawMaterial = RawMaterial;\r\n  static dashboard = Dashboard;\r\n  static statistics = Statistics;\r\n  static brands = Brands;\r\n  static locations = Locations;\r\n  static authentication = Authentication;\r\n  static materialforms = MaterialForms;\r\n  static sfp = Sfp;\r\n}\r\n","import React from \"react\";\nimport \"./ExpiringTable.scss\";\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ArrowsAltOutlined } from \"@ant-design/icons\";\nimport { Spin } from \"antd\";\nimport ExpiringColumns from \"./ExpiringColumns\";\nimport { Table, Button } from \"antd\";\nimport TooltipComponent from \"../../General/TooltipComponent\";\nimport { API } from \"../../../api\";\nimport moment from \"moment\";\n\nconst ExpiringTable = () => {\n  const [tableLoading, setTableLoading] = useState(true);\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    const fetchExpiringMaterials = async () => {\n      const expiringMaterials = await API.dashboard\n        .fetchExpiringMaterials()\n        .then((res) => {\n          setData(res);\n        })\n      if (!(expiringMaterials instanceof Error)) {\n        setTableLoading(false);\n      }\n    };\n    fetchExpiringMaterials();\n  }, []);\n\n  const today_date = moment().format(\"MMMM D YYYY\").toUpperCase()\n\n  return (\n    <div className=\"ExpiringTable\">\n      <div className=\"table-headers\">\n        <div>\n          <span className=\"sub-header-table\">TODAY, {today_date}</span>\n          <br />\n          <h4 className=\"main-header-table\">Expiring Materials</h4>\n        </div>\n        <div className=\"expand-button\">\n          <TooltipComponent\n            text=\"Show inventory\"\n            component={\n              <Button shape=\"circle\" size=\"large\">\n                <Link to=\"/inventory\">\n                  <ArrowsAltOutlined />\n                </Link>\n              </Button>\n            }\n          />\n        </div>\n      </div>\n      <Spin spinning={tableLoading} tip=\"Loading...\" size=\"medium\">\n        <Table\n          className=\"table-header\"\n          columns={ExpiringColumns.filter((col) => col.dataIndex !== \"id\")}\n          dataSource={data}\n          pagination={{ pageSize: 7 }}\n          rowKey={'name'}\n          size=\"small\"\n        />\n      </Spin>\n    </div>\n  );\n};\n\nexport default ExpiringTable;\n","import ExpiringTable from './ExpiringTable';\r\n\r\nexport default ExpiringTable;","import ShoppingTable from './ShoppingTable';\r\n\r\nexport default ShoppingTable;","import { Table, Popconfirm, message, Button } from \"antd\";\nimport { useState, useEffect } from \"react\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\nimport \"./ShoppingTable.scss\";\nimport { Spin } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { API } from \"../../../api\";\n\nconst ShoppingTable = () => {\n  const [tableLoading, setTableLoading] = useState({ tableLoading: true });\n  const [shoppingList, setShoppingList] = useState([]);\n\n  useEffect(() => {\n    const fetchShoppingList = async () => {\n      const shoppingData = await API.dashboard\n        .fetchShoppingList()\n        .then((res) => setShoppingList(res));\n      if (!(shoppingData instanceof Error)) {\n        setTableLoading(false);\n      }\n    };\n    fetchShoppingList();\n  }, []);\n\n  const handleRemove = async (id) => {\n    setShoppingList(shoppingList.filter((item) => item.id !== id));\n    API.rawMaterial.handleRestock(id);\n    message.success(\"Item removed from list\");\n  };\n\n  const ShoppingColumns = [\n    {\n      title: \"ID\",\n      dataIndex: \"id\",\n      key: \"id\",\n    },\n    {\n      title: \"Item name\",\n      dataIndex: \"name\",\n      key: \"name\",\n      render: (name, record) => (\n        <Link to={\"/inventory/rawmaterial/\" + record.id}>{name}</Link>\n      ),\n    },\n    {\n      title: \"Brand\",\n      dataIndex: \"company\",\n      key: \"company\",\n    },\n    {\n      title: \"Country\",\n      dataIndex: \"country\",\n      key: \"country\",\n    },\n    {\n      title: \"Action\",\n      dataIndex: \"\",\n      key: \"\",\n      render: (record) => (\n        <div\n          style={{\n            display: \"grid\",\n            justifyContent: \"center\",\n            alignContent: \"center\",\n          }}\n        >\n          <Popconfirm\n            title=\"Remove from the list?\"\n            onConfirm={() => handleRemove(record.id)}\n            okText=\"Yes\"\n            cancelText=\"No\"\n          >\n            <Button type=\"primary\" className=\"shopping-button\" danger>\n              <DeleteOutlined style={{ fontSize: \"18px\" }} />\n            </Button>\n          </Popconfirm>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <div className=\"shopping-table\">\n      <span className=\"sub-header-table\">RESTOCK</span>\n      <br />\n      <h4 className=\"main-header-table\">Shopping List</h4>\n      <Spin spinning={tableLoading} tip=\"Loading...\" size=\"medium\">\n        <Table\n          className=\"table-content\"\n          columns={ShoppingColumns.filter((col) => col.dataIndex !== \"id\")}\n          dataSource={shoppingList}\n          pagination={{ pageSize: 8 }}\n          rowKey={\"id\"}\n          size=\"small\"\n        />\n      </Spin>\n    </div>\n  );\n};\n\nexport default ShoppingTable;\n","export default {\n  lightBlue: \"#00bdf2\",\n  darkBlue: \"023f88\",\n  text: \"#404040\",\n};\n","import DashboardCards from './DashboardCards';\r\n\r\nexport default DashboardCards;","import { Card, Col, Row, Divider } from \"antd\";\nimport \"./DashboardCards.scss\";\nimport {\n  SnippetsOutlined,\n  FileExclamationOutlined,\n  FileSyncOutlined,\n  FileDoneOutlined,\n} from \"@ant-design/icons\";\nimport { useState, useEffect } from \"react\";\nimport { API } from \"../../../api\";\nimport lightBlue from \"../../../constants/Colors\";\n\nconst DashboardCards = () => {\n  const [ExpiredMaterials, setExpiredMaterials] = useState(0);\n  const [TotalMaterials, setTotalMaterials] = useState(0);\n\n  /* Total Materials */\n  useEffect(() => {\n    const fetchTotalMaterials = async () => {\n      setTotalMaterials(0);\n      API.statistics\n        .fetchTotalMaterials()\n        .then((res) => setTotalMaterials(res));\n    };\n\n    const fetchTotalExpiredMaterials = async () => {\n      setExpiredMaterials(0);\n      await API.statistics\n        .fetchTotalExpiredMaterials()\n        .then((res) => setExpiredMaterials(res));\n    };\n    fetchTotalMaterials();\n    fetchTotalExpiredMaterials();\n  }, []);\n\n  return (\n    <div className=\"site-card-wrapper\">\n      <Row gutter={(50, 24)}>\n        <Col span={6}>\n          <Card className=\"card\" bordered={false}>\n            <div className=\"card-container\">\n              <div>\n                <span className=\"card-header\">Total Materials</span>\n                <br />\n                <span className=\"card-value\">\n                  {TotalMaterials}\n                </span>\n              </div>\n              <div>\n                <div className=\"icon-material-background\">\n                  <SnippetsOutlined className=\"icon-material\" />\n                </div>\n              </div>\n            </div>\n            <Divider className=\"divider\" />\n          </Card>\n        </Col>\n        <Col span={6}>\n          <Card className=\"card\" bordered={false}>\n            <div className=\"card-container\">\n              <div>\n                <span className=\"card-header\">Expired Materials</span>\n                <br />\n                <span className=\"card-value\">{ExpiredMaterials}</span>\n              </div>\n              <div>\n                <div className=\"icon-expired-background\">\n                  <FileExclamationOutlined className=\"icon-expired\" />\n                </div>\n              </div>\n            </div>\n            <Divider className=\"divider\" />\n          </Card>\n        </Col>\n        <Col span={6}>\n          <Card className=\"card\" bordered={false}>\n            <div className=\"card-container\">\n              <div>\n                <span className=\"card-header\" style={lightBlue}>\n                  Reports In Progress\n                </span>\n                <br />\n                <span className=\"card-value\"> 0 </span>\n              </div>\n              <div>\n                <div className=\"icon-progress-background\">\n                  <FileSyncOutlined className=\"icon-progress\" />\n                </div>\n              </div>\n            </div>\n            <Divider className=\"divider\" />\n          </Card>\n        </Col>\n        <Col span={6}>\n          <Card className=\"card\" bordered={false}>\n            <div className=\"card-container\">\n              <div>\n                <span className=\"card-header\">Finished Reports</span>\n                <br />\n                <span className=\"card-value\">0 </span>\n              </div>\n              <div>\n                <div className=\"icon-finished-background\">\n                  <FileDoneOutlined className=\"icon-finished\" />\n                </div>\n              </div>\n            </div>\n            <Divider className=\"divider\" />\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default DashboardCards;\n","import React, { createContext, useEffect, useState } from \"react\";\nimport { API } from \"../api\";\n\n/* Context lets you pass states through your entire application  that is particularly below it*/\n\nconst AuthContext = createContext({});\n\nconst AuthProvider = (props) => {\n  const [loggedIn, setLoggedIn] = useState();\n  const [user, setUser] = useState({});\n\n  useEffect(() => {\n    const getUserSession = async () => {\n      const storedUserEmail = sessionStorage.getItem(\"email\");\n      if (storedUserEmail !== null) {\n        await API.authentication.loggedIn(storedUserEmail).then((res) => {\n          if (res.loggedIn) {\n            setLoggedIn(true);\n            setUser(res.user);\n          }\n        });\n      }\n    };\n    getUserSession();\n  }, []);\n\n  const userSession = () => {\n    return user;\n  };\n\n  const login = () => {\n    setLoggedIn(true);\n  };\n\n  const logout = () => {\n    setLoggedIn(false);\n  };\n\n  const authContextValue = {\n    login,\n    logout,\n    loggedIn,\n    userSession,\n  };\n  return <AuthContext.Provider value={authContextValue} {...props} />;\n};\n\nconst useAuth = () => React.useContext(AuthContext);\n\nexport { AuthProvider, useAuth };\n","import { Link, useLocation, useHistory } from \"react-router-dom\";\r\nimport { Menu, Layout } from \"antd\";\r\nimport {\r\n  PieChartFilled,\r\n  SnippetsFilled,\r\n  ProfileFilled,\r\n  ReconciliationFilled,\r\n  ClockCircleFilled,\r\n  ExperimentFilled,\r\n} from \"@ant-design/icons\";\r\nimport \"./Sidebar.scss\";\r\nimport { useEffect } from \"react\";\r\nimport { useAuth } from \"../../../context/auth-context\";\r\n\r\nconst { Sider } = Layout;\r\n\r\nconst Sidebar = () => {\r\n  const { loggedIn } = useAuth();\r\n  const history = useHistory();\r\n  const location = useLocation().pathname;\r\n\r\n  useEffect(() => {\r\n    if (loggedIn && location === \"/\") {\r\n      history.push(\"/dashboard\");\r\n    }\r\n  }, [loggedIn, history, location]);\r\n\r\n  return (\r\n    <>\r\n      <Sider\r\n        className=\"sidebar\"\r\n        breakpoint=\"lg\"\r\n        collapsedWidth=\"0\"\r\n        trigger={null}\r\n      >\r\n        <div className=\"sidebar-wrapper\">\r\n          <div className=\"sidebar-header\">\r\n            <ExperimentFilled style={{ marginRight: \"8px\" }} />\r\n            Accelerator<span className=\"blue-text\">LAB</span>\r\n          </div>\r\n        </div>\r\n        <Menu\r\n          className=\"sidebar-menu\"\r\n          theme=\"dark\"\r\n          mode=\"inline\"\r\n          selectedKeys={location.split(\"/\")[1]}\r\n        >\r\n          <Menu.Item\r\n            className=\"sidebar-item\"\r\n            key=\"dashboard\"\r\n            icon={<PieChartFilled />}\r\n          >\r\n            <Link to=\"/dashboard\">Dashboard</Link>\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            className=\"sidebar-item\"\r\n            key=\"inventory\"\r\n            icon={<SnippetsFilled />}\r\n          >\r\n            <Link to=\"/inventory\">Inventory</Link>\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            className=\"sidebar-item\"\r\n            key=\"products\"\r\n            icon={<ProfileFilled />}\r\n          >\r\n            Products\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            className=\"sidebar-item\"\r\n            key=\"reports\"\r\n            icon={<ReconciliationFilled />}\r\n          >\r\n            Reports\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            className=\"sidebar-item\"\r\n            key=\"history\"\r\n            icon={<ClockCircleFilled />}\r\n          >\r\n            History\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Sider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import Sidebar from './Sidebar';\r\n\r\nexport default Sidebar;","import \"antd/dist/antd.css\";\r\nimport React, { useState } from \"react\";\r\nimport \"./SidebarDrawer.scss\";\r\nimport { Menu, Drawer, Button } from \"antd\";\r\nimport { useLocation, Link } from \"react-router-dom\";\r\nimport { MenuOutlined } from \"@ant-design/icons\";\r\n\r\nconst SidebarDrawer = () => {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  const location = useLocation().pathname;\r\n\r\n  const showDrawer = () => {\r\n    setIsVisible(true);\r\n  };\r\n\r\n  const closeDrawer = () => {\r\n    setIsVisible(false);\r\n  };\r\n\r\n  return (\r\n    <section className=\"SidebarDrawer\">\r\n      <nav className=\"menu-button\">\r\n        <Button\r\n          className=\"button\"\r\n          onClose={() => setIsVisible(false)}\r\n          onClick={showDrawer}\r\n          icon={<MenuOutlined />}\r\n        />\r\n      </nav>\r\n      <div className=\"drawer\">\r\n        <Drawer\r\n          visible={isVisible}\r\n          onClose={closeDrawer}\r\n          placement=\"left\"\r\n          title=\"Accelerator Lab\"\r\n          width={270}\r\n        >\r\n          <div>\r\n            <Menu\r\n              selectedKeys={location.split(\"/\")[1]}\r\n              mode=\"inline\"\r\n              theme=\"light\"\r\n            >\r\n              <Menu.Item className=\"drawer-item\" key=\"dashboard\">\r\n                <Link to=\"/dashboard\">Dashboard</Link>\r\n              </Menu.Item>\r\n              <Menu.Item className=\"drawer-item\" key=\"inventory\">\r\n                <Link to=\"/inventory\">Inventory</Link>\r\n              </Menu.Item>\r\n              <Menu.Item className=\"drawer-item\" key=\"products\">\r\n                Products\r\n              </Menu.Item>\r\n              <Menu.Item className=\"drawer-item\" key=\"reports\">\r\n                Reports\r\n              </Menu.Item>\r\n              <Menu.Item className=\"drawer-item\" key=\"history\">\r\n                History\r\n              </Menu.Item>\r\n            </Menu>\r\n          </div>\r\n        </Drawer>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SidebarDrawer;\r\n","import \"./NavBar.scss\";\nimport SidebarDrawer from \"../SidebarDrawer/SidebarDrawer\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport { Layout, Avatar, Menu, Dropdown, Typography, message } from \"antd\";\nimport { UserOutlined } from \"@ant-design/icons\";\nimport { useAuth } from \"../../../context/auth-context\";\nimport { useHistory } from \"react-router\";\nimport { useEffect, useState } from \"react\";\n\nconst { Header } = Layout;\nconst { Text } = Typography;\n\nconst NavBar = () => {\n  const { logout, userSession } = useAuth();\n  const history = useHistory();\n  const today_date = moment().format(\"MMMM D, YYYY\");\n  const [user, setUser] = useState({});\n\n  useEffect(() => {\n    setUser({\n      firstname: sessionStorage.getItem(\"firstname\"),\n      lastname: sessionStorage.getItem(\"lastname\"),\n    });\n  }, [userSession]);\n\n  const handleLogout = async () => {\n    message.success(\"You successfully logged out\");\n    await logout();\n    sessionStorage.clear();\n    return history.push(\"/\");\n  };\n\n  const menu = (\n    <Menu style={{ borderRadius: \"4px\" }}>\n      <Menu.Item style={{ borderRadius: \"4px\" }} onClick={handleLogout}>\n        <Text>Logout</Text>\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <section className=\"navbar-layout\">\n      <Header className=\"navbar\">\n        <div className=\"drawer-layout\">\n          <SidebarDrawer />\n        </div>\n        <section className=\"right-side\">\n          <div style={{ fontSize: \"14px\" }}>{today_date}</div>\n          <div className=\"account-component\">\n            <div className=\"divider-component\">\n              <div className=\"v-divider\" />\n            </div>\n            <div>\n              <Dropdown className=\"dropdown-layout\" overlay={menu}>\n                <Text onClick={(e) => e.preventDefault()}>\n                  <Avatar\n                    className=\"avatar\"\n                    size=\"medium\"\n                    icon={<UserOutlined />}\n                  />\n                  <span className=\"account-name\">\n                    {user.firstname} {user.lastname}\n                  </span>\n                </Text>\n              </Dropdown>\n            </div>\n          </div>\n        </section>\n      </Header>\n    </section>\n  );\n};\n\nNavBar.propTypes = {\n  header: PropTypes.string,\n};\n\nexport default NavBar;\n","import NavBar from './NavBar';\r\n\r\nexport default NavBar;","import Sidebar from \"../components/General/Sidebar\";\nimport NavBar from \"../components/General/NavBar\";\nimport { Layout } from \"antd\";\n\nconst { Content, Footer } = Layout;\n\nconst Template = ({ content }) => {\n  return (\n    <Layout className=\"sidebar-header-layout\">\n      <Sidebar />\n      <Layout>\n        <NavBar />\n        <Content className=\"content-layout\">\n          <div className=\"content-wrapper\">{content}</div>\n          <Footer className=\"footer\">Accelerator Lab ©2021 Tetra Pak</Footer>\n        </Content>\n      </Layout>\n    </Layout>\n  );\n};\n\nexport default Template;\n","import \"./Dashboard.scss\";\r\nimport { Row, Col } from \"antd\";\r\nimport ExpiringTable from \"../../components/Dashboard/ExpiringTable\";\r\nimport ShoppingTable from \"../../components/Dashboard/ShoppingTable\";\r\nimport DashboardCards from \"../../components/Dashboard/DashboardCards\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useAuth } from \"../../context/auth-context\";\r\nimport Template from \"../Template\";\r\n\r\nconst Dashboard = () => {\r\n  const [user, setUser] = useState({});\r\n  const { userSession } = useAuth();\r\n\r\n  useEffect(() => {\r\n    setUser(userSession());\r\n  }, [userSession]);\r\n\r\n  return (\r\n    <Template\r\n      content={\r\n        <section name=\"Dashboard\">\r\n          <div title=\"Paragraph-Wrapper\">\r\n            <span className=\"content-sub-header\"> DASHBOARD </span>\r\n            <h1 className=\"blue-text\"> Good Morning, {user.firstname} </h1>\r\n            <span className=\"content-sub-header\">\r\n              Here's what's happening with your inventory today\r\n            </span>\r\n          </div>\r\n          <section title=\"Card-Wrapper\">\r\n            <Row gutter={16}>\r\n              <Col span={24} style={{ marginTop: \"1.5rem\" }}>\r\n                <DashboardCards />\r\n              </Col>\r\n            </Row>\r\n          </section>\r\n          <section className=\"table-wrapper\" style={{ marginTop: \"1.5rem\" }}>\r\n            <div>\r\n              <ExpiringTable />\r\n            </div>\r\n            <div>\r\n              <ShoppingTable />\r\n            </div>\r\n          </section>\r\n        </section>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","export default __webpack_public_path__ + \"static/media/tetrapak_logo.3263c975.png\";","import LoginComponent from './LoginComponent';\r\n\r\nexport default LoginComponent;","import React from \"react\";\r\nimport { Form, Input, Button, message } from \"antd\";\r\nimport { MailOutlined, EyeOutlined } from \"@ant-design/icons\";\r\nimport \"./LoginComponent.scss\";\r\nimport { Redirect, useHistory } from \"react-router\";\r\nimport { API } from \"../../api/api\";\r\nimport { useAuth } from \"../../context/auth-context\";\r\n\r\nconst LoginComponent = () => {\r\n  const { login } = useAuth();\r\n  const history = useHistory();\r\n\r\n  const loginSuccess = async () => {\r\n    await login();\r\n    message.success(\"You successfully logged in\");\r\n    return history.push(\"/dashboard\");\r\n  };\r\n\r\n  const onFinish = async (values) => {\r\n    try {\r\n      const response = await API.authentication.login(\r\n        values.email,\r\n        values.password\r\n        );\r\n      switch (response.message) {\r\n        case \"success\":\r\n          loginSuccess();\r\n          break;\r\n        case \"user not found\":\r\n          message.warning(\"Your email or password is wrong\") && (\r\n            <Redirect to=\"/\" />\r\n          );\r\n          break;\r\n        case \"wrong password\":\r\n          message.warning(\"Your email or password is wrong\") && (\r\n            <Redirect to=\"/\" />\r\n          );\r\n          break;\r\n        default:\r\n          message.error(\"Error occurred when logging in\") && (\r\n            <Redirect to=\"/\" />\r\n          );\r\n          break;\r\n      }\r\n    } catch (err) {\r\n      message.error(\"Not connected to server.\");\r\n    }\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-forms\">\r\n      <Form\r\n        name=\"basic\"\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n      >\r\n        <div className=\"login-form\">\r\n          <Form.Item\r\n            name=\"email\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input your email\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              prefix={<MailOutlined />}\r\n              placeholder=\"Enter your email\"\r\n              className=\"username-input\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            className=\"input-bar\"\r\n            name=\"password\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input your password\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input.Password\r\n              prefix={<EyeOutlined />}\r\n              placeholder=\"Enter your password\"\r\n            />\r\n          </Form.Item>\r\n        </div>\r\n        <div className=\"login-button\">\r\n          <Form.Item\r\n            wrapperCol={{\r\n              offset: 8,\r\n            }}\r\n          >\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Login\r\n            </Button>\r\n          </Form.Item>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginComponent;\r\n","import \"./LoginPage.scss\";\nimport Logo from \"../../images/tetrapak_logo.png\";\nimport LoginComponent from \"../../components/LoginComponent\";;\n\nconst LoginPage = () => {\n  return (\n    <section className=\"LoginPage\">\n      <div className=\"background\">\n        <div className=\"main-container\">\n          <div className=\"header-container\">\n            <span className=\"header\">\n              Log in to {<br />} Accelerator\n              <span className=\"blue-text\">LAB</span>\n            </span>\n          </div>\n          <div className=\"login-container\">\n            <div className=\"login-container-style\">\n              <div className=\"login-header\">Login</div>\n              <div className=\"login-form-container\">\n                <LoginComponent />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"logo-container\">\n          <img src={Logo} alt=\"Tetra Pak Logo\" className=\"logo\" />\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default LoginPage;\n","import PropTypes from \"prop-types\";\nimport { AutoComplete, Input } from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\n\nconst InputWithAutoComplete = ({\n  header,\n  onChange,\n  value,\n  options,\n  placeholder,\n}) => {\n  InputWithAutoComplete.propTypes = {\n    header: PropTypes.string,\n    onChange: PropTypes.func,\n    value: PropTypes.any,\n    options: PropTypes.array,\n    placeholder: PropTypes.string,\n  };\n\n  return (\n    <div name={`${header}`} className=\"header-field-wrapper\">\n      <span className=\"sub-header\">{header}</span>\n      <AutoComplete\n        options={options}\n        filterOption={(inputValue, option) =>\n          option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\n        }\n        onChange={onChange}\n        value={value}\n      >\n        <Input\n          allowClear\n          className=\"input-text\"\n          placeholder={placeholder}\n          suffix={<SearchOutlined style={{ fontSize: \"1rem\" }} />}\n        />\n      </AutoComplete>\n    </div>\n  );\n};\n\nexport default InputWithAutoComplete;\n","import PropTypes from \"prop-types\";\nimport { Select } from \"antd\";\n\nconst InputSelect = ({\n  header,\n  options,\n  onChange,\n  value,\n  placeholder,\n  allowClear,\n}) => {\n  InputSelect.propTypes = {\n    header: PropTypes.string,\n    options: PropTypes.array,\n    onChange: PropTypes.func,\n    value: PropTypes.any,\n    placeholder: PropTypes.string,\n    allowClear: PropTypes.bool,\n  };\n\n  return (\n    <div name={`${header}`} className=\"header-field-wrapper\">\n      <span className=\"sub-header\">{header}</span>\n      <Select\n        options={options}\n        placeholder={placeholder}\n        onChange={onChange}\n        value={value}\n        allowClear={allowClear}\n      />\n    </div>\n  );\n};\n\nexport default InputSelect;\n","import PropTypes from \"prop-types\";\nimport { DatePicker } from \"antd\";\n\nconst { RangePicker } = DatePicker;\n\nconst InputRangePicker = ({ header, value, onChange }) => {\n  InputRangePicker.propTypes = {\n    header: PropTypes.string,\n    value: PropTypes.any,\n    onChange: PropTypes.func,\n  };\n\n  return (\n    <div name={`${header}`} className=\"header-field-wrapper\">\n      <span className=\"sub-header\">{header}</span>\n      <RangePicker\n        allowClear\n        showToday\n        className=\"input-date\"\n        format={\"MMM D, YYYY\"}\n        value={value}\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\nexport default InputRangePicker;\n","import PropTypes from \"prop-types\";\nimport { Radio } from \"antd\";\n\nconst PriorityChooser = ({ header, value, onClick }) => {\n  PriorityChooser.propTypes = {\n    header: PropTypes.string,\n    value: PropTypes.any,\n    onClick: PropTypes.func,\n  };\n\n  return (\n    <div name=\"priority\" className=\"header-field-wrapper\">\n      <span className=\"sub-header\">Priority for Usage</span>\n      <Radio.Group defaultValue=\"\" value={value} buttonStyle=\"solid\">\n        <Radio.Button value=\"\" onClick={onClick}>\n          All\n        </Radio.Button>\n        <Radio.Button value=\"low\" onClick={onClick}>\n          Low\n        </Radio.Button>\n        <Radio.Button value=\"normal\" onClick={onClick}>\n          Normal\n        </Radio.Button>\n        <Radio.Button value=\"high\" onClick={onClick}>\n          High\n        </Radio.Button>\n        <Radio.Button value=\"expired\" onClick={onClick}>\n          Expired\n        </Radio.Button>\n      </Radio.Group>\n    </div>\n  );\n};\n\nexport default PriorityChooser;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Input } from \"antd\";\n\nconst InputField = ({ header, onChange, value, placeholder }) => {\n  InputField.propTypes = {\n    onChange: PropTypes.func,\n    value: PropTypes.string,\n    placeholder: PropTypes.string,\n    header: PropTypes.string,\n  };\n\n  return (\n    <div className=\"header-field-wrapper\">\n      <span className=\"sub-header\">{header}</span>\n      <Input\n        className=\"input-text\"\n        onChange={onChange}\n        value={value}\n        placeholder={placeholder}\n        required\n      />\n    </div>\n  );\n};\n\nexport default InputField;\n","import PropTypes from \"prop-types\";\nimport { DatePicker } from \"antd\";\n\nconst InputDatePicker = ({ header, value, onChange }) => {\n  InputDatePicker.propTypes = {\n    header: PropTypes.string,\n    value: PropTypes.object,\n    onChange: PropTypes.func,\n  };\n\n  return (\n    <div name={`${header}`} className=\"header-field-wrapper\">\n      <span className=\"sub-header\">{header}</span>\n      <DatePicker\n        allowClear\n        showToday\n        className=\"input-date\"\n        format={\"MMM D, YYYY\"}\n        value={value}\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\nexport default InputDatePicker;\n","import FilterModal from \"./FilterModal\";\n\nexport default FilterModal;\n","import PropTypes from \"prop-types\";\nimport { Modal } from \"antd\";\nimport \"./FilterModal.scss\"\n\nconst FilterModal = ({ visible, onOk, onCancel, content }) => {\n  FilterModal.propTypes = {\n    filterVisible: PropTypes.bool,\n    onOk: PropTypes.func,\n    onCancel: PropTypes.func,\n    content: PropTypes.any,\n  };\n\n  return (\n    <Modal\n      visible={visible}\n      onOk={onOk}\n      onCancel={onCancel}\n      maskClosable={false}\n      width={\"650px\"}\n    >\n      <section className=\"FilterComponent\">\n        <span className=\"sub-header\"> What are you looking for?</span>\n        <h1 style={{ paddingBottom: \"1rem\" }}>Choose your filters</h1>\n        {content}\n      </section>\n    </Modal>\n  );\n};\n\nexport default FilterModal;\n","import RawMaterialFilter from \"./RawMaterialFilter\";\r\n\r\nexport default RawMaterialFilter;","import { Button } from \"antd\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { API } from \"../../../../api\";\r\nimport {\r\n  InputWithAutoComplete,\r\n  InputSelect,\r\n  PriorityChooser,\r\n  InputRangePicker,\r\n} from \"../../../InputFields\";\r\nimport FilterModal from \"../../../General/FilterModal\";\r\n\r\nconst RawMaterialFilter = ({\r\n  filterVisible,\r\n  closeFilter,\r\n  handleFilter,\r\n  handleClear,\r\n}) => {\r\n  RawMaterialFilter.propTypes = {\r\n    filterVisible: PropTypes.bool,\r\n    closeFilter: PropTypes.func,\r\n    handleFilter: PropTypes.func,\r\n    handleClear: PropTypes.func,\r\n  };\r\n\r\n  /* Data States */\r\n  const [companies, setCompanies] = useState([]);\r\n  const [countries, setCountries] = useState([]);\r\n  const [forms, setForms] = useState([]);\r\n  const [locations, setLocations] = useState([]);\r\n\r\n  /* Input Field States */\r\n  const [brand, setBrand] = useState(\"\");\r\n  const [country, setCountry] = useState(\"\");\r\n  const [location, setLocation] = useState(null);\r\n  const [form, setForm] = useState(null);\r\n  const [receivedDate, setReceivedDate] = useState(null);\r\n  const [expirationDate, setExpirationDate] = useState(null);\r\n  const [priority, setPriority] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    API.rawMaterial.fetchCompanies().then((res) => setCompanies(res));\r\n    API.rawMaterial.fetchCountries().then((res) => setCountries(res));\r\n    API.locations.fetchLocations().then((res) => setLocations(res));\r\n    API.materialforms.fetchForms().then((res) => setForms(res));\r\n  }, []);\r\n\r\n  const resetFields = () => {\r\n    setBrand(\"\");\r\n    setCountry(\"\");\r\n    setLocation(null);\r\n    setForm(null);\r\n    setReceivedDate(null);\r\n    setExpirationDate(null);\r\n    setPriority(\"\");\r\n    handleClear();\r\n  };\r\n\r\n  const passStatesToParent = async (e) => {\r\n    const dataMap = new Map();\r\n    dataMap.set(\"brand\", brand);\r\n    dataMap.set(\"country\", country);\r\n    dataMap.set(\"location\", location);\r\n    dataMap.set(\"form\", form);\r\n    dataMap.set(\"receivedDate\", receivedDate);\r\n    dataMap.set(\"expirationDate\", expirationDate);\r\n    dataMap.set(\"priority\", priority);\r\n    await handleFilter(dataMap);\r\n    closeFilter(e);\r\n  };\r\n\r\n  const handlePriority = (e) => {\r\n    if (e.target.value === \"\") {\r\n      setPriority(\"\");\r\n    } else {\r\n      setPriority(e.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FilterModal\r\n      visible={filterVisible}\r\n      onOk={passStatesToParent}\r\n      onCancel={closeFilter}\r\n      content={\r\n        <section className=\"rows\">\r\n          <div className=\"columns\">\r\n            <InputWithAutoComplete\r\n              header=\"Brand\"\r\n              onChange={(e) => setBrand(e)}\r\n              value={brand}\r\n              options={companies}\r\n              placeholder={\"All brands...\"}\r\n            />\r\n            <InputWithAutoComplete\r\n              header=\"Country\"\r\n              onChange={(e) => setCountry(e)}\r\n              value={country}\r\n              options={countries}\r\n              placeholder=\"All countries...\"\r\n            />\r\n          </div>\r\n          <div className=\"columns\">\r\n            <InputSelect\r\n              header=\"Stored Location\"\r\n              options={locations}\r\n              value={location}\r\n              placeholder=\"All locations...\"\r\n              onChange={(e) => setLocation(e)}\r\n            />\r\n            <InputSelect\r\n              header=\"Material Form\"\r\n              options={forms}\r\n              value={form}\r\n              placeholder=\"All forms...\"\r\n              onChange={(e) => setForm(e)}\r\n            />\r\n          </div>\r\n          <div className=\"columns\">\r\n            <InputRangePicker\r\n              header=\"Received Date\"\r\n              value={receivedDate}\r\n              onChange={(e) => setReceivedDate(e)}\r\n            />\r\n            <InputRangePicker\r\n              header=\"Expiration Date\"\r\n              value={expirationDate}\r\n              onChange={(e) => setExpirationDate(e)}\r\n            />\r\n          </div>\r\n          <div className=\"priority-clear\">\r\n            <PriorityChooser value={priority} onClick={handlePriority} />\r\n            <Button type=\"dashed\" onClick={resetFields}>\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        </section>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default RawMaterialFilter;\r\n","import moment from \"moment\";\r\n\r\n/* Check if input and existing data is the same */\r\n\r\nexport const checkString = (o1, o2) => {\r\n  return o1 !== null && o1 !== o2 ? true : false;\r\n  //return o1 !== null && o1 !== \"\" && o1 !== o2 ? true : false;\r\n};\r\n\r\n/* Check if input are equal, if input is empty string => return false */\r\n\r\nexport const checkURLString = (o1, o2) => {\r\n  return o1 !== null && o1 !== o2 ? true : false;\r\n};\r\n\r\n/* Check if input satisfies conditions in Edit Raw Material  */\r\n\r\nexport const checkNumber = (n1, n2) => {\r\n  if (n1 != null && n1 !== n2 && n1 <= 100 && n1 >= 0) {\r\n    return true;\r\n  }\r\n  if (n1 > 100 && n1 < 0) {\r\n    console.log(\"Raw material nuitritional fact could not be updated\");\r\n  }\r\n  return false;\r\n};\r\n\r\n/* Check the item date and if requirements are satisfied, return the date in string format */\r\n\r\nexport const checkDate = (inputData, startDate, endDate) => {\r\n  const date = moment(inputData);\r\n  if (startDate == null || endDate == null) {\r\n    return \"\";\r\n  }\r\n  if (\r\n    (date.isAfter(startDate) || date.isSame(startDate, \"date\")) &&\r\n    (date.isBefore(endDate) || date.isSame(endDate, \"date\"))\r\n  ) {\r\n    return date.format(\"YYYYMMDD\");\r\n  }\r\n};\r\n\r\nexport const dateFormChecker = (date) => {\r\n  return date !== \"\" && date !== null;\r\n};","import React, { createContext, useState } from \"react\";\n\nconst RawMaterialContext = createContext({});\n\nconst EditRawMaterialProvider = (props) => {\n  const [editVisible, setEditVisible] = useState({});\n\n  const openEdit = (id) => {\n    setEditVisible({ [id]: true });\n  };\n\n  const closeEdit = (e, id) => {\n    e.stopPropagation();\n    setEditVisible({ [id]: false });\n  };\n\n  const editContextCalue = {\n    openEdit,\n    closeEdit,\n    editVisible,\n  };\n  return <RawMaterialContext.Provider value={editContextCalue} {...props} />;\n};\n\nconst useEditRawMaterial = () => React.useContext(RawMaterialContext);\n\nexport { EditRawMaterialProvider, useEditRawMaterial };\n","import InputNumber from \"./InputNumber\";\r\n\r\nexport default InputNumber;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { InputNumber as AntInputNumber } from \"antd\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../../../styles/inputfields.scss\";\r\n\r\nconst InputNumber = ({\r\n  children,\r\n  value,\r\n  onChange,\r\n  defaultValue,\r\n  max,\r\n  style,\r\n  placeholder,\r\n}) => {\r\n  InputNumber.propTypes = {\r\n    value: PropTypes.number,\r\n    children: PropTypes.any,\r\n    onChange: PropTypes.func,\r\n    defaultValue: PropTypes.any,\r\n    max: PropTypes.number,\r\n    placeholder: PropTypes.string,\r\n  };\r\n\r\n  const [inputValue, setInputValue] = useState();\r\n\r\n  useEffect(() => {\r\n    typeof value === String\r\n      ? setInputValue(parseInt(value))\r\n      : setInputValue(value);\r\n  }, [value]);\r\n\r\n  return (\r\n    <AntInputNumber\r\n      className=\"input-number\"\r\n      type=\"number\"\r\n      placeholder={placeholder}\r\n      value={inputValue}\r\n      size={\"small\"}\r\n      onChange={onChange}\r\n      min={0}\r\n      max={max}\r\n      style={style}\r\n      step={0.1}\r\n      defaultValue={defaultValue}\r\n    >\r\n      {children}\r\n    </AntInputNumber>\r\n  );\r\n};\r\n\r\nexport default InputNumber;\r\n","import PropTypes from \"prop-types\";\nimport { checkString, checkNumber, checkURLString } from \"../helper/Checker\";\n\nclass RawMaterialClass {\n  static propTypes = {\n    name: PropTypes.string,\n    brand: PropTypes.string,\n    country: PropTypes.string,\n    unit: PropTypes.string,\n    form: PropTypes.string,\n    location: PropTypes.string,\n    fat: PropTypes.number,\n    carb: PropTypes.number,\n    protein: PropTypes.number,\n    salt: PropTypes.number,\n    fiber: PropTypes.number,\n    content: PropTypes.string,\n    image: PropTypes.string,\n  };\n\n  #id = null;\n  #name = \"\";\n  #brand = \"\";\n  #country = \"\";\n  #unit = \"\";\n  #form = \"\";\n  #location = \"\";\n  #fat = 0;\n  #carb = 0;\n  #protein = 0;\n  #salt = 0;\n  #sugar = 0;\n  #fiber = 0;\n  #content = \"\";\n  #image = \"\";\n  #data = null;\n\n  constructor(data) {\n    if (data !== undefined && data !== null) {\n      this.#data = data;\n      this.#id = data.raw_material_id;\n      this.#name = data.material_name;\n      this.#brand = data.company;\n      this.#country = data.country;\n      this.#unit = data.unit;\n      this.#form = data.form;\n      this.#location = data.location;\n      this.#fat = data.fat;\n      this.#carb = data.carbohydrate;\n      this.#protein = data.protein;\n      this.#salt = data.salt;\n      this.#sugar = data.sugar;\n      this.#fiber = data.fiber;\n      this.#content = data.content;\n      this.#image = data.image;\n    }\n  }\n\n  /* Return an Json Object of the data */\n\n  toJsonObject() {\n    return {\n      id: this.#id,\n      name: this.#name,\n      company: this.#brand,\n      country: this.#country,\n      unit: this.#unit,\n      form: this.#form,\n      location: this.#location,\n      fat: this.#fat,\n      carb: this.#carb,\n      protein: this.#protein,\n      salt: this.#salt,\n      sugar: this.#sugar,\n      fiber: this.#fiber,\n      content: this.#content,\n      image: this.image,\n    };\n  }\n\n  /* \n    Returns the private variables\n  */\n\n  get id() {\n    return this.#id;\n  }\n\n  get name() {\n    return this.#name;\n  }\n\n  get brand() {\n    return this.#brand;\n  }\n\n  get country() {\n    return this.#country;\n  }\n\n  get unit() {\n    return this.#unit;\n  }\n\n  get form() {\n    return this.#form;\n  }\n\n  get location() {\n    return this.#location;\n  }\n\n  get fat() {\n    return this.#fat;\n  }\n\n  get carb() {\n    return this.#carb;\n  }\n\n  get protein() {\n    return this.#protein;\n  }\n\n  get salt() {\n    return this.#salt;\n  }\n\n  get sugar() {\n    return this.#sugar;\n  }\n\n  get fiber() {\n    return this.#fiber;\n  }\n\n  get content() {\n    return this.#content;\n  }\n\n  get image() {\n    return this.#image;\n  }\n\n  get data() {\n    return this.#data;\n  }\n\n  /* \n    Set functions\n  */\n\n  set id(input) {\n    this.propTypes = {\n      input: PropTypes.number,\n    };\n    if (input >= 0) {\n      this.#id = input;\n    }\n    return this;\n  }\n\n  set name(input) {\n    this.propTypes = {\n      input: PropTypes.string,\n    };\n    if (checkString(input, this.#name)) {\n      this.#name = input;\n    }\n    return this;\n  }\n\n  set brand(input) {\n    this.propTypes = {\n      input: PropTypes.string,\n    };\n    if (checkString(input, this.#brand)) {\n      this.#brand = input;\n    }\n    return this;\n  }\n\n  set country(input) {\n    this.propTypes = {\n      props: PropTypes.string,\n    };\n    if (checkString(input, this.#country)) {\n      this.#country = input;\n    }\n    return this;\n  }\n\n  set unit(input) {\n    this.propTypes = {\n      input: PropTypes.string,\n    };\n    if (checkString(input, this.#unit)) {\n      this.#unit = input;\n    }\n    return this;\n  }\n\n  set form(input) {\n    this.propTypes = {\n      input: PropTypes.string,\n    };\n    if (checkString(input, this.#form)) {\n      this.#form = input;\n    }\n    return this;\n  }\n\n  set location(input) {\n    this.propTypes = {\n      input: PropTypes.string,\n    };\n    if (checkString(input, this.#location)) {\n      this.#location = input;\n    }\n    return this;\n  }\n\n  set fat(input) {\n    this.propTypes = {\n      input: PropTypes.number,\n    };\n    if (checkNumber(input, this.#fat)) {\n      this.#fat = input;\n    }\n    return this;\n  }\n\n  set carb(input) {\n    this.propTypes = {\n      input: PropTypes.number,\n    };\n    if (checkNumber(input, this.#carb)) {\n      this.#carb = input;\n    }\n    return this;\n  }\n\n  set protein(input) {\n    this.propTypes = {\n      input: PropTypes.number,\n    };\n    if (checkNumber(input, this.#protein)) {\n      this.#protein = input;\n    }\n    return this;\n  }\n\n  set salt(input) {\n    this.propTypes = {\n      input: PropTypes.number,\n    };\n    if (checkNumber(input, this.#salt)) {\n      this.#salt = input;\n    }\n    return this;\n  }\n\n  set sugar(input) {\n    this.propTypes = {\n      input: PropTypes.number,\n    };\n    if (checkNumber(input, this.#sugar)) {\n      this.#sugar = input;\n    }\n    return this;\n  }\n\n  set fiber(input) {\n    this.propTypes = {\n      input: PropTypes.number,\n    };\n    if (checkNumber(input, this.#fiber)) {\n      this.#fiber = input;\n    }\n    return this;\n  }\n\n  set content(input) {\n    this.propTypes = {\n      input: PropTypes.string,\n    };\n    if (checkString(input, this.#content)) {\n      this.#content = input;\n    }\n    return this;\n  }\n\n  set image(input) {\n    this.propTypes = {\n      input: PropTypes.setImage,\n    };\n    if (checkURLString(input, this.#image)) {\n      this.#image = input;\n    }\n    return this;\n  }\n}\n\nexport default RawMaterialClass;\n","import PropTypes from \"prop-types\";\n\nexport const sortList = (array) => {\n  sortList.propTypes = {\n    array: PropTypes.array,\n  };\n  array.forEach((a) => console.log(a));\n  const sortedList = array.sort((a, b) => a.name.localeCompare(b.name));\n  return sortedList;\n};\n","import {\n  Modal,\n  List,\n  Popconfirm,\n  Typography,\n  Button,\n  Input,\n  Popover,\n  message,\n} from \"antd\";\nimport PropTypes from \"prop-types\";\nimport { useState, useEffect } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport { sortBy } from \"lodash/fp\";\nimport { API } from \"../../../api\";\nimport \"./EditBrands.scss\";\nimport { sortList } from \"../../../helper/Sort\";\nimport TooltipComponent from \"../../General/TooltipComponent\";\n\nconst { Link, Text } = Typography;\n\nconst EditBrands = ({ visible, close, sendChangesToParent }) => {\n  EditBrands.propTypes = {\n    visible: PropTypes.bool,\n    close: PropTypes.func,\n    sendChangesToParent: PropTypes.func,\n  };\n\n  const [brands, setBrands] = useState([]);\n  const [data, setData] = useState([]);\n  const [searchField, setSearchField] = useState(\"\");\n  const [brandName, setBrandName] = useState(\"\");\n  const [state, setState] = useState({});\n\n  useEffect(() => {\n    API.brands.fetchAllCompanies().then((res) => {\n      setBrands(res);\n      setData(res);\n    });\n  }, []);\n\n  /* \n  @Renders each brand in the list \n  TODO: Fix the title of Pop Confirm such that it will display the text in two rows.\n  */\n\n  const brandList = (item) => {\n    return (\n      <List.Item\n        className=\"row\"\n        actions={[\n          <Link\n            onClick={() => {\n              setState({ [item.name]: !state[item.name] });\n            }}\n            type=\"primary\"\n          >\n            {state[item.name] ? \"Close\" : \"Edit\"}\n          </Link>,\n          <Popconfirm\n            title={\n              \"Are you sure to delete this brand?\" +\n              \"\\n\" +\n              \"This brand will be deleted from all raw materials who uses it\"\n            }\n            onConfirm={() => handleDelete(item.name)}\n          >\n            <Link type=\"danger\">Delete</Link>\n          </Popconfirm>,\n        ]}\n      >\n        <List.Item.Meta className=\"item\" description={brandField(item.name)} />\n      </List.Item>\n    );\n  };\n\n  const brandField = (name) => {\n    if (state[name]) {\n      return (\n        <TooltipComponent\n          component={\n            <Input\n              required\n              className=\"input-text\"\n              defaultValue={`${name}`}\n              onPressEnter={(input) => {\n                handleEdit(name, input.target.value);\n                setState({ [name]: !state[name] });\n              }}\n            />\n          }\n          text={\"Press Enter to save brand\"}\n          trigger={\"focus\"}\n        />\n      );\n    }\n    return <Text>{name}</Text>;\n  };\n\n  const addNewBrand = () => {\n    return (\n      <div className=\"popover\">\n        <div className=\"header-field-wrapper\">\n          <span>Add a new brand</span>\n          <Input\n            value={brandName}\n            allowClear\n            className=\"input-text\"\n            onChange={(e) => setBrandName(e.target.value)}\n            placeholder=\"Type a new brand name...\"\n            onPressEnter={handleAdd}\n          />\n        </div>\n        <div className=\"button\">\n          <Button type=\"primary\" onClick={handleAdd}>\n            Add\n          </Button>\n        </div>\n      </div>\n    );\n  };\n\n  const ifBrandExists = () => {\n    for (let i = 0; i < brands.length; i++) {\n      if (brands[i].name.toLowerCase() === brandName.toLowerCase()) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  const handleSearch = (e) => {\n    setSearchField(e);\n    const filter = data.filter((item) =>\n      item.name.toLowerCase().includes(e.toLowerCase())\n    );\n    setBrands(filter);\n  };\n\n  const handleAdd = () => {\n    if (brandName === \"\") {\n      message.warning(\"Please enter a brand name.\");\n    } else if (ifBrandExists()) {\n      message.warning(\"The brand already exists.\");\n    } else {\n      const mergedList = brands.concat([{ value: brandName, name: brandName }]);\n      const sortedCompanies = sortList(mergedList);\n      setBrands(sortedCompanies);\n      setData(sortedCompanies);\n      sendChangesToParent(sortedCompanies);\n      API.brands.addCompany(brandName);\n    }\n  };\n\n  const handleDelete = (company) => {\n    const filter = brands.filter(\n      (item) => item.name.toLowerCase() !== company.toLowerCase()\n    );\n    setBrands(filter);\n    setData(filter);\n    sendChangesToParent(filter);\n    API.brands.deleteCompany(company);\n  };\n\n  const handleEdit = (name, input) => {\n    if (name !== input) {\n      brands.forEach((obj) => {\n        if (obj.name === name) {\n          obj.name = input;\n          obj.value = input;\n        }\n      });\n      setData(brands);\n      sendChangesToParent(brands);\n      API.brands.updateCompany(name, input);\n    }\n  };\n\n  return (\n    <Modal\n      width={\"760px\"}\n      centered\n      visible={visible}\n      onCancel={close}\n      onOk={close}\n      maskClosable={false}\n      footer={[\n        <Button key=\"submit\" type=\"primary\" onClick={close}>\n          Close\n        </Button>,\n      ]}\n    >\n      <section className=\"EditBrands\">\n        <section className=\"header\">\n          <h1>Edit Brands</h1>\n        </section>\n        <section className=\"body\">\n          <div className=\"options\">\n            <Input\n              onChange={(e) => handleSearch(e.target.value)}\n              value={searchField}\n              size={\"large\"}\n              className=\"input-text\"\n              placeholder=\"Search for a brand name...\"\n              allowClear\n              enterbutton=\"true\"\n            />\n            <Popover trigger=\"click\" placement={\"bottom\"} content={addNewBrand}>\n              <Button\n                type=\"primary\"\n                style={{ height: \"100%\", borderRadius: \"12px\" }}\n                size={\"large\"}\n              >\n                Add a new Brand\n              </Button>\n            </Popover>\n          </div>\n          <div className=\"list\">\n            <InfiniteScroll\n              initialLoad={false}\n              loadMore={() => console.log(\"infinite scroll\")}\n              useWindow={false}\n            >\n              <List\n                size=\"large\"\n                dataSource={sortBy(\"company.company\", brands || [])}\n                renderItem={brandList}\n                rowKey={\"company\"}\n              />\n            </InfiniteScroll>\n          </div>\n        </section>\n      </section>\n    </Modal>\n  );\n};\n\nexport default EditBrands;\n","import EditBrands from \"./EditBrands\";\n\nexport default EditBrands;","import {\n  Modal,\n  Input,\n  Popover,\n  Button,\n  List,\n  Popconfirm,\n  Typography,\n  message,\n} from \"antd\";\nimport { useState, useEffect } from \"react\";\nimport { API } from \"../../../api\";\nimport PropTypes from \"prop-types\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport { sortBy } from \"lodash/fp\";\nimport TooltipComponent from \"../../General/TooltipComponent\";\nimport { sortList } from \"../../../helper/Sort\";\n\nconst { Link, Text } = Typography;\n\nconst EditLocations = ({ visible, close, sendChangesToParent }) => {\n  EditLocations.propTypes = {\n    visible: PropTypes.bool,\n    close: PropTypes.func,\n    sendChangesToParent: PropTypes.func,\n  };\n\n  const [locations, setLocations] = useState([]);\n  const [data, setData] = useState([]);\n  const [newLocation, setNewLocation] = useState(\"\");\n  const [searchField, setSearchField] = useState(\"\");\n  const [fieldState, setFieldState] = useState({});\n\n  useEffect(() => {\n    API.locations.fetchLocations().then((res) => {\n      setLocations(res);\n      setData(res);\n    });\n  }, []);\n\n  const handlesearchField = (e) => {\n    setSearchField(e);\n    const filter = data.filter((item) =>\n      item.name.toLowerCase().includes(e.toLowerCase())\n    );\n    setLocations(filter);\n  };\n\n  const locationList = (item) => {\n    return (\n      <List.Item\n        className=\"row\"\n        actions={[\n          <Link\n            onClick={() => {\n              setFieldState({ [item.name]: !fieldState[item.name] });\n            }}\n            type=\"primary\"\n          >\n            {fieldState[item.name] ? \"Close\" : \"Edit\"}\n          </Link>,\n          <Popconfirm\n            title={\n              \"Are you sure to delete this stored location?\" +\n              \"\\n\" +\n              \"This stored location will be deleted from all raw materials who uses it\"\n            }\n            onConfirm={() => handleDelete(item.name)}\n          >\n            <Link type=\"danger\">Delete</Link>\n          </Popconfirm>,\n        ]}\n      >\n        <List.Item.Meta\n          className=\"item\"\n          description={locationField(item.name)}\n        />\n      </List.Item>\n    );\n  };\n\n  const handleDelete = (company) => {\n    const filter = locations.filter(\n      (item) => item.name.toLowerCase() !== company.toLowerCase()\n    );\n    setLocations(filter);\n    setData(filter);\n    sendChangesToParent(filter);\n    API.locations.deleteLocation(company);\n  };\n\n  const handleEdit = (name, input) => {\n    if (name !== input) {\n      locations.forEach((obj) => {\n        if (obj.name === name) {\n          obj.name = input;\n          obj.value = input;\n        }\n      });\n      setData(locations);\n      sendChangesToParent(locations);\n      API.locations.updateLocation(name, input);\n    }\n  };\n\n  const locationField = (name) => {\n    if (fieldState[name]) {\n      return (\n        <TooltipComponent\n          component={\n            <Input\n              required\n              className=\"input-text\"\n              defaultValue={`${name}`}\n              onPressEnter={(input) => {\n                handleEdit(name, input.target.value);\n                setFieldState({ [name]: !fieldState[name] });\n              }}\n            />\n          }\n          text={\"Press Enter to save brand\"}\n          trigger={\"focus\"}\n        />\n      );\n    }\n    return <Text>{name}</Text>;\n  };\n\n  const addNewLocation = () => {\n    return (\n      <div className=\"popover\">\n        <div className=\"header-field-wrapper\">\n          <span>Add a new stored location</span>\n          <Input\n            value={newLocation}\n            allowClear\n            className=\"input-text\"\n            onChange={(e) => setNewLocation(e.target.value)}\n            placeholder=\"Type a new stored location...\"\n            onPressEnter={handleAdd}\n          />\n        </div>\n        <div className=\"button\">\n          <Button type=\"primary\" onClick={handleAdd}>\n            Add\n          </Button>\n        </div>\n      </div>\n    );\n  };\n\n  const ifLocationExists = () => {\n    for (let i = 0; i < locations.length; i++) {\n      if (locations[i].name.toLowerCase() === newLocation.toLowerCase()) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  const handleAdd = () => {\n    if (newLocation === \"\") {\n      message.warning(\"Please enter a brand name.\");\n    } else if (ifLocationExists()) {\n      message.warning(\"The brand already exists.\");\n    } else {\n      const mergedList = locations.concat([\n        { value: newLocation, name: newLocation },\n      ]);\n      const sortedList = sortList(mergedList);\n      setLocations(sortedList);\n      setData(sortedList);\n      sendChangesToParent(sortedList);\n      API.locations.addLocation(newLocation);\n    }\n  };\n\n  return (\n    <Modal\n      width={\"760px\"}\n      centered\n      visible={visible}\n      onCancel={close}\n      onOk={close}\n      maskClosable={false}\n      footer={[\n        <Button key=\"submit\" type=\"primary\" onClick={close}>\n          Close\n        </Button>,\n      ]}\n    >\n      <section className=\"EditBrands\">\n        <section className=\"header\">\n          <h1>Edit Stored Locations</h1>\n        </section>\n        <section className=\"body\">\n          <div className=\"options\">\n            <Input\n              onChange={(e) => handlesearchField(e.target.value)}\n              value={searchField}\n              size={\"large\"}\n              className=\"input-text\"\n              placeholder=\"searchField for a location name...\"\n              allowClear\n              enterbutton=\"true\"\n            />\n            <Popover\n              trigger=\"click\"\n              placement={\"bottom\"}\n              content={addNewLocation}\n            >\n              <Button\n                type=\"primary\"\n                style={{ height: \"100%\", borderRadius: \"12px\" }}\n                size={\"large\"}\n              >\n                Add a new Stored Location\n              </Button>\n            </Popover>\n          </div>\n          <div className=\"list\">\n            <InfiniteScroll\n              initialLoad={false}\n              loadMore={() => console.log(\"infinite scroll\")}\n              useWindow={false}\n            >\n              <List\n                size=\"large\"\n                dataSource={sortBy(\"location.location\", locations || [])}\n                renderItem={locationList}\n                rowKey={\"location\"}\n              />\n            </InfiniteScroll>\n          </div>\n        </section>\n      </section>\n    </Modal>\n  );\n};\n\nexport default EditLocations;\n","import EditLocations from \"./EditLocations\";\n\nexport default EditLocations;","import ImageUploader from \"./ImageUploader\";\n\nexport default ImageUploader;\n","import PropTypes from \"prop-types\";\nimport { Upload, message } from \"antd\";\nimport { UploadOutlined } from \"@ant-design/icons\";\n\nconst ImageUploader = ({ handleImage, imageURL }) => {\n  ImageUploader.propTypes = {\n    handleImage: PropTypes.func,\n    image: PropTypes.string,\n  };\n\n  const handleChange = (info) => {\n    if (info.file.status === \"done\") {\n      message.success(`${info.file.name} file uploaded successfully`);\n    } else if (info.file.status === \"error\") {\n      message.error(`${info.file.name} file upload failed.`);\n    }\n  };\n\n  const restrictions = (file) => {\n    const isJpgOrPng =\n      file.type === \"image/jpeg\" ||\n      file.type === \"image/png\" ||\n      file.type === \"image/jpg\";\n    if (!isJpgOrPng) {\n      message.error(\"You can only upload JPG/PNG file!\");\n    }\n    const size = file.size < 7e6;\n    if (!size) {\n      message.error(\"Image must smaller than 7MB!\");\n    }\n    return isJpgOrPng && size;\n  };\n\n  const customRequest = ({ onSuccess, onError, file }) => {\n    setTimeout(() => {\n      try {\n        if (restrictions(file)) {\n          onSuccess(null, file);\n          handleImage(file);\n        } else {\n          onError();\n        }\n      } catch (err) {\n        console.log(err);\n        onError();\n      }\n    }, 1);\n  };\n\n  const getFileList = () => {\n    const fileList = [\n      {\n        url: imageURL,\n      },\n    ];\n    return imageURL === \"\" ? [] : fileList;\n  };\n\n  return (\n    <Upload\n      maxCount={1}\n      defaultFileList={getFileList}\n      listType=\"picture-card\"\n      onChange={handleChange}\n      customRequest={customRequest}\n      onRemove={(e) => {\n        handleImage(null);\n        console.log(\"Dropped files\", e);\n      }}\n    >\n      <div style={{ display: \"flex\", flexDirection: \"column\", rowGap: \"8px\" }}>\n        <UploadOutlined />\n        Upload <br />\n        Image\n      </div>\n    </Upload>\n  );\n};\n\nexport default ImageUploader;\n","const Units = [\n  {\n    value: \"g\",\n    name: \"g\",\n  },\n  {\n    value: \"units\",\n    name: \"units\",\n  },\n];\n\nexport default Units;\n","import PropTypes from \"prop-types\";\nimport { SearchOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { useEffect, useState } from \"react\";\nimport \"./EditRawMaterial.scss\";\nimport InputNumber from \"../../General/InputNumber\";\nimport { isEqual } from \"lodash/fp\";\nimport {\n  Modal,\n  Input,\n  AutoComplete,\n  Popconfirm,\n  Button,\n  Select,\n  Form,\n  message,\n} from \"antd\";\nimport { API } from \"../../../api\";\nimport RawMaterialClass from \"../../../classes/RawMaterialClass\";\nimport EditBrands from \"../EditBrands\";\nimport EditLocations from \"../EditLocations\";\nimport ImageUploader from \"../../General/ImageUploader\";\nimport Units from \"../../General/Units\";\nimport { useEditRawMaterial } from \"../../../context/edit-raw-material\";\n\nconst { TextArea } = Input;\n\nconst EditRawMaterial = ({\n  visible,\n  data,\n  sendChangesToParent,\n  deleteRawMaterial,\n}) => {\n  EditRawMaterial.propTypes = {\n    visible: PropTypes.bool,\n    data: PropTypes.object,\n    sendChangesToParent: PropTypes.func,\n    deleteRawMaterial: PropTypes.func,\n  };\n  /* Context */\n  const { closeEdit } = useEditRawMaterial();\n\n  /* Modal States */\n  const [brandModalVisible, setBrandModalVisible] = useState(false);\n  const [locationModalVisible, setLocationModalVisible] = useState(false);\n\n  /* Data States */\n  const [brands, setBrands] = useState([]);\n  const [countries, setCountries] = useState([]);\n  const [forms, setForms] = useState([]);\n  const [locations, setLocations] = useState([]);\n  const [id, setId] = useState();\n\n  /* Input Field States */\n  const [name, setName] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [unit, setUnit] = useState(\"\");\n  const [form, setForm] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [fat, setFat] = useState(0);\n  const [carb, setCarb] = useState(0);\n  const [protein, setProtein] = useState(0);\n  const [salt, setSalt] = useState(0);\n  const [sugar, setSugar] = useState(0);\n  const [fiber, setFiber] = useState(0);\n  const [content, setContent] = useState(\"\");\n  const [rawMaterialForm, setRawMaterialForm] = useState();\n  const [oldRawMaterial, setOldRawMaterial] = useState();\n\n  /* Image States */\n  const [image, setImage] = useState(\"\");\n  const [currentImage, setCurrentImage] = useState(null);\n\n  useEffect(() => {\n    API.brands.fetchAllCompanies().then((res) => setBrands(res));\n    API.brands.fetchAllCountries().then((res) => setCountries(res));\n    API.locations.fetchLocations().then((res) => setLocations(res));\n    API.materialforms.fetchForms().then((res) => setForms(res));\n    if (data != null) {\n      setId(data.raw_material_id);\n      setName(data.material_name);\n      setBrand(data.company);\n      setCountry(data.country);\n      setUnit(data.unit);\n      setForm(data.form);\n      setLocation(data.location);\n      setFat(data.fat);\n      setCarb(data.carbohydrate);\n      setProtein(data.protein);\n      setSalt(data.salt);\n      setSugar(data.sugar);\n      setFiber(data.fiber);\n      setContent(data.content);\n      setCurrentImage(data.image);\n      setRawMaterialForm(new RawMaterialClass(data));\n      setOldRawMaterial(new RawMaterialClass(data));\n    }\n  }, [data]);\n\n  const ifExistsInList = (array, object) => {\n    return array.find((e) => e.name === object) === undefined ? false : true;\n  };\n\n  const handleOk = (e) => {\n    if (passRestrictions() /* && imageRestrictions() */) {\n      handleEdit(e);\n    }\n  };\n\n  const passRestrictions = () => {\n    if (name === \"\" || name === null) {\n      message.error(\"Please type a material name!\");\n      return false;\n    } else if (!ifExistsInList(brands, brand)) {\n      message.error(\"Please select a brand from the list!\");\n      return false;\n    } else if (!ifExistsInList(countries, country)) {\n      message.error(\"Please select a country from the list!\");\n      return false;\n    } else if (!ifExistsInList(locations, location)) {\n      message.error(\"Please select a storage location\");\n      return false;\n    }\n    return true;\n  };\n\n  const handleEdit = async (e) => {\n    rawMaterialForm.name = name;\n    rawMaterialForm.brand = brand;\n    rawMaterialForm.country = country;\n    rawMaterialForm.unit = unit;\n    rawMaterialForm.location = location;\n    rawMaterialForm.form = form;\n    rawMaterialForm.fat = fat;\n    rawMaterialForm.protein = protein;\n    rawMaterialForm.salt = salt;\n    rawMaterialForm.carb = carb;\n    rawMaterialForm.sugar = sugar;\n    rawMaterialForm.fiber = fiber;\n    rawMaterialForm.content = content;\n\n    await handleImageAPI().then(() => {\n      if (\n        isEqual(rawMaterialForm.toJsonObject(), oldRawMaterial.toJsonObject())\n      ) {\n        message.success(\"No changes made.\");\n      } else {\n        API.rawMaterial.editMaterial(\n          data.raw_material_id,\n          rawMaterialForm.toJsonObject()\n        );\n        sendChangesToParent(rawMaterialForm);\n        message.success(\"Successfully edited raw material.\");\n      }\n      closeEdit(e, id);\n    });\n  };\n\n  const handleImageAPI = async () => {\n    if (image === \"\") {\n      return;\n    } else if (image !== null && rawMaterialForm.image === \"\") {\n      await API.rawMaterial.uploadImage(image, id).then((res) => {\n        console.log(\"uploading picture\");\n        rawMaterialForm.image = res;\n      });\n    } else if (image !== null && rawMaterialForm.image !== \"\") {\n      await API.rawMaterial.updateImage(image, id).then((res) => {\n        console.log(\"updating picture\");\n        rawMaterialForm.image = res;\n      });\n    } else if (image === null && rawMaterialForm.image !== \"\") {\n      await API.rawMaterial.deleteImage(id).then(() => {\n        console.log(\"deleting picture\");\n        rawMaterialForm.image = \"\";\n      });\n    }\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n    message.success(\"Failed editing raw material\");\n  };\n\n  const setCurrentBrands = (list) => {\n    setBrands(list);\n  };\n\n  const setCurrentLocations = (list) => {\n    setLocations(list);\n  };\n\n  const handleImage = (file) => {\n    console.log(\"reached\");\n    file ? setImage(file) : setImage(null);\n  };\n\n  return (\n    <Modal\n      maskClosable={false}\n      centered\n      visible={visible}\n      onCancel={(e) => closeEdit(e, id)}\n      width={\"950px\"}\n      footer={[\n        <section className=\"edit-raw-material-footer\">\n          <div>\n            <Popconfirm\n              title={\"Are you sure?\"}\n              okType={\"danger\"}\n              okText={\"Delete\"}\n              onConfirm={(e) => deleteRawMaterial(e, id)}\n            >\n              <Button type=\"danger\">Delete</Button>\n            </Popconfirm>\n          </div>\n          <div>\n            <Button key=\"submit\" onClick={(e) => closeEdit(e, id)}>\n              Cancel\n            </Button>\n            <Button key=\"submit\" type=\"primary\" onClick={handleOk}>\n              OK\n            </Button>\n          </div>\n        </section>,\n      ]}\n    >\n      <Form\n        onFinishFailed={onFinishFailed}\n        initialValues={{\n          name: name,\n          brand: brand,\n          country: country,\n        }}\n      >\n        <section className=\"EditRawMaterial\">\n          <section className=\"GeneralInformation\">\n            <h1>Edit {name}</h1>\n            <div className=\"rows\">\n              <div className=\"image-general-information\">\n                <div className=\"column-wrapper\">\n                  <div className=\"column-1\">\n                    <div className=\"header-field-wrapper\">\n                      <span className=\"sub-header\">Material Name</span>\n                      <Form.Item\n                        name=\"name\"\n                        rules={[\n                          {\n                            required: true,\n                            message: \"Please input material name!\",\n                          },\n                        ]}\n                      >\n                        <Input\n                          className=\"input-text\"\n                          onChange={(e) =>\n                            e.target.value !== name && setName(e.target.value)\n                          }\n                          value={name}\n                          placeholder=\"Enter material name...\"\n                          required\n                        />\n                      </Form.Item>\n                    </div>\n                  </div>\n                  <div className=\"column-2\">\n                    <div className=\"header-field-wrapper\">\n                      <span className=\"sub-header\">Brand</span>\n                      <div className=\"field-add-wrapper\">\n                        <Form.Item\n                          name=\"brand\"\n                          rules={[\n                            {\n                              required: true,\n                              message: \"Please select a brand!\",\n                            },\n                          ]}\n                        >\n                          <AutoComplete\n                            options={brands}\n                            filterOption={(inputValue, option) =>\n                              option.value\n                                .toUpperCase()\n                                .indexOf(inputValue.toUpperCase()) !== -1\n                            }\n                            onChange={(e) => setBrand(e)}\n                            value={brand}\n                          >\n                            <Input\n                              allowClear\n                              className=\"input-text\"\n                              placeholder=\"Select a brand...\"\n                              suffix={\n                                <SearchOutlined style={{ fontSize: \"1rem\" }} />\n                              }\n                            />\n                          </AutoComplete>\n                        </Form.Item>\n                        <Button\n                          className=\"button\"\n                          onClick={() => setBrandModalVisible(true)}\n                        >\n                          <PlusOutlined />\n                          <EditBrands\n                            visible={brandModalVisible}\n                            close={(e) => {\n                              e.stopPropagation();\n                              setBrandModalVisible(false);\n                            }}\n                            sendChangesToParent={setCurrentBrands}\n                          />\n                        </Button>\n                      </div>\n                    </div>\n                    <div className=\"header-field-wrapper\">\n                      <span className=\"sub-header\">Country</span>\n                      <Form.Item\n                        name=\"country\"\n                        rules={[\n                          {\n                            required: true,\n                            message: \"Please select a country!\",\n                          },\n                        ]}\n                      >\n                        <AutoComplete\n                          options={countries}\n                          filterOption={(inputValue, option) =>\n                            option.value\n                              .toUpperCase()\n                              .indexOf(inputValue.toUpperCase()) !== -1\n                          }\n                          onChange={(e) => e !== country && setCountry(e)}\n                          value={country}\n                        >\n                          <Input\n                            allowClear\n                            className=\"input-text\"\n                            placeholder=\"Choose a country...\"\n                            suffix={\n                              <SearchOutlined style={{ fontSize: \"1rem\" }} />\n                            }\n                          />\n                        </AutoComplete>\n                      </Form.Item>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"header-field-wrapper\">\n                  <span className=\"sub-header\">Image</span>\n                  <ImageUploader\n                    handleImage={handleImage}\n                    imageURL={currentImage}\n                  />\n                </div>\n              </div>\n              <div className=\"column-3\">\n                <div className=\"header-field-wrapper\">\n                  <span className=\"sub-header\">Unit</span>\n                  <Select\n                    options={Units}\n                    onChange={(e) => e !== unit && setUnit(e)}\n                    value={unit}\n                  />\n                </div>\n                <div className=\"header-field-wrapper\">\n                  <span className=\"sub-header\">Material Form</span>\n                  <Select\n                    options={forms}\n                    placeholder=\"Select here...\"\n                    onChange={(e) => e !== form && setForm(e)}\n                    value={form}\n                  />\n                </div>\n                <div className=\"header-field-wrapper\">\n                  <span className=\"sub-header\">Stored Location</span>\n                  <div className=\"field-add-wrapper\">\n                    <Select\n                      options={locations}\n                      value={location}\n                      placeholder=\"Select here...\"\n                      onChange={(e) => e !== location && setLocation(e)}\n                    />\n                    <Button\n                      className=\"button\"\n                      onClick={() => setBrandModalVisible(true)}\n                    >\n                      <PlusOutlined />\n                      <EditLocations\n                        visible={locationModalVisible}\n                        close={(e) => {\n                          e.stopPropagation();\n                          setBrandModalVisible(false);\n                        }}\n                        sendChangesToParent={setCurrentLocations}\n                      />\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n          <section className=\"NuitritionalFacts\">\n            <h2>Nuitritional Facts (per 100g)</h2>\n            <div className=\"rows\">\n              <div className=\"column-4\">\n                <div className=\"header-field-wrapper\">\n                  <span className=\"sub-header\">Fat</span>\n                  <InputNumber\n                    value={fat}\n                    onChange={(e) => e !== fat && setFat(e)}\n                  />\n                </div>\n                <div className=\"header-field-wrapper\">\n                  <span className=\"sub-header\">Carbohydrate</span>\n                  <InputNumber value={carb} onChange={(e) => setCarb(e)} />\n                </div>\n                <div className=\"header-field-wrapper\">\n                  <span className=\"sub-header\">Protein</span>\n                  <InputNumber\n                    value={protein}\n                    onChange={(e) => setProtein(e)}\n                  />\n                </div>\n                <div className=\"header-field-wrapper\">\n                  <span className=\"sub-header\">Salt</span>\n                  <InputNumber value={salt} onChange={(e) => setSalt(e)} />\n                </div>\n                <div className=\"header-field-wrapper\">\n                  <span className=\"sub-header\">Sugar</span>\n                  <InputNumber value={sugar} onChange={(e) => setSugar(e)} />\n                </div>\n                <div className=\"header-field-wrapper\">\n                  <span className=\"sub-header\">Fiber</span>\n                  <InputNumber value={fiber} onChange={(e) => setFiber(e)} />\n                </div>\n              </div>\n              <div className=\"header-field-wrapper\">\n                <span className=\"sub-header\">Content</span>\n                <TextArea\n                  className=\"input-text\"\n                  placeholder=\"Write the content of the raw material...\"\n                  autoSize={{ minRows: 3 }}\n                  value={content}\n                  onChange={(e) => setContent(e.target.value)}\n                />\n              </div>\n            </div>\n          </section>\n        </section>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default EditRawMaterial;\n","import EditRawMaterial from \"./EditRawMaterial\";\n\nexport default EditRawMaterial;","const Units = [\n  {\n    value: \"g\",\n    name: \"g\",\n  },\n  {\n    value: \"units\",\n    name: \"units\",\n  },\n];\n\nexport default Units;\n","import PropTypes from \"prop-types\";\nimport { SearchOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { useEffect, useState } from \"react\";\nimport \"./CreateRawMaterial.scss\";\nimport InputNumber from \"../../General/InputNumber\";\nimport {\n  Modal,\n  Input,\n  AutoComplete,\n  Button,\n  Select,\n  Form,\n  message,\n} from \"antd\";\nimport { API } from \"../../../api\";\nimport RawMaterialClass from \"../../../classes/RawMaterialClass\";\nimport EditBrands from \"../EditBrands\";\nimport EditLocations from \"../EditLocations\";\nimport ImageUploader from \"../../General/ImageUploader\";\nimport Units from \"./Units\";\nimport { useHistory } from \"react-router\";\n\nconst { TextArea } = Input;\n\nconst CreateRawMaterial = ({ visible, close, sendChangesToParent }) => {\n  CreateRawMaterial.propTypes = {\n    visible: PropTypes.bool,\n    close: PropTypes.func,\n    sendChangesToParent: PropTypes.func,\n  };\n\n  const history = useHistory();\n\n  /* Modal States */\n  const [brandModalVisible, setBrandModalVisible] = useState(false);\n  const [locationModalVisible, setLocationModalVisible] = useState(false);\n\n  /* Data States */\n  const [brands, setBrands] = useState([]);\n  const [countries, setCountries] = useState([]);\n  const [forms, setForms] = useState([]);\n  const [locations, setLocations] = useState([]);\n\n  /* Input Field States */\n  const [name, setName] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [unit, setUnit] = useState(\"g\");\n  const [form, setForm] = useState(\"Liquid\");\n  const [location, setLocation] = useState(\"Ambient\");\n  const [fat, setFat] = useState(0);\n  const [carb, setCarb] = useState(0);\n  const [protein, setProtein] = useState(0);\n  const [salt, setSalt] = useState(0);\n  const [sugar, setSugar] = useState(0);\n  const [fiber, setFiber] = useState(0);\n  const [content, setContent] = useState(\"\");\n  const [rawMaterialForm, setRawMaterialForm] = useState();\n\n  /* Image States */\n  const [image, setImage] = useState();\n\n  useEffect(() => {\n    API.brands.fetchAllCompanies().then((res) => setBrands(res));\n    API.brands.fetchAllCountries().then((res) => setCountries(res));\n    API.locations.fetchLocations().then((res) => setLocations(res));\n    API.materialforms.fetchForms().then((res) => setForms(res));\n    setRawMaterialForm(new RawMaterialClass());\n  }, []);\n\n  const onFinish = (values) => {\n    console.log(\"Success:\", values);\n    message.success(\"Succesfully edited raw material\");\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n    message.success(\"Failed editing raw material\");\n  };\n\n  const handleOk = async (e) => {\n    if (passRestrictions()) {\n      createMaterial(e);\n    }\n  };\n\n  const passRestrictions = () => {\n    if (name === \"\" || name === null) {\n      message.warning(\"Please type a material name!\");\n      return false;\n    } else if (!ifExistsInList(brands, brand)) {\n      message.warning(\"Please select a brand from the list!\");\n      return false;\n    } else if (!ifExistsInList(countries, country)) {\n      message.warning(\"Please select a country from the list!\");\n      return false;\n    } else if (!ifExistsInList(locations, location)) {\n      message.warning(\"Please select a storage location\");\n      return false;\n    }\n    return true;\n  };\n\n  const ifExistsInList = (array, object) => {\n    return array.find((e) => e.name === object) === undefined ? false : true;\n  };\n\n  const createMaterial = async (e) => {\n    rawMaterialForm.name = name;\n    rawMaterialForm.brand = brand;\n    rawMaterialForm.country = country;\n    rawMaterialForm.unit = unit;\n    rawMaterialForm.location = location;\n    rawMaterialForm.form = form;\n    rawMaterialForm.fat = fat;\n    rawMaterialForm.protein = protein;\n    rawMaterialForm.salt = salt;\n    rawMaterialForm.carb = carb;\n    rawMaterialForm.sugar = sugar;\n    rawMaterialForm.fiber = fiber;\n    rawMaterialForm.content = content;\n    await createAPI().then(async (res) => {\n      if (res !== \"failed\") {\n        await imageAPI().then(() => {\n          sendChangesToParent(rawMaterialForm);\n          history.push(`/inventory/rawmaterial/${rawMaterialForm.id}`);\n        });\n      }\n    });\n    close(e);\n  };\n\n  const imageAPI = async () => {\n    if (image !== undefined && image !== null && image !== \"\") {\n      await API.rawMaterial\n        .uploadImage(image, rawMaterialForm.id)\n        .then((res) => {\n          console.log(\"uploading picture\");\n          console.log(res);\n          rawMaterialForm.image = res;\n        });\n    }\n    return;\n  };\n\n  const createAPI = async () => {\n    let response = await API.rawMaterial\n      .createRawMaterial(rawMaterialForm.toJsonObject())\n      .then((res) => {\n        rawMaterialForm.id = res;\n        console.log(res);\n      });\n    return response;\n  };\n\n  /* Functions to children*/\n\n  const handleImage = (file) => {\n    file ? setImage(file) : setImage(null);\n  };\n\n  const setCurrentBrands = (list) => {\n    setBrands(list);\n  };\n\n  const setCurrentLocations = (list) => {\n    setLocations(list);\n  };\n\n  return (\n    <Modal\n      maskClosable={false}\n      centered\n      visible={visible}\n      onCancel={(e) => close(e)}\n      width={\"950px\"}\n      footer={[\n        <Button key=\"submit\" onClick={(e) => close(e)}>\n          Cancel\n        </Button>,\n        <Button key=\"submit\" onClick={handleOk} type=\"primary\">\n          OK\n        </Button>,\n      ]}\n    >\n      <Form\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n        initialValues={{\n          name: name,\n          brand: brand,\n          country: country,\n        }}\n      >\n        <section className=\"CreateRawMaterial\">\n          <section className=\"GeneralInformation\">\n            <h1>Add a Raw Material</h1>\n            <div className=\"rows\">\n              <div className=\"image-general-information\">\n                <div className=\"column-wrapper\">\n                  <div className=\"column-1\">\n                    <div className=\"header-field-wrapper\">\n                      <span className=\"sub-header\">Material Name</span>\n                      <Form.Item\n                        name=\"name\"\n                        rules={[\n                          {\n                            required: true,\n                            message: \"Please input material name!\",\n                          },\n                        ]}\n                      >\n                        <Input\n                          className=\"input-text\"\n                          onChange={(e) =>\n                            e.target.value !== name && setName(e.target.value)\n                          }\n                          value={name}\n                          placeholder=\"Enter material name...\"\n                          required\n                        />\n                      </Form.Item>\n                    </div>\n                  </div>\n                  <div className=\"column-2\">\n                    <div className=\"header-field-wrapper\">\n                      <span className=\"sub-header\">Brand</span>\n                      <div className=\"field-add-wrapper\">\n                        <Form.Item\n                          name=\"brand\"\n                          rules={[\n                            {\n                              required: true,\n                              message: \"Please choose a brand!\",\n                            },\n                          ]}\n                        >\n                          <AutoComplete\n                            options={brands}\n                            filterOption={(inputValue, option) =>\n                              option.value\n                                .toUpperCase()\n                                .indexOf(inputValue.toUpperCase()) !== -1\n                            }\n                            onChange={(e) => setBrand(e)}\n                            value={brand}\n                          >\n                            <Input\n                              allowClear\n                              className=\"input-text\"\n                              placeholder=\"Select a brand...\"\n                              suffix={\n                                <SearchOutlined style={{ fontSize: \"1rem\" }} />\n                              }\n                            />\n                          </AutoComplete>\n                        </Form.Item>\n                        <Button\n                          className=\"button\"\n                          onClick={() => setBrandModalVisible(true)}\n                        >\n                          <PlusOutlined />\n                          <EditBrands\n                            visible={brandModalVisible}\n                            close={(e) => {\n                              e.stopPropagation();\n                              setBrandModalVisible(false);\n                            }}\n                            sendChangesToParent={setCurrentBrands}\n                          />\n                        </Button>\n                      </div>\n                    </div>\n                    <div className=\"header-field-wrapper\">\n                      <span className=\"sub-header\">Country</span>\n                      <Form.Item\n                        name=\"country\"\n                        rules={[\n                          {\n                            required: true,\n                            message: \"Please choose a country!\",\n                          },\n                        ]}\n                      >\n                        <AutoComplete\n                          options={countries}\n                          filterOption={(inputValue, option) =>\n                            option.value\n                              .toUpperCase()\n                              .indexOf(inputValue.toUpperCase()) !== -1\n                          }\n                          onChange={(e) => e !== country && setCountry(e)}\n                          value={country}\n                        >\n                          <Input\n                            allowClear\n                            className=\"input-text\"\n                            placeholder=\"Choose a country...\"\n                            suffix={\n                              <SearchOutlined style={{ fontSize: \"1rem\" }} />\n                            }\n                          />\n                        </AutoComplete>\n                      </Form.Item>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"header-field-wrapper\">\n                  <span className=\"sub-header\">Image</span>\n                  <ImageUploader handleImage={handleImage} imageURL={\"\"} />\n                </div>\n              </div>\n              <div className=\"column-3\">\n                <div className=\"header-field-wrapper\">\n                  <span className=\"sub-header\">Unit</span>\n                  <Select\n                    options={Units}\n                    placeholder=\"Select here...\"\n                    onChange={(e) => e !== unit && setUnit(e)}\n                    value={unit}\n                  />\n                </div>\n                <div className=\"header-field-wrapper\">\n                  <span className=\"sub-header\">Material Form</span>\n                  <Select\n                    options={forms}\n                    placeholder=\"Select here...\"\n                    onChange={(e) => e !== form && setForm(e)}\n                    value={form}\n                  />\n                </div>\n                <div className=\"header-field-wrapper\">\n                  <span className=\"sub-header\">Stored Location</span>\n                  <div className=\"field-add-wrapper\">\n                    <Select\n                      options={locations}\n                      value={location}\n                      placeholder=\"Select here...\"\n                      onChange={(e) => e !== location && setLocation(e)}\n                    />\n                    <Button\n                      className=\"button\"\n                      onClick={() => setLocationModalVisible(true)}\n                    >\n                      <PlusOutlined />\n                      <EditLocations\n                        visible={locationModalVisible}\n                        close={(e) => {\n                          e.stopPropagation();\n                          setLocationModalVisible(false);\n                        }}\n                        sendChangesToParent={setCurrentLocations}\n                      />\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n          <section className=\"NuitritionalFacts\">\n            <h2>Nuitritional Facts (per 100g)</h2>\n            <div className=\"rows\">\n              <div className=\"column-4\">\n                <div className=\"header-field-wrapper\">\n                  <span className=\"sub-header\">Fat</span>\n                  <InputNumber\n                    value={fat}\n                    onChange={(e) => e !== fat && setFat(e)}\n                  />\n                </div>\n                <div className=\"header-field-wrapper\">\n                  <span className=\"sub-header\">Carbohydrate</span>\n                  <InputNumber value={carb} onChange={(e) => setCarb(e)} />\n                </div>\n                <div className=\"header-field-wrapper\">\n                  <span className=\"sub-header\">Protein</span>\n                  <InputNumber\n                    value={protein}\n                    onChange={(e) => setProtein(e)}\n                  />\n                </div>\n                <div className=\"header-field-wrapper\">\n                  <span className=\"sub-header\">Salt</span>\n                  <InputNumber value={salt} onChange={(e) => setSalt(e)} />\n                </div>\n                <div className=\"header-field-wrapper\">\n                  <span className=\"sub-header\">Sugar</span>\n                  <InputNumber value={sugar} onChange={(e) => setSugar(e)} />\n                </div>\n                <div className=\"header-field-wrapper\">\n                  <span className=\"sub-header\">Fiber</span>\n                  <InputNumber value={fiber} onChange={(e) => setFiber(e)} />\n                </div>\n              </div>\n              <div className=\"header-field-wrapper\">\n                <span className=\"sub-header\">Content</span>\n                <TextArea\n                  className=\"input-text\"\n                  placeholder=\"Write the content of the raw material...\"\n                  autoSize={{ minRows: 3 }}\n                  value={content}\n                  onChange={(e) => setContent(e.target.value)}\n                />\n              </div>\n            </div>\n          </section>\n        </section>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default CreateRawMaterial;\n","import CreateRawMaterial from \"./CreateRawMaterial\";\n\nexport default CreateRawMaterial;\n","import RawMaterialTable from './RawMaterialTable';\r\n\r\nexport default RawMaterialTable;","import \"./RawMaterialTable.scss\";\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Table,\n  Spin,\n  Input,\n  Button,\n  AutoComplete,\n  Typography,\n  Dropdown,\n  Menu,\n} from \"antd\";\nimport RawMaterialFilter from \"./RawMaterialFilter\";\nimport moment from \"moment\";\nimport TooltipComponent from \"../../General/TooltipComponent\";\nimport { PlusOutlined, EllipsisOutlined } from \"@ant-design/icons\";\nimport { getPriority } from \"../../General/Priority/Priority\";\nimport { API } from \"../../../api\";\nimport { checkDate } from \"../../../helper/Checker\";\nimport { getPriorityIcon } from \"../../General/Priority/Priority\";\nimport { useEditRawMaterial } from \"../../../context/edit-raw-material\";\nimport EditRawMaterial from \"../EditRawMaterial\";\nimport CreateRawMaterial from \"../CreateRawMaterial\";\n\nconst RawMaterialTable = ({ rowSelection }) => {\n  const { Text } = Typography;\n  const { Search } = Input;\n  const [data, setData] = useState([]);\n  const [table, setTable] = useState([]);\n  const [searchText, setSearchText] = useState(\"\");\n  const [tableLoading, setTableLoading] = useState(true);\n  const [activeFilters, setActiveFilters] = useState(0);\n  const [filterVisible, setFilterVisible] = useState(false);\n  const [createModalVisible, setCreateModalVisible] = useState(false);\n  const [itemNames] = useState([]);\n  const [rowCount, setRowCount] = useState(0);\n  const [firstRender, setFirstRender] = useState(true);\n\n  useEffect(() => {\n    const fetchAll = async () => {\n      const rawMaterialTable = await API.rawMaterial.fetchAll().then((res) => {\n        setData(res);\n        setTable(res);\n        setRowCount(res.length);\n        if (firstRender) {\n          res.forEach((item) => {\n            itemNames.push({\n              value: item.material_name,\n              name: item.id,\n            });\n          });\n          setFirstRender(false);\n        }\n      });\n\n      if (!(rawMaterialTable instanceof Error)) {\n        setTableLoading(false);\n      }\n    };\n    fetchAll();\n  }, [itemNames, firstRender]);\n\n  const handleSearch = (input) => {\n    setSearchText(input);\n    setTable(\n      data.filter((item) =>\n        item.material_name.toLowerCase().includes(input.toLowerCase())\n      )\n    );\n    let count = 0;\n    data.forEach((item) => {\n      if (item.material_name.toLowerCase().includes(input.toLowerCase())) {\n        count++;\n      }\n    });\n    setRowCount(count);\n  };\n\n  const handleClear = () => {\n    setTable(data);\n    setSearchText(\"\");\n    setActiveFilters(0);\n    setRowCount(data.length);\n  };\n\n  const handleFilter = (e) => {\n    const states = e;\n\n    // Tables can only interpret empty strings and not null values, we therefore have to convert it.\n    let count = 0;\n    for (const [key, value] of e.entries()) {\n      value == null || value === \"Invalid date\" || value === \"\"\n        ? states.set(key, \"\")\n        : setActiveFilters(count++);\n    }\n    setActiveFilters(count);\n\n    const filtered_table = data.filter(\n      (item) =>\n        item.company\n          .toLowerCase()\n          .includes(states.get(\"brand\").toLowerCase()) &&\n        item.country\n          .toLowerCase()\n          .includes(states.get(\"country\").toLowerCase()) &&\n        item.location.includes(states.get(\"location\")) &&\n        item.form.includes(states.get(\"form\")) &&\n        moment(item.expiration_date)\n          .format(\"YYYYMMDD\")\n          .includes(\n            checkDate(\n              item.expiration_date,\n              states.get(\"expirationDate\")[0],\n              states.get(\"expirationDate\")[1]\n            )\n          ) &&\n        moment(item.received_date)\n          .format(\"YYYYMMDD\")\n          .includes(\n            checkDate(\n              item.received_date,\n              states.get(\"receivedDate\")[0],\n              states.get(\"receivedDate\")[1]\n            )\n          ) &&\n        getPriority(item.expiration_date)\n          .toLowerCase()\n          .includes(states.get(\"priority\"))\n    );\n    setRowCount(filtered_table.length);\n    setTable(filtered_table);\n  };\n\n  const { openEdit, editVisible, closeEdit } = useEditRawMaterial();\n  const [itemData, setItemData] = useState(null);\n\n  const fetchItemData = (record) => {\n    setItemData(record);\n  };\n\n  const handleRawMaterialEdit = (form) => {\n    let itemIndex = table.findIndex(\n      (item) => item.raw_material_id === form.data.raw_material_id\n    );\n    table[itemIndex].material_name = form.name;\n    table[itemIndex].country = form.country;\n    table[itemIndex].company = form.brand;\n    table[itemIndex].location = form.location;\n    table[itemIndex].form = form.form;\n  };\n\n  const deleteRawMaterial = (e, id) => {\n    closeEdit(e);\n    let newTable = table.filter((item) => item.raw_material_id !== id);\n    setTable(newTable);\n    setData(newTable);\n    API.rawMaterial.disableRawMaterial(id).then((res) => {\n      console.log(res);\n    });\n  };\n\n  const createRawMaterial = (form) => {\n    const newMaterial = table.concat({\n      raw_material_id: form.id,\n      material_name: form.name,\n      company: form.brand,\n      country: form.country,\n      total_amount: 0,\n      location: form.location,\n      unit: form.unit,\n      expiration_date: null,\n      image: \"\",\n    });\n    console.log(newMaterial);\n    setTable(newMaterial);\n    setData(newMaterial);\n  };\n\n  const menuItems = (record) => {\n    return (\n      <Menu style={{ borderRadius: \"4px\" }}>\n        <Menu.Item\n          key=\"1\"\n          onClick={() => openEdit(record.raw_material_id)}\n          style={{ borderRadius: \"4px\" }}\n        >\n          <Text> Edit item </Text>\n          <EditRawMaterial\n            visible={editVisible[record.raw_material_id]}\n            data={itemData}\n            sendChangesToParent={handleRawMaterialEdit}\n            deleteRawMaterial={deleteRawMaterial}\n          />\n        </Menu.Item>\n      </Menu>\n    );\n  };\n\n  const RawMaterialTableColumns = [\n    {\n      title: \"raw_material_id\",\n      dataIndex: \"raw_material_id\",\n      key: \"raw_material_id\",\n    },\n    {\n      title: \"Item name\",\n      dataIndex: \"material_name\",\n      key: \"material_name\",\n      render: (material_name, record) => (\n        <Link to={\"/inventory/rawmaterial/\" + record.raw_material_id}>\n          {material_name}\n        </Link>\n      ),\n      sorter: (a, b) => a.material_name.localeCompare(b.material_name),\n    },\n    {\n      title: \"Brand\",\n      dataIndex: \"company\",\n      key: \"company\",\n      sorter: (a, b) => a.company.localeCompare(b.company),\n    },\n    {\n      title: \"Country\",\n      dataIndex: \"country\",\n      key: \"country\",\n      sorter: (a, b) => a.country.localeCompare(b.country),\n    },\n    {\n      title: \"Form\",\n      dataIndex: \"form\",\n      key: \"form\",\n      sorter: (a, b) => a.form.localeCompare(b.form),\n    },\n    {\n      title: \"Amount (g/unit)\",\n      dataIndex: \"total_amount\",\n      key: \"total_amount\",\n      sorter: (a, b) => a.total_amount - b.total_amount,\n    },\n    {\n      title: \"Unit\",\n      dataIndex: \"unit\",\n      key: \"unit\",\n    },\n    {\n      title: \"Location\",\n      dataIndex: \"location\",\n      key: \"location\",\n      sorter: (a, b) => a.location.localeCompare(b.location),\n    },\n    {\n      title: \"Expiration Date\",\n      dataIndex: \"expiration_date\",\n      key: \"expiration_date\",\n      render: (expiration_date) =>\n        expiration_date === null ? (\n          <p> </p>\n        ) : (\n          <p style={{ marginBottom: \"auto\" }}>\n            {moment(expiration_date).format(\"MMM D, YYYY\")}\n          </p>\n        ),\n      sorter: (a, b) =>\n        moment(a.expiration_date).format(\"YYYYMMDD\") -\n        moment(b.expiration_date).format(\"YYYYMMDD\"),\n    },\n    {\n      title: \"Priority\",\n      sorter: (a, b) =>\n        moment(a.expiration_date).format(\"YYYYMMDD\") -\n        moment(b.expiration_date).format(\"YYYYMMDD\"),\n      render: (priority, record) => getPriorityIcon(record.expiration_date),\n    },\n    {\n      title: \"Edit\",\n      dataIndex: \"\",\n      key: \"\",\n      render: (record) => (\n        <div\n          style={{\n            display: \"grid\",\n            justifyContent: \"center\",\n            alignContent: \"center\",\n          }}\n        >\n          <Dropdown\n            overlay={() => menuItems(record)}\n            placement=\"bottomCenter\"\n            trigger=\"hover\"\n          >\n            <Button\n              className=\"edit-button\"\n              onClick={() => {\n                fetchItemData(record);\n              }}\n            >\n              <EllipsisOutlined style={{ fontSize: \"22px\" }} />{\" \"}\n            </Button>\n          </Dropdown>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <div className=\"raw-material-table\">\n      <div className=\"table-headers\">\n        <div className=\"table-header-position\">\n          <div className=\"table-text\">\n            <div>\n              <h2 className=\"main-header-table\">Raw Materials ({rowCount})</h2>\n            </div>\n          </div>\n          <div className=\"table-buttons\">\n            <div>\n              <TooltipComponent\n                text=\"Clear search and filters\"\n                component={\n                  <Button\n                    className=\"table-clear\"\n                    size=\"large\"\n                    onClick={handleClear}\n                  >\n                    Clear\n                  </Button>\n                }\n              />\n              <Button\n                name=\"Filter Table\"\n                className=\"table-filter\"\n                type=\"primary\"\n                size=\"large\"\n                onClick={() => setFilterVisible(true)}\n              >\n                <RawMaterialFilter\n                  filterVisible={filterVisible}\n                  closeFilter={(e) => {\n                    e.stopPropagation();\n                    setFilterVisible(false);\n                  }}\n                  handleFilter={handleFilter}\n                  handleClear={handleClear}\n                />\n                Filter ({activeFilters})\n              </Button>\n            </div>\n            <div>\n              <div className=\"search-add\">\n                <AutoComplete\n                  className=\"auto-complete\"\n                  options={itemNames}\n                  filterOption={(searchText, option) =>\n                    option.value\n                      .toUpperCase()\n                      .indexOf(searchText.toUpperCase()) !== -1\n                  }\n                >\n                  <Search\n                    className=\"table-search\"\n                    placeholder=\"Search for a raw material...\"\n                    allowClear\n                    size=\"large\"\n                    value={searchText}\n                    onSearch={handleSearch}\n                  />\n                </AutoComplete>\n                <Button\n                  name=\"Add Raw Material\"\n                  className=\"table-add\"\n                  type=\"primary\"\n                  size=\"large\"\n                  icon={<PlusOutlined />}\n                  onClick={() => setCreateModalVisible(true)}\n                >\n                  Add Raw Material\n                  <CreateRawMaterial\n                    visible={createModalVisible}\n                    close={(e) => {\n                      e.stopPropagation();\n                      setCreateModalVisible(false);\n                    }}\n                    sendChangesToParent={createRawMaterial}\n                  />\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Spin spinning={tableLoading} tip=\"Loading...\" size=\"large\">\n        <Table\n          className=\"table-header\"\n          columns={RawMaterialTableColumns.filter(\n            (col) =>\n              col.dataIndex !== \"form\" &&\n              col.dataIndex !== \"received_date\" &&\n              col.dataIndex !== \"raw_material_id\"\n          )}\n          dataSource={table}\n          rowKey={\"raw_material_id\"}\n          pagination={{ pageSize: 8, position: [\"bottomCenter\"] }}\n          size=\"small\"\n          rowSelection={rowSelection}\n        />\n      </Spin>\n    </div>\n  );\n};\n\nexport default RawMaterialTable;\n","import SfpFilter from \"./SfpFilter\";\n\nexport default SfpFilter;\n","import FilterModal from \"../../../General/FilterModal\";\nimport PropTypes from \"prop-types\";\nimport { useEffect, useState } from \"react\";\nimport { API } from \"../../../../api\";\nimport {\n  InputSelect,\n  InputRangePicker,\n  PriorityChooser,\n} from \"../../../InputFields\";\nimport { Button } from \"antd\";\n\nconst SfpFilter = ({\n  filterVisible,\n  closeFilter,\n  handleFilter,\n  handleClear,\n}) => {\n  SfpFilter.propTypes = {\n    filterVisible: PropTypes.bool,\n    closeFilter: PropTypes.func,\n    handleFilter: PropTypes.func,\n    handleClear: PropTypes.func,\n  };\n\n  /* Data Fields */\n  const [locations, setLocations] = useState([]);\n\n  /* Input Fields */\n  const [location, setLocation] = useState(null);\n  const [expirationDate, setExpirationDate] = useState(null);\n  const [priority, setPriority] = useState(\"\");\n\n  useEffect(() => {\n    API.locations.fetchLocations().then((res) => setLocations(res));\n  }, []);\n\n  const passStatesToParent = (e) => {\n    handleFilter({\n      location: location,\n      expiration_date: expirationDate,\n      priority: priority,\n    });\n    closeFilter(e);\n  };\n\n  const resetFields = () => {\n    setLocation(null);\n    setExpirationDate(null);\n    setPriority(\"\");\n    handleClear();\n  };\n\n  const handlePriority = (e) => {\n    if (e.target.value === \"\") {\n      setPriority(\"\");\n    } else {\n      setPriority(e.target.value);\n    }\n  };\n\n  return (\n    <FilterModal\n      visible={filterVisible}\n      onCancel={closeFilter}\n      onOk={(e) => passStatesToParent(e)}\n      content={\n        <section className=\"rows\">\n          <div className=\"columns\">\n            <InputSelect\n              header=\"Stored Location\"\n              options={locations}\n              value={location}\n              placeholder=\"All locations...\"\n              onChange={(e) => setLocation(e)}\n              allowClear={true}\n            />\n            <InputRangePicker\n              header=\"Expiration Date\"\n              value={expirationDate}\n              onChange={(e) => setExpirationDate(e)}\n            />\n          </div>\n          <div className=\"priority-clear\">\n            <PriorityChooser value={priority} onClick={handlePriority} />\n            <Button type=\"dashed\" onClick={resetFields}>\n              Reset\n            </Button>\n          </div>\n        </section>\n      }\n    />\n  );\n};\n\nexport default SfpFilter;\n","import ManageFormulation from \"./ManageFormulation\";\n\nexport default ManageFormulation;\n","import React, { useEffect, useState } from \"react\";\nimport { Modal, Radio } from \"antd\";\nimport PropTypes from \"prop-types\";\nimport RawMaterialTable from \"../RawMaterialTable\";\nimport \"./ManageFormulation.scss\";\nimport { API } from \"../../../api\";\n\nconst ManageFormulation = ({\n  visible,\n  onClose,\n  formulation,\n  handleFormulation,\n}) => {\n  ManageFormulation.propTypes = {\n    visible: PropTypes.bool,\n    onClose: PropTypes.func,\n    formulation: PropTypes.array,\n    handleFormulation: PropTypes.func,\n  };\n\n  const [selected, setSelected] = useState([]);\n\n  useEffect(() => {\n    if (formulation !== undefined) {\n      let formulationArray = Object.keys(formulation).map(\n        (key) => formulation[key].raw_material_id\n      );\n      setSelected(formulationArray);\n    }\n  }, [formulation]);\n\n  const rowSelection = {\n    type: () => <Radio>Checkbox</Radio>,\n    selectedRowKeys: selected,\n    onChange: (selectedRowKeys) => {\n      setSelected(selectedRowKeys);\n    },\n    hideSelectAll: () => false,\n  };\n\n  const handleOk = (e) => {\n    // We only get the id of the materials, so we need to refetch its information from API request.\n    // We need to check that we send the information of the selected materials to the parent component.\n    API.rawMaterial.fetchAll().then((res) => {\n      let temp = [];\n      selected.forEach((id) => {\n        let rawMaterial = res.find((item) => item.raw_material_id === id);\n        if (rawMaterial !== undefined) {\n          temp.push({\n            raw_material_id: rawMaterial.raw_material_id,\n            percentage: 0,\n            country: rawMaterial.country,\n            company: rawMaterial.company,\n            material_name: rawMaterial.material_name,\n          });\n        }\n      });\n      handleFormulation(temp);\n    });\n    onClose(e);\n  };\n\n  return (\n    <Modal\n      centered\n      width=\"1100px\"\n      visible={visible}\n      onCancel={(e) => onClose(e)}\n      onOk={(e) => handleOk(e)}\n    >\n      <section className=\"ManageFormulation\">\n        <RawMaterialTable rowSelection={{ ...rowSelection }} />\n      </section>\n    </Modal>\n  );\n};\n\nexport default ManageFormulation;\n","import { checkString, checkURLString } from \"../helper/Checker\";\nimport PropTypes from \"prop-types\";\nimport { isEqual } from \"lodash/fp\";\n\nclass SfpClass {\n  #sfp_id = null;\n  #sfp_name = \"\";\n  #unit = \"\";\n  #location = \"\";\n  #image = \"\";\n  #process_steps = \"\";\n\n  constructor(data) {\n    if (data !== undefined) {\n      this.#sfp_id = data.sfp_id;\n      this.#sfp_name = data.sfp_name;\n      this.#unit = data.unit;\n      this.#location = data.location;\n      this.#image = data.image;\n      this.#process_steps = data.process_steps;\n    }\n  }\n\n  toJsonObject() {\n    return {\n      sfp_id: this.#sfp_id,\n      sfp_name: this.#sfp_name,\n      unit: this.#unit,\n      location: this.#location,\n      image: this.#image,\n      process_steps: this.#process_steps,\n    };\n  }\n\n  isEqual(sfpClass) {\n    return isEqual(this.toJsonObject(), sfpClass.toJsonObject());\n  }\n\n  /* Get functions */\n  get sfp_id() {\n    return this.#sfp_id;\n  }\n\n  get sfp_name() {\n    return this.#sfp_name;\n  }\n\n  get unit() {\n    return this.#unit;\n  }\n\n  get location() {\n    return this.#location;\n  }\n\n  get image() {\n    return this.#image;\n  }\n\n  get process_steps() {\n    return this.#process_steps;\n  }\n\n  /* Set Functions */\n  set sfp_id(n) {\n    this.propTypes = {\n      n: PropTypes.number,\n    };\n    if (n >= 0) {\n      this.#sfp_id = n;\n    }\n    return this;\n  }\n\n  set sfp_name(s) {\n    this.propTypes = {\n      s: PropTypes.string,\n    };\n    console.log(\"HERE\" + s);\n    if (checkString(s, this.#sfp_name)) {\n      this.#sfp_name = s;\n    }\n    return this;\n  }\n\n  set unit(s) {\n    this.propTypes = {\n      s: PropTypes.string,\n    };\n    if (checkString(s, this.#unit)) {\n      this.#unit = s;\n    }\n    return this;\n  }\n\n  set location(s) {\n    this.propTypes = {\n      s: PropTypes.string,\n    };\n    if (checkString(s, this.#location)) {\n      this.#location = s;\n    }\n    return this;\n  }\n\n  set image(s) {\n    this.propTypes = {\n      s: PropTypes.string,\n    };\n    if (checkURLString(s, this.#image)) {\n      this.#image = s;\n    }\n    return this;\n  }\n\n  set process_steps(s) {\n    this.propTypes = {\n      s: PropTypes.string,\n    };\n    if (checkString(s, this.#process_steps)) {\n      this.#process_steps = s;\n    }\n    return this;\n  }\n}\n\nexport default SfpClass;\n","import TextEditor from \"./TextEditor\";\n\nexport default TextEditor;","import React from \"react\";\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport PropTypes from \"prop-types\";\nimport \"./TextEditor.scss\";\n\nconst TextEditor = ({ originalData, onChange, disabled }) => {\n  TextEditor.propTypes = {\n    originalData: PropTypes.string,\n    onChange: PropTypes.func,\n  };\n\n  return (\n    <section className=\"TextEditor\">\n      <CKEditor\n        editor={ClassicEditor}\n        data={originalData}\n        disabled={disabled}\n        config={{\n          removePlugins: [\"EasyImage\", \"ImageUpload\"],\n        }}\n        onReady={(editor) => {\n          // You can store the \"editor\" and use when it is needed.\n          console.log(\"Editor is ready to use!\", editor);\n        }}\n        onChange={(event, editor) => {\n          const data = editor.getData();\n          onChange(data);\n          console.log({ event, editor, data });\n        }}\n        onBlur={(event, editor) => {\n          console.log(\"Blur.\", editor);\n        }}\n        onFocus={(event, editor) => {\n          console.log(\"Focus.\", editor);\n        }}\n      />\n    </section>\n  );\n};\n\nexport default TextEditor;\n","import \"./CreateSfp.scss\";\nimport { Modal, Table, Button, Tabs, message } from \"antd\";\nimport { useState, useEffect } from \"react\";\nimport { InputField, InputSelect } from \"../../InputFields\";\nimport Units from \"../../General/Units\";\nimport { API } from \"../../../api\";\nimport ImageUploader from \"../../General/ImageUploader\";\nimport PropTypes from \"prop-types\";\nimport ManageFormulation from \"../ManageFormulation/\";\nimport InputNumber from \"../../General/InputNumber\";\nimport SfpClass from \"../../../classes/SfpClass\";\nimport { Link } from \"react-router-dom\";\nimport TextEditor from \"../../General/TextEditor\";\nimport { useHistory } from \"react-router\";\n\nconst { TabPane } = Tabs;\n\nconst CreateSfp = ({ visible, onClose, sendChangesToParent }) => {\n  CreateSfp.propTypes = {\n    visible: PropTypes.bool,\n    onClose: PropTypes.func,\n    sendChangesToParent: PropTypes.func,\n  };\n\n  const history = useHistory();\n\n  const [sfpForm, setSfpForm] = useState([]);\n  const [formulation, setFormulation] = useState([]);\n  const [locations, setLocations] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [unit, setUnit] = useState(\"g\");\n  const [image, setImage] = useState(\"\");\n  const [location, setLocation] = useState(\"Ambient\");\n  const [processSteps, setProcessSteps] = useState(\"\");\n  const [showFormulationModal, setShowFormulationModal] = useState(false);\n\n  useEffect(() => {\n    API.locations.fetchLocations().then((res) => setLocations(res));\n    setSfpForm(new SfpClass());\n  }, []);\n\n  const formulation_columns = [\n    {\n      title: \"raw_material_id\",\n      dataIndex: \"raw_material_id\",\n      key: \"raw_material_id\",\n    },\n    {\n      title: \"Material Name\",\n      dataIndex: \"material_name\",\n      key: \"material_name\",\n      render: (material_name, record) => (\n        <Link to={`/inventory/rawmaterial/${record.raw_material_id}`}>\n          {material_name}\n        </Link>\n      ),\n    },\n    {\n      title: \"Brand\",\n      dataIndex: \"company\",\n      key: \"company\",\n    },\n    {\n      title: \"Country\",\n      dataIndex: \"country\",\n      key: \"country\",\n    },\n    {\n      title: \"Percentage (%)\",\n      dataIndex: \"percentage\",\n      key: \"percentage\",\n      render: (percentage, record) => (\n        <InputNumber\n          style={{ width: \"8rem\" }}\n          placeholder={`0 - 100%`}\n          max={100}\n          defaultValue={0}\n          onChange={(e) => editPercentage(e, record)}\n        />\n      ),\n    },\n  ];\n\n  const handleFormulation = (form) => {\n    form.forEach((item) => {\n      formulation.forEach((e) => {\n        if (e.raw_material_id === item.raw_material_id) {\n          item.percentage = e.percentage;\n          return;\n        }\n      });\n    });\n    setFormulation(form);\n  };\n\n  const editPercentage = (e, record) => {\n    if (0 <= e <= 100) {\n      formulation.forEach((item) => {\n        if (item.raw_material_id === record.raw_material_id) {\n          item.percentage = e;\n        }\n      });\n    }\n    console.log(formulation);\n  };\n\n  const handleImage = (file) => {\n    file ? setImage(file) : setImage(null);\n  };\n\n  const imageAPI = async () => {\n    if (image !== undefined && image !== null && image !== \"\") {\n      await API.sfp.uploadImage(image, sfpForm.sfp_id).then((res) => {\n        console.log(\"uploading picture\");\n        console.log(res);\n        sfpForm.image = res;\n      });\n    }\n  };\n\n  const passingRestrictions = () => {\n    if (name === \"\") {\n      message.warning(\"Please enter a SFP name!\");\n      return false;\n    } else if (formulation.length === 0) {\n      message.warning(\"Please add raw materials to your formulation!\");\n      return false;\n    }\n    return true;\n  };\n\n  const handleOk = async (e) => {\n    if (!passingRestrictions()) {\n      return;\n    }\n    sfpForm.sfp_name = name;\n    sfpForm.unit = unit;\n    sfpForm.location = location;\n    sfpForm.process_steps = processSteps;\n    await createSfpAPI().then(async (res) => {\n      if (res !== \"failed\") {\n        await imageAPI().then(() => {\n          sendChangesToParent(sfpForm);\n          history.push(`/inventory/sfp/${sfpForm.sfp_id}`);\n        });\n      }\n    });\n    onClose(e);\n  };\n\n  const createSfpAPI = async () => {\n    let response = await API.sfp\n      .createSfp(sfpForm.toJsonObject())\n      .then((res) => {\n        sfpForm.sfp_id = res;\n      });\n\n    await API.sfp.createFormulation(sfpForm.sfp_id, formulation);\n\n    return response;\n  };\n\n  const selectRawMaterials = (\n    <ManageFormulation\n      visible={showFormulationModal}\n      onClose={(e) => {\n        e.stopPropagation();\n        setShowFormulationModal(false);\n      }}\n      formulation={formulation}\n      handleFormulation={handleFormulation}\n    />\n  );\n\n  return (\n    <Modal\n      maskClosable={false}\n      visible={visible}\n      width={\"800px\"}\n      centered\n      onCancel={(e) => onClose(e)}\n      onOk={(e) => handleOk(e)}\n    >\n      <section className=\"CreateSfp\">\n        <h1>Add a Semi-Finished Product</h1>\n        <div className=\"rows\">\n          <div className=\"information\">\n            <InputField\n              header={\"Semi-Finished Product Name\"}\n              onChange={(e) => setName(e.target.value)}\n              value={name}\n              placeholder={\"Enter SFP name...\"}\n            />\n            <div className=\"side-by-side\">\n              <InputSelect\n                header={\"Units\"}\n                options={Units}\n                value={unit}\n                onChange={(e) => {\n                  if (e !== unit) {\n                    setUnit(e);\n                  }\n                }}\n              />\n              <InputSelect\n                header={\"Location\"}\n                options={locations}\n                value={location}\n                onChange={(e) => {\n                  if (e !== location) {\n                    setLocation(e);\n                  }\n                }}\n              />\n            </div>\n          </div>\n          <div className=\"header-field-wrapper\">\n            <span className=\"sub-header\">Image</span>\n            <ImageUploader handleImage={handleImage} imageURL={\"\"} />\n          </div>\n        </div>\n\n        <Tabs defaultActiveKey={1}>\n          <TabPane tab={\"Formulation\"} key=\"1\">\n            <div className=\"formulation\">\n              <div className=\"table\">\n                <Table\n                  size=\"small\"\n                  columns={formulation_columns.filter(\n                    (col) => col.dataIndex !== \"raw_material_id\"\n                  )}\n                  dataSource={formulation}\n                  rowKey={\"raw_material_id\"}\n                  footer={() => (\n                    <div style={{ display: \"grid\", justifyContent: \"center\" }}>\n                      <Button\n                        type=\"primary\"\n                        onClick={() => setShowFormulationModal(true)}\n                      >\n                        Manage Formulation\n                      </Button>\n                      {selectRawMaterials}\n                    </div>\n                  )}\n                  bordered\n                  pagination={false}\n                />\n              </div>\n            </div>\n          </TabPane>\n          <TabPane tab={\"Process Steps\"} key=\"2\">\n            <div className=\"process-steps\">\n              <TextEditor\n                originalData={processSteps}\n                onChange={(data) => setProcessSteps(data)}\n              />\n            </div>\n          </TabPane>\n        </Tabs>\n      </section>\n    </Modal>\n  );\n};\n\nexport default CreateSfp;\n","import CreateSfp from \"./CreateSfp\";\n\nexport default CreateSfp;\n","import React, { createContext, useState } from \"react\";\n\nconst SfpContext = createContext({});\n\nconst EditSfpProvider = (props) => {\n  const [editVisible, setEditVisible] = useState({});\n\n  const openEdit = (id) => {\n    setEditVisible({ [id]: true });\n  };\n\n  const closeEdit = (e, id) => {\n    e.stopPropagation();\n    setEditVisible({ [id]: false });\n  };\n\n  const editContextCalue = {\n    openEdit,\n    closeEdit,\n    editVisible,\n  };\n  return <SfpContext.Provider value={editContextCalue} {...props} />;\n};\n\nconst useEditSfp = () => React.useContext(SfpContext);\n\nexport { EditSfpProvider, useEditSfp };\n","import React from \"react\";\nimport { Modal, Table, Button, Tabs, message } from \"antd\";\nimport { useState, useEffect } from \"react\";\nimport { InputField, InputSelect } from \"../../InputFields\";\nimport Units from \"../../General/Units\";\nimport { API } from \"../../../api\";\nimport \"./EditSfp.scss\";\nimport ImageUploader from \"../../General/ImageUploader\";\nimport PropTypes from \"prop-types\";\nimport { InputNumber } from \"antd\";\nimport SfpClass from \"../../../classes/SfpClass\";\nimport { isEqual } from \"lodash/fp\";\nimport { Link } from \"react-router-dom\";\nimport { useEditSfp } from \"../../../context/edit-sfp\";\nimport { Popconfirm } from \"antd\";\nimport TextEditor from \"../../General/TextEditor\";\nconst { TabPane } = Tabs;\n\nconst EditSfp = ({ visible, data, sendChangesToParent, deleteSfp }) => {\n  EditSfp.propTypes = {\n    visible: PropTypes.bool,\n    data: PropTypes.object,\n    sendChangesToParent: PropTypes.func,\n    deleteSfp: PropTypes.func,\n  };\n\n  const [{ originalData, editData }, setData] = useState({\n    originalData: null,\n    editData: null,\n  });\n\n  const [{ editForm, originalForm }, setForm] = useState({\n    editForm: [],\n    originalForm: [],\n  });\n\n  const [locations, setLocations] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [unit, setUnit] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [processSteps, setProcessSteps] = useState(\"\");\n  const [currentImage, setCurrentImage] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [id, setId] = useState();\n  const { closeEdit } = useEditSfp();\n\n  useEffect(() => {\n    API.locations.fetchLocations().then((res) => setLocations(res));\n\n    const fetchFormulation = () => {\n      API.sfp.fetchFormulation(data.sfp_id).then((res) => {\n        setForm({\n          editForm: JSON.parse(JSON.stringify(res)),\n          originalForm: JSON.parse(JSON.stringify(res)),\n        });\n      });\n    };\n\n    if (data !== null && data !== undefined) {\n      setName(data.sfp_name);\n      setUnit(data.unit);\n      setLocation(data.location);\n      setProcessSteps(data.process_steps);\n      setCurrentImage(data.image);\n      setId(data.sfp_id);\n      setData({\n        originalData: new SfpClass(data),\n        editData: new SfpClass(data),\n      });\n      fetchFormulation();\n    }\n  }, [data]);\n\n  const formulation_columns = [\n    {\n      title: \"raw_material_id\",\n      dataIndex: \"raw_material_id\",\n      key: \"raw_material_id\",\n    },\n    {\n      title: \"Material Name\",\n      dataIndex: \"material_name\",\n      key: \"material_name\",\n      render: (material_name, record) => (\n        <Link to={`/inventory/rawmaterial/${record.raw_material_id}`}>\n          {material_name}\n        </Link>\n      ),\n    },\n    {\n      title: \"Brand\",\n      dataIndex: \"company\",\n      key: \"company\",\n    },\n    {\n      title: \"Country\",\n      dataIndex: \"country\",\n      key: \"country\",\n    },\n    {\n      title: \"Percentage (%)\",\n      dataIndex: \"percentage\",\n      key: \"percentage\",\n      render: (percentage, record) => (\n        <InputNumber\n          className=\"input-number\"\n          size={\"small\"}\n          style={{ width: \"8rem\" }}\n          placeholder={0}\n          min={0}\n          max={100}\n          defaultValue={percentage}\n          step={0.1}\n          onChange={(e) => editPercentage(e, record)}\n        />\n      ),\n    },\n  ];\n\n  const editPercentage = (e, record) => {\n    editForm.forEach((item) => {\n      if (item.raw_material_id === record.raw_material_id) {\n        item.percentage = e;\n      }\n    });\n  };\n\n  const handleEdit = async (e) => {\n    editData.sfp_name = name;\n    editData.unit = unit;\n    editData.location = location;\n    editData.process_steps = processSteps;\n\n    await handleImageAPI().then(async () => {\n      if (editData.isEqual(originalData) && isEqual(editForm, originalForm)) {\n        message.success(\"No changes made.\");\n      } else {\n        sendChangesToParent({\n          editForm: editForm,\n          sfp_id: id,\n          sfp_name: name,\n          unit: unit,\n          location: location,\n          process_steps: processSteps,\n          image: editData.image,\n        });\n\n        //API\n        API.sfp.editInformation(id, editData.toJsonObject());\n\n        editForm.forEach((item) => {\n          API.sfp.editFormulation(id, item);\n        });\n\n        //update the originaldata\n        originalData.name = name;\n        originalData.unit = unit;\n        originalData.location = location;\n        originalData.process_steps = processSteps;\n\n        //TODO: set ORIGINALFORM to EDITFORM, CURRENTLY NOT WORKING.\n\n        //success\n        message.success(\"Successfully edited SFP.\");\n      }\n      closeEdit(e, id);\n    });\n  };\n\n  const handleImage = (file) => {\n    file ? setImage(file) : setImage(null);\n  };\n\n  const handleImageAPI = async () => {\n    if (image === \"\") {\n      return;\n    } else if (image !== null && editData.image === \"\") {\n      await API.sfp.uploadImage(image, id).then((res) => {\n        console.log(\"uploading picture\");\n        editData.image = res;\n      });\n    } else if (image !== null && editData.image !== \"\") {\n      await API.sfp.updateImage(image, id).then((res) => {\n        console.log(\"updating picture\");\n        editData.image = res;\n      });\n    } else if (image === null && editData.image !== \"\") {\n      await API.sfp.deleteImage(id).then(() => {\n        console.log(\"deleting picture\");\n        editData.image = \"\";\n      });\n    }\n  };\n\n  return (\n    <Modal\n      maskClosable={false}\n      visible={visible}\n      width={\"800px\"}\n      centered\n      footer={[\n        <section className=\"edit-raw-material-footer\">\n          <div>\n            <Popconfirm\n              title={\"Are you sure?\"}\n              okType={\"danger\"}\n              okText={\"Delete\"}\n              onConfirm={(e) => deleteSfp(e, id)}\n            >\n              <Button type=\"danger\">Delete</Button>\n            </Popconfirm>\n          </div>\n          <div>\n            <Button key=\"close\" onClick={(e) => closeEdit(e, id)}>\n              Cancel\n            </Button>\n            <Button key=\"submit\" type=\"primary\" onClick={(e) => handleEdit(e)}>\n              OK\n            </Button>\n          </div>\n        </section>,\n      ]}\n      onCancel={(e) => closeEdit(e, id)}\n    >\n      <section className=\"EditSfp\">\n        <h1>Edit {name}</h1>\n        <div className=\"rows\">\n          <div className=\"information\">\n            <InputField\n              header={\"Semi-Finished Product Name\"}\n              onChange={(e) => {\n                setName(e.target.value);\n              }}\n              value={name}\n              placeholder={\"Enter a name...\"}\n            />\n            <div className=\"side-by-side\">\n              <InputSelect\n                header={\"Units\"}\n                options={Units}\n                value={unit}\n                onChange={(e) => {\n                  if (e !== unit) {\n                    setUnit(e);\n                  }\n                }}\n              />\n              <InputSelect\n                header={\"Location\"}\n                options={locations}\n                value={location}\n                onChange={(e) => {\n                  if (e !== location) {\n                    setLocation(e);\n                  }\n                }}\n              />\n            </div>\n          </div>\n          <div className=\"header-field-wrapper\">\n            <span className=\"sub-header\">Image</span>\n            <ImageUploader handleImage={handleImage} imageURL={currentImage} />\n          </div>\n        </div>\n\n        <Tabs defaultActiveKey={1}>\n          <TabPane tab={\"Formulation\"} key=\"1\">\n            <div className=\"formulation\">\n              <div className=\"table\">\n                <Table\n                  columns={formulation_columns.filter(\n                    (col) => col.dataIndex !== \"raw_material_id\"\n                  )}\n                  dataSource={originalForm || []}\n                  rowKey={\"raw_material_id\"}\n                  bordered\n                  pagination={false}\n                  size=\"middle\"\n                />\n              </div>\n            </div>\n          </TabPane>\n          <TabPane tab={\"Process Steps\"} key=\"2\">\n            <div className=\"process-steps\">\n              <TextEditor\n                originalData={processSteps}\n                onChange={(data) => setProcessSteps(data)}\n              />\n            </div>\n          </TabPane>\n        </Tabs>\n      </section>\n    </Modal>\n  );\n};\n\nexport default EditSfp;\n","import EditSfp from \"./EditSfp\";\n\nexport default EditSfp;\n","import \"./SfpTable.scss\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Table,\r\n  Spin,\r\n  Input,\r\n  Button,\r\n  Dropdown,\r\n  Menu,\r\n  Typography,\r\n} from \"antd\";\r\nimport { PlusOutlined, EllipsisOutlined } from \"@ant-design/icons\";\r\nimport TooltipComponent from \"../../General/TooltipComponent\";\r\nimport { AutoComplete } from \"antd\";\r\nimport SfpFilter from \"./SfpFilter\";\r\nimport moment from \"moment\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { checkDate } from \"../../../helper/Checker\";\r\nimport { getPriority } from \"../../General/Priority/Priority\";\r\nimport { API } from \"../../../api\";\r\nimport CreateSfp from \"../CreateSfp\";\r\nimport { getPriorityIcon } from \"../../General/Priority/Priority\";\r\nimport { useEditSfp } from \"../../../context/edit-sfp\";\r\nimport EditSfp from \"../EditSfp\";\r\n\r\nconst { Text } = Typography;\r\nconst { Search } = Input;\r\n\r\nconst SfpTable = () => {\r\n  const [tableLoading, setTableLoading] = useState(true);\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [data, setData] = useState([]);\r\n  const [table, setTable] = useState([]);\r\n  const [filterVisible, setFilterVisible] = useState(false);\r\n  const [itemNames] = useState([]);\r\n  const [rowCount, setRowCount] = useState(0);\r\n  const [activeFilters, setActiveFilters] = useState(0);\r\n  const [showCreateModal, setShowCreateModal] = useState(false);\r\n  const [itemData, setItemData] = useState([]);\r\n  const [itemForm, setItemForm] = useState([]);\r\n  const { openEdit, editVisible, closeEdit } = useEditSfp();\r\n\r\n  useEffect(() => {\r\n    API.sfp.fetchTable().then((res) => {\r\n      setTable(res);\r\n      setData(res);\r\n      setRowCount(res.length);\r\n      setTableLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  const handleClear = () => {\r\n    setTable(data);\r\n    setSearchText(\"\");\r\n    setActiveFilters(0);\r\n    setRowCount(data.length);\r\n  };\r\n\r\n  const handleSearch = (input) => {\r\n    setSearchText(input);\r\n    setTable(\r\n      data.filter((item) =>\r\n        item.sfp_name.toLowerCase().includes(input.toLowerCase())\r\n      )\r\n    );\r\n    let count = 0;\r\n    data.forEach((item) => {\r\n      if (item.sfp_name.toLowerCase().includes(input.toLowerCase())) {\r\n        count++;\r\n      }\r\n    });\r\n    setRowCount(count);\r\n  };\r\n\r\n  const handleFilter = (fields) => {\r\n    const states = fields;\r\n    console.log(states);\r\n    // Tables can only interpret empty strings (not null values), we therefore have to convert it.\r\n    let count = 0;\r\n    for (var key in states) {\r\n      const value = states[key];\r\n      value == null || value === \"Invalid date\" || value === \"\"\r\n        ? (states[key] = \"\")\r\n        : setActiveFilters(count++);\r\n    }\r\n    setActiveFilters(count);\r\n\r\n    const filteredTable = data.filter(\r\n      (item) =>\r\n        item.location.includes(states.location) &&\r\n        moment(item.expiration_date)\r\n          .format(\"YYYYMMDD\")\r\n          .includes(\r\n            checkDate(\r\n              item.expiration_date,\r\n              states.expiration_date[0],\r\n              states.expiration_date[1]\r\n            )\r\n          ) &&\r\n        getPriority(item.expiration_date)\r\n          .toLowerCase()\r\n          .includes(states.priority)\r\n    );\r\n    setRowCount(filteredTable.length);\r\n    setTable(filteredTable);\r\n  };\r\n\r\n  const openCreateModal = () => {\r\n    setShowCreateModal(true);\r\n  };\r\n\r\n  const closeCreateModal = (e) => {\r\n    e.stopPropagation();\r\n    setShowCreateModal(false);\r\n  };\r\n\r\n  const createSfp = (form) => {\r\n    const newMaterial = table.concat({\r\n      sfp_id: form.sfp_id,\r\n      sfp_name: form.sfp_name,\r\n      total_amount: 0,\r\n      location: form.location,\r\n      expiration_date: null,\r\n      unit: form.unit,\r\n      image: \"\",\r\n      country: \"Sweden\",\r\n      company: \"Accelerator Lab\",\r\n    });\r\n    setTable(newMaterial);\r\n    setData(newMaterial);\r\n  };\r\n\r\n  const createSfpModal = (\r\n    <CreateSfp\r\n      visible={showCreateModal}\r\n      onClose={closeCreateModal}\r\n      sendChangesToParent={createSfp}\r\n    />\r\n  );\r\n\r\n  const fetchItemData = (record) => {\r\n    console.log(record)\r\n    setItemData(record);\r\n  };\r\n\r\n  const fetchItemFormulation = async (record) => {\r\n    await API.sfp.fetchFormulation(record.sfp_id).then((res) => {\r\n      setItemForm(res);\r\n    });\r\n  };\r\n\r\n  const deleteSfp = (e, id) => {\r\n    closeEdit(e);\r\n    let newTable = table.filter((item) => item.sfp_id !== id);\r\n    setTable(newTable);\r\n    setData(newTable);\r\n    API.sfp.disableSfp(id).then((res) => {\r\n      console.log(res);\r\n    });\r\n  };\r\n\r\n  const handleSfpEdit = (form) => {\r\n    let itemIndex = table.findIndex((item) => item.sfp_id === form.sfp_id);\r\n    table[itemIndex].sfp_name = form.sfp_name;\r\n    table[itemIndex].location = form.location;\r\n    table[itemIndex].unit = form.unit;\r\n  };\r\n\r\n  const menuItems = (record) => {\r\n    return (\r\n      <Menu style={{ borderRadius: \"4px\" }}>\r\n        <Menu.Item\r\n          key=\"1\"\r\n          onClick={() => openEdit(record.sfp_id)}\r\n          style={{ borderRadius: \"4px\" }}\r\n        >\r\n          <Text> Edit item </Text>\r\n          <EditSfp\r\n            visible={editVisible[record.sfp_id]}\r\n            data={itemData}\r\n            sendChangesToParent={handleSfpEdit}\r\n            deleteSfp={deleteSfp}\r\n          />\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n  };\r\n\r\n  const sfp_columns = [\r\n    {\r\n      title: \"sfp_id\",\r\n      dataIndex: \"sfp_id\",\r\n      key: \"sfp_id\",\r\n    },\r\n    {\r\n      title: \"Item name\",\r\n      dataIndex: \"sfp_name\",\r\n      key: \"sfp_name\",\r\n      render: (sfp_name, record) => (\r\n        <Link to={\"/inventory/sfp/\" + record.sfp_id}>{sfp_name}</Link>\r\n      ),\r\n      sorter: (a, b) => a.name.localeCompare(b.name),\r\n    },\r\n    {\r\n      title: \"Brand\",\r\n      dataIndex: \"company\",\r\n      key: \"company\",\r\n      sorter: (a, b) => a.company.localeCompare(b.company),\r\n    },\r\n    {\r\n      title: \"Country\",\r\n      dataIndex: \"country\",\r\n      key: \"country\",\r\n      sorter: true,\r\n    },\r\n    {\r\n      title: \"Amount (g/unit)\",\r\n      dataIndex: \"total_amount\",\r\n      key: \"total_amount\",\r\n      sorter: (a, b) => a.amount - b.amount,\r\n    },\r\n    {\r\n      title: \"Unit\",\r\n      dataIndex: \"unit\",\r\n      key: \"unit\",\r\n    },\r\n    {\r\n      title: \"Location\",\r\n      dataIndex: \"location\",\r\n      key: \"location\",\r\n      sorter: (a, b) => a.location.localeCompare(b.location),\r\n    },\r\n    {\r\n      title: \"Expiration Date\",\r\n      dataIndex: \"expiration_date\",\r\n      key: \"expiration_date\",\r\n      render: (expiration_date) =>\r\n        expiration_date === null ? (\r\n          <p> </p>\r\n        ) : (\r\n          <p style={{ marginBottom: \"auto\" }}>\r\n            {moment(expiration_date).format(\"MMM D, YYYY\")}\r\n          </p>\r\n        ),\r\n      sorter: (a, b) =>\r\n        moment(a.expiration_date).format(\"YYYYMMDD\") -\r\n        moment(b.expiration_date).format(\"YYYYMMDD\"),\r\n    },\r\n    {\r\n      title: \"Priority\",\r\n      sorter: (a, b) =>\r\n        moment(a.expiration_date).format(\"YYYYMMDD\") -\r\n        moment(b.expiration_date).format(\"YYYYMMDD\"),\r\n      render: (priority, record) => getPriorityIcon(record.expiration_date),\r\n    },\r\n    {\r\n      title: \"Edit\",\r\n      dataIndex: \"\",\r\n      key: \"\",\r\n      render: (record) => (\r\n        <div\r\n          style={{\r\n            display: \"grid\",\r\n            justifyContent: \"center\",\r\n            alignContent: \"center\",\r\n          }}\r\n        >\r\n          <Dropdown\r\n            overlay={() => menuItems(record)}\r\n            placement=\"bottomCenter\"\r\n            trigger=\"hover\"\r\n          >\r\n            <Button\r\n              className=\"edit-button\"\r\n              onClick={() => {\r\n                fetchItemData(record);\r\n                fetchItemFormulation(record);\r\n              }}\r\n            >\r\n              <EllipsisOutlined style={{ fontSize: \"22px\" }} />{\" \"}\r\n            </Button>\r\n          </Dropdown>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"SfpTable\">\r\n      <div className=\"table-headers\">\r\n        <div className=\"table-header-position\">\r\n          <div className=\"table-text\">\r\n            <div>\r\n              <h2 className=\"main-header-table\">\r\n                Semi-Finished Products ({rowCount})\r\n              </h2>\r\n            </div>\r\n          </div>\r\n          <div className=\"table-buttons\">\r\n            <div>\r\n              <TooltipComponent\r\n                text=\"Clear search and filters\"\r\n                component={\r\n                  <Button\r\n                    className=\"table-clear\"\r\n                    size=\"large\"\r\n                    onClick={handleClear}\r\n                  >\r\n                    Clear\r\n                  </Button>\r\n                }\r\n              />\r\n              <Button\r\n                name=\"Filter Table\"\r\n                className=\"table-filter\"\r\n                type=\"primary\"\r\n                size=\"large\"\r\n                onClick={() => setFilterVisible(true)}\r\n              >\r\n                <SfpFilter\r\n                  filterVisible={filterVisible}\r\n                  closeFilter={(e) => {\r\n                    e.stopPropagation();\r\n                    setFilterVisible(false);\r\n                  }}\r\n                  handleFilter={handleFilter}\r\n                  handleClear={handleClear}\r\n                />\r\n                Filter ({activeFilters})\r\n              </Button>\r\n            </div>\r\n            <div>\r\n              <div className=\"search-add\">\r\n                <AutoComplete className=\"auto-complete\" options={itemNames}>\r\n                  <Search\r\n                    className=\"table-search\"\r\n                    placeholder=\"Search for a Semi-Finished Product...\"\r\n                    allowClear\r\n                    size=\"large\"\r\n                    value={searchText}\r\n                    onSearch={handleSearch}\r\n                  />\r\n                </AutoComplete>\r\n                <Button\r\n                  className=\"table-add\"\r\n                  type=\"primary\"\r\n                  size=\"large\"\r\n                  icon={<PlusOutlined />}\r\n                  onClick={openCreateModal}\r\n                >\r\n                  Add SFP\r\n                  {createSfpModal}\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Spin spinning={tableLoading} tip=\"Loading...\" size=\"large\">\r\n        <Table\r\n          className=\"table-header\"\r\n          columns={sfp_columns.filter(\r\n            (col) =>\r\n              col.dataIndex !== \"form\" &&\r\n              col.dataIndex !== \"received_date\" &&\r\n              col.dataIndex !== \"sfp_id\"\r\n          )}\r\n          dataSource={table}\r\n          rowKey={\"sfp_id\"}\r\n          pagination={{ pageSize: 8, position: [\"bottomCenter\"] }}\r\n          size=\"small\"\r\n        />\r\n      </Spin>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SfpTable;\r\n","import SfpTable from './SfpTable';\r\n\r\nexport default SfpTable;","import RawMaterialTable from \"../../components/Inventory/RawMaterialTable\";\r\nimport SfpTable from \"../../components/Inventory/SfpTable\";\r\nimport Template from \"../Template\";\r\n\r\nconst Inventory = () => {\r\n  return (\r\n    <Template\r\n      content={\r\n        <section name=\"Inventory\">\r\n          <div>\r\n            <h1 className=\"blue-text\"> Inventory </h1>\r\n            <span className=\"sub-header\">\r\n              Create, edit and retrieve raw materials and semi-finished products\r\n              from the inventory\r\n            </span>\r\n          </div>\r\n          <div style={{ marginTop: \"1.5rem\" }}>\r\n            <RawMaterialTable />\r\n          </div>\r\n          <div style={{ marginTop: \"3rem\" }}>\r\n            <SfpTable />\r\n          </div>\r\n        </section>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default Inventory;\r\n","import moment from \"moment\";\nimport { getPriorityIcon } from \"../../components/General/Priority/Priority\";\n\nexport const general_columns = [\n  {\n    title: \"raw_material_id\",\n    dataIndex: \"raw_material_id\",\n    key: \"raw_material_id\",\n  },\n  {\n    title: \"Material Name\",\n    dataIndex: \"material_name\",\n    key: \"material_name\",\n  },\n  {\n    title: \"Brand\",\n    dataIndex: \"company\",\n    key: \"company\",\n  },\n  {\n    title: \"Country\",\n    dataIndex: \"country\",\n    key: \"country\",\n  },\n  {\n    title: \"Total Amount\",\n    dataIndex: \"total_amount\",\n    key: \"total_amount\",\n  },\n  {\n    title: \"Unit\",\n    dataIndex: \"unit\",\n    key: \"unit\",\n  },\n  {\n    title: \"Form\",\n    dataIndex: \"form\",\n    key: \"form\",\n  },\n  {\n    title: \"Stored Location\",\n    dataIndex: \"location\",\n    key: \"location\",\n  },\n];\n\nexport const nuitrition_columns = [\n  {\n    title: \"Fat\",\n    dataIndex: \"fat\",\n    key: \"fat\",\n  },\n  {\n    title: \"Carbohydrate\",\n    dataIndex: \"carbohydrate\",\n    key: \"carbohydrate\",\n  },\n  {\n    title: \"Protein\",\n    dataIndex: \"protein\",\n    key: \"protein\",\n  },\n  {\n    title: \"Salt\",\n    dataIndex: \"salt\",\n    key: \"salt\",\n  },\n  {\n    title: \"Fiber\",\n    dataIndex: \"fiber\",\n    key: \"fiber\",\n  },\n  {\n    title: \"Sugar\",\n    dataIndex: \"sugar\",\n    key: \"sugar\",\n  },\n  {\n    title: \"Content\",\n    dataIndex: \"content\",\n    key: \"content\",\n  },\n];\n\nexport const stocks_columns = [\n  {\n    title: \"Stock ID\",\n    dataIndex: \"stock_id\",\n    key: \"stock_id\",\n  },\n  {\n    title: \"Amount\",\n    dataIndex: \"amount\",\n    key: \"amount\",\n  },\n  {\n    title: \"Order Date\",\n    dataIndex: \"order_date\",\n    key: \"order_date\",\n    render: (date) =>\n      date === null ? (\n        <p />\n      ) : (\n        <p style={{ marginBottom: \"auto\" }}>\n          {moment(date).format(\"MMM D, YYYY\")}\n        </p>\n      ),\n  },\n  {\n    title: \"Received Date\",\n    dataIndex: \"received_date\",\n    key: \"received_date\",\n    render: (date) => (\n      <p style={{ marginBottom: \"auto\" }}>\n        {moment(date).format(\"MMM D, YYYY\")}\n      </p>\n    ),\n  },\n  {\n    title: \"Expiration Date\",\n    dataIndex: \"expiration_date\",\n    key: \"expiration_date\",\n    render: (date) => (\n      <p style={{ marginBottom: \"auto\" }}>\n        {moment(date).format(\"MMM D, YYYY\")}\n      </p>\n    ),\n  },\n  {\n    title: \"Priority of Usage\",\n    dataIndex: \"priority\",\n    key: \"priority\",\n    render: (priority, record) => getPriorityIcon(record.expiration_date),\n  },\n];\n","import PropTypes from \"prop-types\";\nimport TooltipComponent from \"../components/General/TooltipComponent\";\nimport { Button, Tabs } from \"antd\";\nimport {\n  PlusOutlined,\n  EditOutlined,\n  InfoCircleOutlined,\n} from \"@ant-design/icons\";\n\nconst { TabPane } = Tabs;\n\nconst InventoryInterface = ({\n  name,\n  information,\n  products,\n  history,\n  manageStock,\n  openManageStock,\n  edit,\n  openEdit,\n}) => {\n  InventoryInterface.propTypes = {\n    name: PropTypes.string,\n    information: PropTypes.any,\n    products: PropTypes.any,\n    history: PropTypes.any,\n    manageStock: PropTypes.object,\n    openManageStock: PropTypes.func,\n    edit: PropTypes.object,\n    openEdit: PropTypes.func,\n  };\n\n  return (\n    <section className=\"RawMaterial\">\n      <div className=\"content-header\">\n        <div>\n          <div className=\"header-information\">\n            <h1 className=\"blue-text\">Inventory</h1>\n            <TooltipComponent\n              text={\"Create, edit and retrieve information of items.\"}\n              component={<InfoCircleOutlined />}\n              trigger={\"hover\"}\n            />\n          </div>\n          <span className=\"sub-header\">{name}</span>\n        </div>\n        <div className=\"buttons\">\n          <Button\n            className=\"table-add\"\n            type=\"primary\"\n            size=\"large\"\n            icon={<PlusOutlined />}\n            onClick={openManageStock}\n          >\n            Manage Stock\n            {manageStock}\n          </Button>\n          <Button\n            className=\"table-add\"\n            type=\"primary\"\n            size=\"large\"\n            icon={<EditOutlined />}\n            onClick={openEdit}\n          >\n            Edit\n            {edit}\n          </Button>\n        </div>\n      </div>\n      <div />\n      <div className=\"tabs\">\n        <Tabs\n          defaultActiveKey=\"1\"\n          size={\"large\"}\n          style={{ marginBottom: 32 }}\n          tabPosition=\"top\"\n        >\n          <TabPane tab=\"Information\" key=\"1\">\n            {information}\n          </TabPane>\n          <TabPane tab=\"Products\" key=\"2\" disabled>\n            {products}\n          </TabPane>\n          <TabPane tab=\"History\" key=\"3\" disabled>\n            {history}\n          </TabPane>\n        </Tabs>\n      </div>\n    </section>\n  );\n};\n\nexport default InventoryInterface;\n","const ReductionReasons = [\n  {\n    value: \"Consumtion\",\n  },\n  {\n    value: \"Spill/Waste\",\n    name: \"Spill/Waste\",\n  },\n  {\n    value: \"Correction\",\n    name: \"Correction\",\n  },\n];\n\nexport default ReductionReasons;\n","import React from \"react\";\nimport { getPriorityIcon } from \"../../General/Priority\";\nimport \"./StockInterface.scss\";\nimport moment from \"moment\";\nimport { useState } from \"react\";\nimport { Tabs, message, Modal, Button, Popconfirm, Select, Table } from \"antd\";\nimport { isEqual } from \"lodash/fp\";\nimport InputNumber from \"../../General/InputNumber\";\nimport PropTypes from \"prop-types\";\nimport ReductionReasons from \"../../General/ReductionReasons\";\n\nconst { TabPane } = Tabs;\n\nconst StockInterface = ({\n  visible,\n  close,\n  addStock,\n  reduceStock,\n  editForm,\n  originalForm,\n  AddStockComponents,\n  logistics,\n}) => {\n  StockInterface.propTypes = {\n    visible: PropTypes.bool,\n    close: PropTypes.func,\n    addStock: PropTypes.func,\n    reduceStock: PropTypes.func,\n    editForm: PropTypes.object,\n    originalForm: PropTypes.object,\n    AddStockComponents: PropTypes.object,\n    logistics: PropTypes.array,\n  };\n\n  const [reason, setReason] = useState(\"Consumtion\");\n  const [tabPane, setTabPane] = useState(\"add\");\n\n  /* tabPane 1 is add, tabPane 2 is reduce */\n\n  const handleOk = (e) => {\n    switch (tabPane) {\n      case \"add\":\n        addStock(e);\n        break;\n      case \"reduce\":\n        if (!isEqual(editForm.stocks, originalForm.stocks)) {\n          reduceStock(e);\n          message.success(\"You have succesfully reduced stocks.\");\n        } else {\n          message.success(\"No changes made.\");\n          close(e);\n        }\n        break;\n      default:\n        console.log(\"reached default\");\n    }\n  };\n\n  const popconfirmMessage = () => {\n    return tabPane === \"add\" ? (\n      <span> Are you sure to add this stock? </span>\n    ) : (\n      <span> Are you sure to reduce these quantities? </span>\n    );\n  };\n\n  /* Edits the stock based on what you input */\n  const editStock = (e, record) => {\n    editForm.edit(record.stock_id, e, record.amount);\n  };\n\n  const logistic_columns = [\n    {\n      title: \"Stock ID\",\n      dataIndex: \"stock_id\",\n      key: \"stock_id\",\n    },\n    {\n      title: \"Amount\",\n      key: \"amount\",\n      render: (record) => (\n        <InputNumber\n          style={{ width: \"8rem\" }}\n          placeholder={`0 - ${record.amount}`}\n          max={record.amount}\n          defaultValue={0}\n          onChange={(e) => editStock(e, record)}\n        />\n      ),\n    },\n    {\n      title: \"In Stock\",\n      dataIndex: \"amount\",\n      key: \"amount\",\n    },\n    {\n      title: \"Order Date\",\n      dataIndex: \"order_date\",\n      key: \"order_date\",\n      render: (date) =>\n        date === null ? (\n          <p />\n        ) : (\n          <p style={{ marginBottom: \"auto\" }}>\n            {moment(date).format(\"MMM D, YYYY\")}\n          </p>\n        ),\n    },\n    {\n      title: \"Received Date\",\n      dataIndex: \"received_date\",\n      key: \"received_date\",\n      render: (date) => (\n        <p style={{ marginBottom: \"auto\" }}>\n          {moment(date).format(\"MMM D, YYYY\")}\n        </p>\n      ),\n    },\n    {\n      title: \"Expiration Date\",\n      dataIndex: \"expiration_date\",\n      key: \"expiration_date\",\n      render: (date) => (\n        <p style={{ marginBottom: \"auto\" }}>\n          {moment(date).format(\"MMM D, YYYY\")}\n        </p>\n      ),\n    },\n    {\n      title: \"Priority of Usage\",\n      dataIndex: \"priority\",\n      key: \"priority\",\n      render: (priority, record) => getPriorityIcon(record.expiration_date),\n    },\n  ];\n\n  const changeTabPane = (key) => {\n    key === \"1\" ? setTabPane(\"add\") : setTabPane(\"reduce\");\n  };\n\n  return (\n    <Modal\n      centered\n      maskClosable={false}\n      width={1050}\n      visible={visible}\n      onCancel={close}\n      footer={[\n        <Button key=\"submit\" onClick={close}>\n          Cancel\n        </Button>,\n        <Popconfirm\n          title={popconfirmMessage}\n          onConfirm={handleOk}\n          okText=\"Yes\"\n          cancelText=\"No\"\n        >\n          <Button key=\"submit\" type=\"primary\">\n            OK\n          </Button>\n        </Popconfirm>,\n      ]}\n    >\n      <section className=\"StockInterface\">\n        <Tabs tabPosition={\"right\"} onTabClick={(key) => changeTabPane(key)}>\n          <TabPane tab=\"Add\" key=\"1\">\n            <section className=\"add\">\n              <h1>Add Stock</h1>\n              <div className=\"rows\">{AddStockComponents}</div>\n            </section>\n          </TabPane>\n          <TabPane tab=\"Reduce\" key=\"2\">\n            <section className=\"reduce\">\n              <h1>Reduce Stocks</h1>\n              <div className=\"header-field-wrapper\">\n                <span className=\"sub-header\">Reason:</span>\n                <Select\n                  className=\"input-select\"\n                  options={ReductionReasons}\n                  defaultValue={reason}\n                  style={{ width: \"450px\" }}\n                  onSelect={(e) => setReason(e)}\n                />\n                <Table\n                  columns={logistic_columns}\n                  dataSource={logistics}\n                  size={\"middle\"}\n                  pagination={{ pageSize: 6, position: [\"bottomRight\"] }}\n                  rowKey={\"stock_id\"}\n                />\n              </div>\n            </section>\n          </TabPane>\n        </Tabs>\n      </section>\n    </Modal>\n  );\n};\n\nexport default StockInterface;\n","import StockInterface from \"./StockInterface\";\n\nexport default StockInterface;\n","import { notification } from \"antd\";\n\nconst duration = 6;\n\nexport const SuccessNotification = (description) => {\n  notification[\"success\"]({\n    message: \"Success\",\n    description: description,\n    duration: duration,\n  });\n};\n\nexport const WarningNotification = (description) => {\n  notification[\"warning\"]({\n    message: \"Warning\",\n    description: description,\n    duration: duration,\n  });\n};\n\nexport const ErrorNotification = (description) => {\n  notification[\"error\"]({\n    message: \"Error\",\n    description: description,\n    duration: duration,\n  });\n};\n","class EditStockForm {\n  #stocks = [];\n\n  constructor(data) {\n    if (data !== undefined && data !== null) {\n      data.forEach((stock) => {\n        this.#stocks.push({\n          stock_id: stock.stock_id,\n          old_amount: stock.amount,\n          subtracted_amount: 0,\n          new_amount: stock.amount,\n        });\n      });\n    }\n  }\n\n  get stocks() {\n    return this.#stocks;\n  }\n\n  edit(stock_id, editedAmount, currentAmount) {\n    if (editedAmount !== null && 0 <= editedAmount <= currentAmount) {\n      this.#stocks.forEach((stock) => {\n        if (stock.stock_id === stock_id) {\n          stock.subtracted_amount = editedAmount;\n          stock.new_amount = stock.old_amount - editedAmount;\n        }\n      });\n    }\n  }\n\n  add(stock_id, amount) {\n    this.#stocks.push({\n      stock_id: stock_id,\n      old_amount: amount,\n      subtracted_amount: 0,\n      new_amount: amount,\n    });\n    console.log(this.#stocks);\n  }\n\n  updateForm() {\n    const temp = this.#stocks.filter((e) => e.new_amount !== 0);\n    this.#stocks = temp;\n  }\n\n  toJsonObject() {\n    return JSON.stringify(this.#stocks);\n  }\n}\n\nexport default EditStockForm;\n","import ManageRawMaterialStock from \"./ManageRawMaterialStock\";\n\nexport default ManageRawMaterialStock;\n","import React from \"react\";\nimport StockInterface from \"../StockInterface\";\nimport { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport { message } from \"antd\";\nimport { API } from \"../../../api\";\nimport { SuccessNotification } from \"../../General/Notifications\";\nimport InputNumber from \"../../General/InputNumber\";\nimport EditStockForm from \"../../../classes/EditStockForm\";\nimport InputDatePicker from \"../../InputFields/InputDatePicker\";\nimport { dateFormChecker } from \"../../../helper/Checker\";\n\nconst ManageRawMaterialStock = ({\n  close,\n  visible,\n  unit,\n  logistics,\n  id,\n  sendAddToParent,\n  sendReductionToParent,\n  totalAmount,\n}) => {\n  const [logisticList, setLogisticList] = useState([]);\n  const [editForm, setEditForm] = useState();\n  const [originalForm, setOriginalForm] = useState();\n  const [amount, setAmount] = useState();\n  const [orderDate, setOrderDate] = useState(\"\");\n  const [receivedDate, setReceivedDate] = useState(\"\");\n  const [expirationDate, setExpirationDate] = useState(\"\");\n\n  useEffect(() => {\n    if (logistics.length >= 0) {\n      setLogisticList(logistics);\n      setEditForm(new EditStockForm(logistics));\n      setOriginalForm(new EditStockForm(logistics));\n    }\n  }, [logistics]);\n\n  const checkEmptyInput = (input) => {\n    return input === \"\" || input === \"Invalid date\" || input === null\n      ? null\n      : moment(input).format(\"YYYYMMDD\");\n  };\n\n  const isPassingRestrictions = () => {\n    if (\n      amount != null &&\n      dateFormChecker(receivedDate) &&\n      dateFormChecker(expirationDate)\n    ) {\n      if (amount <= 0) {\n        message.error(\"The amount needs to be a positive number!\");\n        return false;\n      } else if (dateFormChecker(orderDate)) {\n        if (\n          orderDate.isSameOrAfter(receivedDate) &&\n          orderDate.isSameOrAfter(expirationDate)\n        ) {\n          message.error(\n            \"Order date must come before received date and expiration date!\"\n          );\n          return false;\n        }\n      } else if (expirationDate.isSameOrBefore(receivedDate)) {\n        message.error(\"Received date must come before expiration date!\");\n        return false;\n      }\n      return true;\n    }\n    message.error(\n      \"Amount, received date and expiration date needs to be filled!\"\n    );\n    return false;\n  };\n\n  const addStock = async (e) => {\n    if (!isPassingRestrictions()) {\n      return;\n    }\n    const data = {\n      raw_material_id: parseInt(id),\n      stock_id: \"\",\n      amount: amount,\n      order_date: checkEmptyInput(orderDate),\n      received_date: checkEmptyInput(receivedDate),\n      expiration_date: checkEmptyInput(expirationDate),\n    };\n\n    await API.rawMaterial.addStock(id, data).then((res) => {\n      data.stock_id = res.stock_id;\n      editForm.add(res.stock_id, amount);\n    });\n    API.rawMaterial.updateTotalAmount(id);\n\n    const mergedList = logistics.concat(data);\n    setLogisticList(mergedList);\n    sendAddToParent(mergedList);\n    SuccessNotification(\"You have successfully added a new stock\");\n    close(e);\n  };\n  \n  const reduceStock = (e) => {\n    let totalReducedAmount = 0;\n    for (let index = 0; index < logisticList.length; index++) {\n      totalReducedAmount += editForm.stocks[index].subtracted_amount;\n      logisticList[index].amount -= editForm.stocks[index].subtracted_amount;\n    }\n\n    logisticList.forEach((e) => {\n      if (e.amount === 0) {\n        SuccessNotification(\n          \"You have successfully removed Stock \" + e.stock_id\n        );\n      }\n    });\n    sendReductionsToAPI();\n    API.rawMaterial.updateTotalAmount(id);\n\n    //Update the lists\n    editForm.updateForm();\n    const filteredList = logisticList.filter((e) => e.amount !== 0);\n    setLogisticList(filteredList);\n    sendReductionToParent(filteredList, totalReducedAmount);\n    close(e);\n  };\n\n  const sendReductionsToAPI = () => {\n    editForm.stocks.forEach((e) => {\n      if (e.new_amount === 0) {\n        API.rawMaterial.disableStock(id, e);\n      } else if (\n        e.new_amount !== e.old_amount &&\n        e.new_amount > 0 &&\n        e.new_amount < e.old_amount\n      ) {\n        API.rawMaterial.updateStock(id, e);\n      }\n    });\n  };\n\n  const AddStockComponents = (\n    <div className=\"rows\">\n      <div className=\"column-1\">\n        <div className=\"header-field-wrapper\">\n          <span className=\"sub-header\">Amount</span>\n          <InputNumber\n            onChange={(e) => setAmount(e)}\n            value={amount}\n            placeholder=\"e.g. 1000\"\n            min={0}\n          />\n        </div>\n        <div className=\"header-field-wrapper\">\n          <span className=\"sub-header\">Unit</span>\n          {unit}\n        </div>\n      </div>\n      <div className=\"column-2\">\n        <InputDatePicker\n          header=\"Order Date\"\n          value={orderDate}\n          onChange={setOrderDate}\n        />\n        <InputDatePicker\n          header=\"Received Date\"\n          value={receivedDate}\n          onChange={setReceivedDate}\n        />\n        <InputDatePicker\n          header=\"Expiration Date\"\n          value={expirationDate}\n          onChange={setExpirationDate}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <StockInterface\n      visible={visible}\n      close={close}\n      editForm={editForm}\n      originalForm={originalForm}\n      logistics={logisticList}\n      addStock={addStock}\n      reduceStock={reduceStock}\n      AddStockComponents={AddStockComponents}\n    />\n  );\n};\n\nexport default ManageRawMaterialStock;\n","import { useState, useEffect } from \"react\";\nimport { Table, Spin, Checkbox, message, Avatar } from \"antd\";\nimport * as Columns from \"./RawMaterialColumns\";\nimport EditRawMaterial from \"../../components/Inventory/EditRawMaterial\";\nimport { API } from \"../../api\";\nimport \"./RawMaterial.scss\";\nimport { useEditRawMaterial } from \"../../context/edit-raw-material\";\nimport Template from \"../Template\";\nimport { useHistory } from \"react-router\";\nimport InventoryInterface from \"../InventoryInterface\";\nimport ManageRawMaterialStock from \"../../components/Inventory/ManageRawMaterialStock\";\n\nconst RawMaterial = (props) => {\n  const { openEdit, closeEdit, editVisible } = useEditRawMaterial();\n  const [data, setData] = useState([]);\n  const [materialName, setMaterialName] = useState(\"\");\n  const [reStock, setReStock] = useState();\n  const [logistics, setLogistics] = useState([]);\n  const [tableLoading1, setTableLoading1] = useState(true);\n  const [tableLoading2, setTableLoading2] = useState(true);\n  const [showAddReduce, setShowAddReduce] = useState(false);\n  const [unit, setUnit] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [totalAmount, setTotalAmount] = useState(0);\n\n  const id = props.match.params.id;\n  const history = useHistory();\n\n  useEffect(() => {\n    API.rawMaterial.fetchMaterial(id).then((res) => {\n      setData(res);\n      setMaterialName(res[0].material_name);\n      setUnit(res[0].unit);\n      setImage(res[0].image);\n      setReStock(res[0].shopping_list);\n      setTotalAmount(res[0].total_amount);\n      setTableLoading1(false);\n    });\n\n    API.rawMaterial.fetchLogistics(id).then((res) => {\n      setLogistics(res);\n      console.log(res);\n      setTableLoading2(false);\n    });\n  }, [id]);\n\n  const handleRestock = async () => {\n    setReStock(!reStock);\n    API.rawMaterial.handleRestock(id);\n    reStock\n      ? message.warning(\"Item removed from Shopping List\")\n      : message.success(\"Item added to Shopping List\");\n  };\n\n  const handleEdit = (form) => {\n    data[0].material_name = form.name;\n    data[0].content = form.content;\n    data[0].unit = form.unit;\n    data[0].fat = form.fat;\n    data[0].carbohydrate = form.carb;\n    data[0].protein = form.protein;\n    data[0].salt = form.salt;\n    data[0].fiber = form.fiber;\n    data[0].sugar = form.sugar;\n    data[0].country = form.country;\n    data[0].company = form.brand;\n    data[0].location = form.location;\n    data[0].form = form.form;\n    data[0].image = form.image;\n    if (typeof form.image === \"string\") {\n      setImage(form.image);\n    }\n    setMaterialName(form.name);\n  };\n\n  const addStocks = (list) => {\n    const new_amount = list[list.length - 1].amount;\n    data[0].total_amount += new_amount;\n    setTotalAmount(data[0].totalAmount);\n    setLogistics(list);\n  };\n\n  const reduceStocks = (list, reductionAmount) => {\n    data[0].total_amount -= reductionAmount;\n    setTotalAmount(data[0].total_amount);\n    setLogistics(list);\n  };\n\n  const deleteRawMaterial = (e, id) => {\n    API.rawMaterial.disableRawMaterial(id).then((res) => {\n      if (res === \"success\") {\n        return history.push(\"/inventory\");\n      }\n    });\n  };\n\n  const informationTab = (\n    <div className=\"material-header\">\n      <section className=\"item-image\">\n        <div name=\"image\">\n          <Avatar\n            size={275}\n            shape=\"square\"\n            alt=\"Company Logotype\"\n            src={image}\n          />\n        </div>\n        <div className=\"shopping-list\">\n          <Checkbox checked={reStock} onChange={handleRestock}>\n            Add to Shopping List\n          </Checkbox>\n        </div>\n      </section>\n      <section className=\"material-information\">\n        <div className=\"table-section-header\">\n          <h3> General Information </h3>\n          <Spin spinning={tableLoading1} tip=\"Loading...\" size=\"medium\">\n            <Table\n              columns={Columns.general_columns.filter(\n                (col) => col.dataIndex !== \"raw_material_id\"\n              )}\n              dataSource={data}\n              pagination={false}\n              scroll={{ x: \"400px\" }}\n              rowKey={\"material_name\"}\n            />\n          </Spin>\n        </div>\n        <div className=\"table-section-header\">\n          <h3> Nuitritional Facts (per 100g) </h3>\n          <Spin spinning={tableLoading1} tip=\"Loading...\" size=\"medium\">\n            <Table\n              columns={Columns.nuitrition_columns}\n              dataSource={data}\n              pagination={false}\n              rowKey={\"fat\"}\n            />\n          </Spin>\n        </div>\n        <div className=\"table-section-header\">\n          <h3> In Stock </h3>\n          <Spin spinning={tableLoading2} tip=\"Loading...\" size=\"medium\">\n            <Table\n              className=\"table-logistics\"\n              columns={Columns.stocks_columns.filter(\n                (col) => col.dataIndex !== \"stock_id\"\n              )}\n              dataSource={logistics}\n              pagination={{ pageSize: 7 }}\n              rowKey={\"stock_id\"}\n            />\n          </Spin>\n        </div>\n      </section>\n    </div>\n  );\n\n  const manageStock = (\n    <ManageRawMaterialStock\n      close={(e) => {\n        e.stopPropagation();\n        setShowAddReduce(false);\n      }}\n      visible={showAddReduce}\n      id={id}\n      unit={unit}\n      logistics={logistics}\n      sendAddToParent={addStocks}\n      sendReductionToParent={reduceStocks}\n      totalAmount={totalAmount}\n    />\n  );\n\n  const edit = (\n    <EditRawMaterial\n      visible={editVisible[id]}\n      close={(e) => closeEdit(e, id)}\n      data={data[0]}\n      sendChangesToParent={handleEdit}\n      deleteRawMaterial={deleteRawMaterial}\n    />\n  );\n\n  return (\n    <Template\n      content={\n        <InventoryInterface\n          name={materialName}\n          openManageStock={() => setShowAddReduce(true)}\n          manageStock={manageStock}\n          openEdit={() => openEdit(id)}\n          edit={edit}\n          information={informationTab}\n        />\n      }\n    />\n  );\n};\n\nexport default RawMaterial;\n","import moment from \"moment\";\nimport { getPriorityIcon } from \"../../components/General/Priority\";\nimport { Link } from \"react-router-dom\";\n\nexport const general_columns = [\n  {\n    title: \"sfp_id\",\n    dataIndex: \"sfp_id\",\n    key: \"sfp_id\",\n  },\n  {\n    title: \"Name\",\n    dataIndex: \"sfp_name\",\n    key: \"sfp_name\",\n  },\n  {\n    title: \"Total Amount\",\n    dataIndex: \"total_amount\",\n    key: \"total_amount\",\n  },\n  {\n    title: \"Unit\",\n    dataIndex: \"unit\",\n    key: \"unit\",\n  },\n  {\n    title: \"Stored Location\",\n    dataIndex: \"location\",\n    key: \"location\",\n  },\n];\n\nexport const stocks_columns = [\n  {\n    title: \"Stock ID\",\n    dataIndex: \"stock_id\",\n    key: \"stock_id\",\n  },\n  {\n    title: \"Amount\",\n    dataIndex: \"amount\",\n    key: \"amount\",\n  },\n  {\n    title: \"Production Date\",\n    dataIndex: \"production_date\",\n    key: \"production_date\",\n    render: (date) => (\n      <p style={{ marginBottom: \"auto\" }}>\n        {moment(date).format(\"MMM D, YYYY\")}\n      </p>\n    ),\n  },\n  {\n    title: \"Expiration Date\",\n    dataIndex: \"expiration_date\",\n    key: \"expiration_date\",\n    render: (date) =>\n      date === null ? (\n        <p />\n      ) : (\n        <p style={{ marginBottom: \"auto\" }}>\n          {moment(date).format(\"MMM D, YYYY\")}\n        </p>\n      ),\n  },\n  {\n    title: \"Priority of Usage\",\n    dataIndex: \"priority\",\n    key: \"priority\",\n    render: (priority, record) => getPriorityIcon(record.expiration_date),\n  },\n];\n\nexport const formulation_columns = [\n  {\n    title: \"raw_material_id\",\n    dataIndex: \"raw_material_id\",\n    key: \"raw_material_id\",\n  },\n  {\n    title: \"Material Name\",\n    dataIndex: \"material_name\",\n    key: \"material_name\",\n    render: (material_name, record) => (\n      <Link to={`/inventory/rawmaterial/${record.raw_material_id}`}>\n        {material_name}\n      </Link>\n    ),\n  },\n  {\n    title: \"Brand\",\n    dataIndex: \"company\",\n    key: \"company\",\n  },\n  {\n    title: \"Country\",\n    dataIndex: \"country\",\n    key: \"country\",\n  },\n  {\n    title: \"Percentage (%)\",\n    dataIndex: \"percentage\",\n    key: \"percentage\",\n  },\n];\n","import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport StockInterface from \"../StockInterface\";\nimport EditStockForm from \"../../../classes/EditStockForm\";\nimport { InputDatePicker } from \"../../InputFields\";\nimport InputNumber from \"../../General/InputNumber\";\nimport { API } from \"../../../api\";\nimport { message } from \"antd\";\nimport moment from \"moment\";\nimport { SuccessNotification } from \"../../General/Notifications\";\nimport { dateFormChecker } from \"../../../helper/Checker\";\n\nconst ManageSfpStock = ({\n  close,\n  visible,\n  unit,\n  logistics,\n  id,\n  sendAddToParent,\n  sendReductionToParent,\n  totalAmount,\n}) => {\n  const [logisticList, setLogisticList] = useState([]);\n  const [editForm, setEditForm] = useState();\n  const [originalForm, setOriginalForm] = useState();\n  const [amount, setAmount] = useState();\n  const [productionDate, setProductionDate] = useState(\"\");\n  const [expirationDate, setExpirationDate] = useState(\"\");\n\n  useEffect(() => {\n    if (logistics.length >= 0) {\n      setLogisticList(logistics);\n      setEditForm(new EditStockForm(logistics));\n      setOriginalForm(new EditStockForm(logistics));\n    }\n  }, [logistics]);\n\n  const isPassingRestrictions = () => {\n    if (amount != null && dateFormChecker(productionDate)) {\n      if (amount <= 0) {\n        message.error(\"The amount needs to be a positive number!\");\n        return false;\n      }\n      return true;\n    }\n    message.error(\"Amount and production date need to be filled!\");\n    return false;\n  };\n\n  const checkEmptyInput = (input) => {\n    return input === \"\" || input === \"Invalid date\" || input === null\n      ? null\n      : moment(input).format(\"YYYYMMDD\");\n  };\n\n  const addStock = async (e) => {\n    if (!isPassingRestrictions()) {\n      return;\n    }\n\n    const data = {\n      raw_material_id: parseInt(id),\n      stock_id: \"\",\n      amount: amount,\n      production_date: checkEmptyInput(productionDate),\n      expiration_date: checkEmptyInput(expirationDate),\n    };\n\n    // API call and get the new generated stock_id\n    await API.sfp.addStock(id, data).then((res) => {\n      data.stock_id = res.stock_id;\n      editForm.add(res.stock_id, amount);\n    });\n\n    API.sfp.updateTotalAmount(id);\n    const mergedList = logistics.concat(data);\n    setLogisticList(mergedList);\n    sendAddToParent(mergedList);\n    SuccessNotification(\"You have successfully added a new stock\");\n    close(e);\n  };\n\n  const reduceStock = (e) => {\n    let totalReducedAmount = 0;\n    for (let index = 0; index < logisticList.length; index++) {\n      logisticList[index].amount -= editForm.stocks[index].subtracted_amount;\n      totalReducedAmount += editForm.stocks[index].subtracted_amount;\n    }\n\n    logisticList.forEach((e) => {\n      if (e.amount === 0) {\n        SuccessNotification(\n          \"You have successfully removed Stock \" + e.stock_id\n        );\n      }\n    });\n\n    sendReductionsToAPI();\n    API.sfp.updateTotalAmount(id);\n\n    //Update the lists\n    const filteredList = logisticList.filter((e) => e.amount !== 0);\n    editForm.updateForm();\n    setLogisticList(filteredList);\n    sendReductionToParent(filteredList, totalReducedAmount);\n    close(e);\n  };\n\n  const sendReductionsToAPI = () => {\n    editForm.stocks.forEach((e) => {\n      if (e.new_amount === 0) {\n        API.sfp.disableStock(id, e);\n      } else if (\n        e.new_amount !== e.old_amount &&\n        e.new_amount > 0 &&\n        e.new_amount < e.old_amount\n      ) {\n        API.sfp.updateStock(id, e);\n      }\n    });\n  };\n\n  const AddStockComponents = (\n    <div className=\"rows\">\n      <div className=\"column-1\">\n        <div className=\"header-field-wrapper\">\n          <span className=\"sub-header\">Amount</span>\n          <InputNumber\n            onChange={(e) => setAmount(e)}\n            value={amount}\n            placeholder=\"e.g. 1000\"\n            min={0}\n          />\n        </div>\n        <div className=\"header-field-wrapper\">\n          <span className=\"sub-header\">Unit</span>\n          {unit}\n        </div>\n      </div>\n      <div className=\"column-2\">\n        <InputDatePicker\n          header=\"Production Date\"\n          value={productionDate}\n          onChange={setProductionDate}\n        />\n        <InputDatePicker\n          header=\"Expiration Date\"\n          value={expirationDate}\n          onChange={setExpirationDate}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <StockInterface\n      visible={visible}\n      close={close}\n      editForm={editForm}\n      originalForm={originalForm}\n      logistics={logisticList}\n      addStock={addStock}\n      reduceStock={reduceStock}\n      AddStockComponents={AddStockComponents}\n    />\n  );\n};\n\nexport default ManageSfpStock;\n","import TextEditorReadOnly from \"./TextEditorReadOnly\";\n\nexport default TextEditorReadOnly;\n    ","import React from \"react\";\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport PropTypes from \"prop-types\";\nimport \"./TextEditorReadOnly.scss\";\n\nconst TextEditorReadOnly = ({ originalData }) => {\n  TextEditorReadOnly.propTypes = {\n    originalData: PropTypes.string,\n  };\n\n  return (\n    <CKEditor\n      editor={ClassicEditor}\n      data={originalData}\n      disabled={true}\n      config={{\n        removePlugins: [\"toolbar\"],\n        toolbar: [],\n      }}\n      onReady={(editor) => {\n        console.log(\"Ready to read!\", editor);\n      }}\n      onBlur={(event, editor) => {\n        console.log(\"Blur.\", editor);\n      }}\n      onFocus={(event, editor) => {\n        console.log(\"Focus.\", editor);\n      }}\n    />\n  );\n};\n\nexport default TextEditorReadOnly;\n","import SemiFinishedProduct from \"./SemiFinishedProduct\";\n\nexport default SemiFinishedProduct;\n","import Template from \"../Template\";\nimport { useEffect, useState } from \"react\";\nimport { API } from \"../../api\";\nimport InventoryInterface from \"../InventoryInterface\";\nimport { Avatar, Spin, Table } from \"antd\";\nimport {\n  general_columns,\n  stocks_columns,\n  formulation_columns,\n} from \"./SemiFinishedProductColumns\";\nimport EditSfp from \"../../components/Inventory/EditSfp\";\nimport ManageSfpStock from \"../../components/Inventory/ManageSfpStock/ManageSfpStock\";\nimport { useEditSfp } from \"../../context/edit-sfp\";\nimport { useHistory } from \"react-router\";\nimport DOMPurify from \"dompurify\";\nimport TextEditorReadOnly from \"../../components/General/TextEditorReadOnly\";\n\nconst SemiFinishedProduct = (props) => {\n  const id = props.match.params.id;\n  const history = useHistory();\n  const { openEdit, closeEdit, editVisible } = useEditSfp();\n\n  /* States */\n  const [data, setData] = useState([]);\n  const [logistics, setLogistics] = useState([]);\n  const [formulation, setFormulation] = useState([]);\n  const [processSteps, setProcessSteps] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [unit, setUnit] = useState(\"g\");\n  const [image, setImage] = useState(\"\");\n  const [totalAmount, setTotalAmount] = useState();\n  const [tableLoading1, setTableLoading1] = useState(true);\n  const [tableLoading2, setTableLoading2] = useState(true);\n  const [tableLoading3, setTableLoading3] = useState(true);\n  const [showStockModal, setShowStockModal] = useState(false);\n\n  useEffect(() => {\n    API.sfp.fetchSfp(id).then((res) => {\n      setData(res);\n      setProcessSteps(res[0].process_steps);\n      setName(res[0].sfp_name);\n      setUnit(res[0].unit);\n      setImage(res[0].image);\n      setTotalAmount(res[0].total_amount);\n      setTableLoading1(false);\n    });\n\n    API.sfp.fetchFormulation(id).then((res) => {\n      setFormulation(res);\n      setTableLoading2(false);\n    });\n\n    API.sfp.fetchLogistics(id).then((res) => {\n      setLogistics(res);\n      setTableLoading3(false);\n    });\n  }, [id]);\n\n  const editFormulation = (form) => {\n    data[0].sfp_name = form.sfp_name;\n    data[0].location = form.location;\n    data[0].unit = form.unit;\n    data[0].process_steps = form.process_steps;\n    setImage(form.image);\n    setName(form.name);\n    setProcessSteps(form.process_steps);\n    setFormulation(form.editForm);\n  };\n\n  const addStocks = (list) => {\n    const new_amount = list[list.length - 1].amount;\n    data[0].total_amount += new_amount;\n    setTotalAmount(data[0].total_amount);\n    setLogistics(list);\n  };\n\n  const reduceStocks = (list, reductionAmount) => {\n    data[0].total_amount -= reductionAmount;\n    setTotalAmount(data[0].total_amount);\n    setLogistics(list);\n  };\n\n  const deleteSfp = (e, id) => {\n    API.sfp.disableSfp(id).then((res) => {\n      if (res === \"success\") {\n        return history.push(\"/inventory\");\n      }\n    });\n  };\n\n  const informationTab = (\n    <div className=\"material-header\">\n      <section className=\"item-image\">\n        <div name=\"image\">\n          <Avatar\n            size={275}\n            shape=\"square\"\n            alt=\"Company Logotype\"\n            src={image}\n          />\n        </div>\n      </section>\n      <section className=\"material-information\">\n        <div className=\"table-section-header\">\n          <h3> General Information </h3>\n          <Spin spinning={tableLoading1} tip=\"Loading...\" size=\"medium\">\n            <Table\n              columns={general_columns.filter(\n                (col) => col.dataIndex !== \"sfp_id\"\n              )}\n              dataSource={data}\n              pagination={false}\n              rowKey={\"sfp_id\"}\n            />\n          </Spin>\n        </div>\n        <div className=\"table-section-header\">\n          <h3> Formulation </h3>\n          <Spin spinning={tableLoading2} tip=\"Loading...\" size=\"medium\">\n            <Table\n              columns={formulation_columns.filter(\n                (col) => col.dataIndex !== \"raw_material_id\"\n              )}\n              dataSource={formulation}\n              rowKey={\"raw_material_id\"}\n              pagination={false}\n            />\n          </Spin>\n        </div>\n        <div className=\"table-section-header\">\n          <h3> Process Steps </h3>\n            <TextEditorReadOnly\n              originalData={DOMPurify.sanitize(processSteps)}\n            />\n          <div className=\"table-section-header\">\n            <h3> In Stock </h3>\n            <Spin spinning={tableLoading3} tip=\"Loading...\" size=\"medium\">\n              <Table\n                columns={stocks_columns.filter(\n                  (col) => col.dataIndex !== \"stock_id\"\n                )}\n                rowKey={\"stock_id\"}\n                dataSource={logistics}\n              />\n            </Spin>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n\n  const editModal = (\n    <EditSfp\n      visible={editVisible[id]}\n      onClose={(e) => closeEdit(e, id)}\n      data={data[0]}\n      sendChangesToParent={editFormulation}\n      deleteSfp={deleteSfp}\n    />\n  );\n\n  const manageStock = (\n    <ManageSfpStock\n      visible={showStockModal}\n      close={(e) => {\n        e.stopPropagation();\n        setShowStockModal(false);\n      }}\n      logistics={logistics}\n      unit={unit}\n      id={id}\n      sendAddToParent={addStocks}\n      sendReductionToParent={reduceStocks}\n      totalAmount={totalAmount}\n    />\n  );\n\n  return (\n    <Template\n      content={\n        <InventoryInterface\n          name={name}\n          information={informationTab}\n          openEdit={() => openEdit(id)}\n          edit={editModal}\n          manageStock={manageStock}\n          openManageStock={() => setShowStockModal(true)}\n        />\n      }\n    />\n  );\n};\n\nexport default SemiFinishedProduct;\n","export default __webpack_public_path__ + \"static/media/cones.12c901ef.png\";","import React from \"react\";\nimport Photo from \"../images/cones.png\";\nimport Template from \"./Template\";\n\nconst PageNotFound = () => {\n  return (\n    <Template\n      content={\n        <div style={wrapper} id=\"wrapper\">\n          <img style={image} src={Photo} alt=\"\" />\n          <div id=\"info\">\n            <h3>This page could not be found.</h3>\n          </div>\n        </div>\n      }\n    />\n  );\n};\n\nconst wrapper = {\n  display: \"grid\",\n  justifyItems: \"center\",\n  gridTemplateRows: \"3fr 1fr\",\n};\n\nconst image = {\n  width: \"400px\",\n  height: \"400px\",\n};\n\nexport default PageNotFound;\n","import { Route, Switch } from \"react-router-dom\";\r\nimport Dashboard from \"./screens/Dashboard/Dashboard\";\r\nimport LoginPage from \"./screens/LoginPage/LoginPage\";\r\nimport Inventory from \"./screens/Inventory/Inventory\";\r\nimport RawMaterial from \"./screens/RawMaterial/RawMaterial\";\r\nimport { useAuth } from \"./context/auth-context\";\r\nimport SemiFinishedProduct from \"./screens/SemiFinishedProduct\";\r\nimport PageNotFound from \"./screens/PageNotFound\";\r\n\r\nconst App = () => {\r\n  const { loggedIn } = useAuth();\r\n\r\n  return loggedIn ? (\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Dashboard} />\r\n      <Route exact path=\"/dashboard\" component={Dashboard} />\r\n      <Route exact path=\"/inventory\" component={Inventory} />\r\n      <Route exact path=\"/inventory/rawmaterial/:id\" component={RawMaterial} />\r\n      <Route exact path=\"/inventory/sfp/:id\" component={SemiFinishedProduct} />\r\n      <Route component={PageNotFound} />\r\n    </Switch>\r\n  ) : (\r\n    <Switch>\r\n      <Route path=\"/\" component={LoginPage} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"./styles/inputfields.scss\";\r\nimport \"./styles/table.scss\";\r\nimport App from \"./App\";\r\nimport { AuthProvider } from \"./context/auth-context\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport { EditRawMaterialProvider } from \"./context/edit-raw-material\";\r\nimport { EditSfpProvider } from \"./context/edit-sfp\";\r\n\r\nconst history = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n  <Router history={history}>\r\n    <AuthProvider>\r\n      <EditRawMaterialProvider>\r\n        <EditSfpProvider>\r\n          <App />,\r\n        </EditSfpProvider>\r\n      </EditRawMaterialProvider>\r\n    </AuthProvider>\r\n    ,\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}